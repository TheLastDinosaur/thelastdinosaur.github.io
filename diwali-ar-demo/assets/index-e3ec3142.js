(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Sv="157",aD=0,l2=1,oD=2,XM=1,lD=2,Qr=3,io=0,Zs=1,ia=2,Ka=0,_c=1,Pm=2,c2=3,u2=4,cD=5,fc=100,uD=101,hD=102,h2=103,d2=104,dD=200,pD=201,fD=202,mD=203,HM=204,ZM=205,gD=206,yD=207,bD=208,xD=209,vD=210,wD=0,SD=1,_D=2,t1=3,TD=4,ID=5,CD=6,MD=7,KM=0,ED=1,kD=2,Ya=0,ND=1,RD=2,AD=3,LD=4,PD=5,YM=300,Lc=301,Pc=302,n1=303,s1=304,kg=306,cd=1e3,Ji=1001,i1=1002,Es=1003,p2=1004,kb=1005,Ni=1006,DD=1007,ud=1008,ja=1009,FD=1010,OD=1011,_v=1012,jM=1013,Ga=1014,Va=1015,hd=1016,QM=1017,JM=1018,Jo=1020,zD=1021,qi=1023,GD=1024,VD=1025,qo=1026,Dc=1027,WD=1028,qM=1029,$D=1030,eE=1031,tE=1033,Nb=33776,Rb=33777,Ab=33778,Lb=33779,f2=35840,m2=35841,g2=35842,y2=35843,UD=36196,b2=37492,x2=37496,v2=37808,w2=37809,S2=37810,_2=37811,T2=37812,I2=37813,C2=37814,M2=37815,E2=37816,k2=37817,N2=37818,R2=37819,A2=37820,L2=37821,Pb=36492,P2=36494,D2=36495,BD=36283,F2=36284,O2=36285,z2=36286,nE=3e3,Qa=3001,XD=3200,HD=3201,ZD=0,KD=1,Ai="",Dn="srgb",ua="srgb-linear",Tv="display-p3",Ng="display-p3-linear",Dm="linear",jt="srgb",Fm="rec709",Om="p3",Db=7680,YD=519,jD=512,QD=513,JD=514,qD=515,eF=516,tF=517,nF=518,sF=519,G2=35044,V2="300 es",r1=1035,oa=2e3,zm=2001;class uu{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const s=this._listeners;s[e]===void 0&&(s[e]=[]),s[e].indexOf(t)===-1&&s[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const s=this._listeners;return s[e]!==void 0&&s[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const s=this._listeners[e.type];if(s!==void 0){e.target=this;const i=s.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const ls=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Fb=Math.PI/180,a1=180/Math.PI;function Wd(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,s=Math.random()*4294967295|0;return(ls[n&255]+ls[n>>8&255]+ls[n>>16&255]+ls[n>>24&255]+"-"+ls[e&255]+ls[e>>8&255]+"-"+ls[e>>16&15|64]+ls[e>>24&255]+"-"+ls[t&63|128]+ls[t>>8&255]+"-"+ls[t>>16&255]+ls[t>>24&255]+ls[s&255]+ls[s>>8&255]+ls[s>>16&255]+ls[s>>24&255]).toLowerCase()}function $s(n,e,t){return Math.max(e,Math.min(t,n))}function iF(n,e){return(n%e+e)%e}function Ob(n,e,t){return(1-t)*n+t*e}function W2(n){return(n&n-1)===0&&n!==0}function o1(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function Dh(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function zs(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class zt{constructor(e=0,t=0){zt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,s=this.y,i=e.elements;return this.x=i[0]*t+i[3]*s+i[6],this.y=i[1]*t+i[4]*s+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(e,Math.min(t,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const s=this.dot(e)/t;return Math.acos($s(s,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y;return t*t+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const s=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*s-a*i+e.x,this.y=r*i+a*s+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class xt{constructor(e,t,s,i,r,a,o,l,c){xt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,s,i,r,a,o,l,c)}set(e,t,s,i,r,a,o,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=r,u[5]=l,u[6]=s,u[7]=a,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],this}extractBasis(e,t,s){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,i=t.elements,r=this.elements,a=s[0],o=s[3],l=s[6],c=s[1],u=s[4],h=s[7],d=s[2],p=s[5],m=s[8],g=i[0],f=i[3],y=i[6],b=i[1],x=i[4],v=i[7],w=i[2],_=i[5],T=i[8];return r[0]=a*g+o*b+l*w,r[3]=a*f+o*x+l*_,r[6]=a*y+o*v+l*T,r[1]=c*g+u*b+h*w,r[4]=c*f+u*x+h*_,r[7]=c*y+u*v+h*T,r[2]=d*g+p*b+m*w,r[5]=d*f+p*x+m*_,r[8]=d*y+p*v+m*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8];return t*a*u-t*o*c-s*r*u+s*o*l+i*r*c-i*a*l}invert(){const e=this.elements,t=e[0],s=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=u*a-o*c,d=o*l-u*r,p=c*r-a*l,m=t*h+s*d+i*p;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/m;return e[0]=h*g,e[1]=(i*c-u*s)*g,e[2]=(o*s-i*a)*g,e[3]=d*g,e[4]=(u*t-i*l)*g,e[5]=(i*r-o*t)*g,e[6]=p*g,e[7]=(s*l-c*t)*g,e[8]=(a*t-s*r)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,s,i,r,a,o){const l=Math.cos(r),c=Math.sin(r);return this.set(s*l,s*c,-s*(l*a+c*o)+a+e,-i*c,i*l,-i*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(zb.makeScale(e,t)),this}rotate(e){return this.premultiply(zb.makeRotation(-e)),this}translate(e,t){return this.premultiply(zb.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,s,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,s=e.elements;for(let i=0;i<9;i++)if(t[i]!==s[i])return!1;return!0}fromArray(e,t=0){for(let s=0;s<9;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const zb=new xt;function sE(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function dd(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function rF(){const n=dd("canvas");return n.style.display="block",n}const $2={};function id(n){n in $2||($2[n]=!0,console.warn(n))}const U2=new xt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),B2=new xt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Of={[ua]:{transfer:Dm,primaries:Fm,toReference:n=>n,fromReference:n=>n},[Dn]:{transfer:jt,primaries:Fm,toReference:n=>n.convertSRGBToLinear(),fromReference:n=>n.convertLinearToSRGB()},[Ng]:{transfer:Dm,primaries:Om,toReference:n=>n.applyMatrix3(B2),fromReference:n=>n.applyMatrix3(U2)},[Tv]:{transfer:jt,primaries:Om,toReference:n=>n.convertSRGBToLinear().applyMatrix3(B2),fromReference:n=>n.applyMatrix3(U2).convertLinearToSRGB()}},aF=new Set([ua,Ng]),Lt={enabled:!0,_workingColorSpace:ua,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(n){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!n},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(n){if(!aF.has(n))throw new Error(`Unsupported working color space, "${n}".`);this._workingColorSpace=n},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const s=Of[e].toReference,i=Of[t].fromReference;return i(s(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this._workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this._workingColorSpace)},getPrimaries:function(n){return Of[n].primaries},getTransfer:function(n){return n===Ai?Dm:Of[n].transfer}};function Tc(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Gb(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let Kl;class iE{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Kl===void 0&&(Kl=dd("canvas")),Kl.width=e.width,Kl.height=e.height;const s=Kl.getContext("2d");e instanceof ImageData?s.putImageData(e,0,0):s.drawImage(e,0,0,e.width,e.height),t=Kl}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=dd("canvas");t.width=e.width,t.height=e.height;const s=t.getContext("2d");s.drawImage(e,0,0,e.width,e.height);const i=s.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=Tc(r[a]/255)*255;return s.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let s=0;s<t.length;s++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[s]=Math.floor(Tc(t[s]/255)*255):t[s]=Tc(t[s]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let oF=0;class rE{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:oF++}),this.uuid=Wd(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const s={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(Vb(i[a].image)):r.push(Vb(i[a]))}else r=Vb(i);s.url=r}return t||(e.images[this.uuid]=s),s}}function Vb(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?iE.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let lF=0;class Ks extends uu{constructor(e=Ks.DEFAULT_IMAGE,t=Ks.DEFAULT_MAPPING,s=Ji,i=Ji,r=Ni,a=ud,o=qi,l=ja,c=Ks.DEFAULT_ANISOTROPY,u=Ai){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:lF++}),this.uuid=Wd(),this.name="",this.source=new rE(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=s,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new zt(0,0),this.repeat=new zt(1,1),this.center=new zt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new xt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(id("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===Qa?Dn:Ai),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const s={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(s.userData=this.userData),t||(e.textures[this.uuid]=s),s}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==YM)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case cd:e.x=e.x-Math.floor(e.x);break;case Ji:e.x=e.x<0?0:1;break;case i1:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case cd:e.y=e.y-Math.floor(e.y);break;case Ji:e.y=e.y<0?0:1;break;case i1:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return id("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Dn?Qa:nE}set encoding(e){id("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Qa?Dn:Ai}}Ks.DEFAULT_IMAGE=null;Ks.DEFAULT_MAPPING=YM;Ks.DEFAULT_ANISOTROPY=1;class rs{constructor(e=0,t=0,s=0,i=1){rs.prototype.isVector4=!0,this.x=e,this.y=t,this.z=s,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,s,i){return this.x=e,this.y=t,this.z=s,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,s=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*s+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*s+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*s+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*s+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,s,i,r;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],p=l[5],m=l[9],g=l[2],f=l[6],y=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(m-f)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(m+f)<.1&&Math.abs(c+p+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,v=(p+1)/2,w=(y+1)/2,_=(u+d)/4,T=(h+g)/4,C=(m+f)/4;return x>v&&x>w?x<.01?(s=0,i=.707106781,r=.707106781):(s=Math.sqrt(x),i=_/s,r=T/s):v>w?v<.01?(s=.707106781,i=0,r=.707106781):(i=Math.sqrt(v),s=_/i,r=C/i):w<.01?(s=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),s=T/r,i=C/r),this.set(s,i,r,t),this}let b=Math.sqrt((f-m)*(f-m)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(f-m)/b,this.y=(h-g)/b,this.z=(d-u)/b,this.w=Math.acos((c+p+y-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(e,Math.min(t,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this.w=e.w+(t.w-e.w)*s,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class cF extends uu{constructor(e=1,t=1,s={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new rs(0,0,e,t),this.scissorTest=!1,this.viewport=new rs(0,0,e,t);const i={width:e,height:t,depth:1};s.encoding!==void 0&&(id("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),s.colorSpace=s.encoding===Qa?Dn:Ai),s=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ni,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},s),this.texture=new Ks(i,s.mapping,s.wrapS,s.wrapT,s.magFilter,s.minFilter,s.format,s.type,s.anisotropy,s.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=s.generateMipmaps,this.texture.internalFormat=s.internalFormat,this.depthBuffer=s.depthBuffer,this.stencilBuffer=s.stencilBuffer,this.depthTexture=s.depthTexture,this.samples=s.samples}setSize(e,t,s=1){(this.width!==e||this.height!==t||this.depth!==s)&&(this.width=e,this.height=t,this.depth=s,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=s,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new rE(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ul extends cF{constructor(e=1,t=1,s={}){super(e,t,s),this.isWebGLRenderTarget=!0}}class aE extends Ks{constructor(e=null,t=1,s=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:s,depth:i},this.magFilter=Es,this.minFilter=Es,this.wrapR=Ji,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class uF extends Ks{constructor(e=null,t=1,s=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:s,depth:i},this.magFilter=Es,this.minFilter=Es,this.wrapR=Ji,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class wa{constructor(e=0,t=0,s=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=s,this._w=i}static slerpFlat(e,t,s,i,r,a,o){let l=s[i+0],c=s[i+1],u=s[i+2],h=s[i+3];const d=r[a+0],p=r[a+1],m=r[a+2],g=r[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(o===1){e[t+0]=d,e[t+1]=p,e[t+2]=m,e[t+3]=g;return}if(h!==g||l!==d||c!==p||u!==m){let f=1-o;const y=l*d+c*p+u*m+h*g,b=y>=0?1:-1,x=1-y*y;if(x>Number.EPSILON){const w=Math.sqrt(x),_=Math.atan2(w,y*b);f=Math.sin(f*_)/w,o=Math.sin(o*_)/w}const v=o*b;if(l=l*f+d*v,c=c*f+p*v,u=u*f+m*v,h=h*f+g*v,f===1-o){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,s,i,r,a){const o=s[i],l=s[i+1],c=s[i+2],u=s[i+3],h=r[a],d=r[a+1],p=r[a+2],m=r[a+3];return e[t]=o*m+u*h+l*p-c*d,e[t+1]=l*m+u*d+c*h-o*p,e[t+2]=c*m+u*p+o*d-l*h,e[t+3]=u*m-o*h-l*d-c*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,s,i){return this._x=e,this._y=t,this._z=s,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const s=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(s/2),u=o(i/2),h=o(r/2),d=l(s/2),p=l(i/2),m=l(r/2);switch(a){case"XYZ":this._x=d*u*h+c*p*m,this._y=c*p*h-d*u*m,this._z=c*u*m+d*p*h,this._w=c*u*h-d*p*m;break;case"YXZ":this._x=d*u*h+c*p*m,this._y=c*p*h-d*u*m,this._z=c*u*m-d*p*h,this._w=c*u*h+d*p*m;break;case"ZXY":this._x=d*u*h-c*p*m,this._y=c*p*h+d*u*m,this._z=c*u*m+d*p*h,this._w=c*u*h-d*p*m;break;case"ZYX":this._x=d*u*h-c*p*m,this._y=c*p*h+d*u*m,this._z=c*u*m-d*p*h,this._w=c*u*h+d*p*m;break;case"YZX":this._x=d*u*h+c*p*m,this._y=c*p*h+d*u*m,this._z=c*u*m-d*p*h,this._w=c*u*h-d*p*m;break;case"XZY":this._x=d*u*h-c*p*m,this._y=c*p*h-d*u*m,this._z=c*u*m+d*p*h,this._w=c*u*h+d*p*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const s=t/2,i=Math.sin(s);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,s=t[0],i=t[4],r=t[8],a=t[1],o=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=s+o+h;if(d>0){const p=.5/Math.sqrt(d+1);this._w=.25/p,this._x=(u-l)*p,this._y=(r-c)*p,this._z=(a-i)*p}else if(s>o&&s>h){const p=2*Math.sqrt(1+s-o-h);this._w=(u-l)/p,this._x=.25*p,this._y=(i+a)/p,this._z=(r+c)/p}else if(o>h){const p=2*Math.sqrt(1+o-s-h);this._w=(r-c)/p,this._x=(i+a)/p,this._y=.25*p,this._z=(l+u)/p}else{const p=2*Math.sqrt(1+h-s-o);this._w=(a-i)/p,this._x=(r+c)/p,this._y=(l+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let s=e.dot(t)+1;return s<Number.EPSILON?(s=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=s):(this._x=0,this._y=-e.z,this._z=e.y,this._w=s)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=s),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs($s(this.dot(e),-1,1)))}rotateTowards(e,t){const s=this.angleTo(e);if(s===0)return this;const i=Math.min(1,t/s);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const s=e._x,i=e._y,r=e._z,a=e._w,o=t._x,l=t._y,c=t._z,u=t._w;return this._x=s*u+a*o+i*c-r*l,this._y=i*u+a*l+r*o-s*c,this._z=r*u+a*c+s*l-i*o,this._w=a*u-s*o-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const s=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+s*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=s,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const p=1-t;return this._w=p*a+t*this._w,this._x=p*s+t*this._x,this._y=p*i+t*this._y,this._z=p*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,o),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=a*h+this._w*d,this._x=s*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,s){return this.copy(e).slerp(t,s)}random(){const e=Math.random(),t=Math.sqrt(1-e),s=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),s*Math.sin(r),s*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ae{constructor(e=0,t=0,s=0){ae.prototype.isVector3=!0,this.x=e,this.y=t,this.z=s}set(e,t,s){return s===void 0&&(s=this.z),this.x=e,this.y=t,this.z=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(X2.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(X2.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,s=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*s+r[6]*i,this.y=r[1]*t+r[4]*s+r[7]*i,this.z=r[2]*t+r[5]*s+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,s=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*s+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*s+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*s+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*s+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,s=this.y,i=this.z,r=e.x,a=e.y,o=e.z,l=e.w,c=l*t+a*i-o*s,u=l*s+o*t-r*i,h=l*i+r*s-a*t,d=-r*t-a*s-o*i;return this.x=c*l+d*-r+u*-o-h*-a,this.y=u*l+d*-a+h*-r-c*-o,this.z=h*l+d*-o+c*-a-u*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,s=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*s+r[8]*i,this.y=r[1]*t+r[5]*s+r[9]*i,this.z=r[2]*t+r[6]*s+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(e,Math.min(t,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const s=e.x,i=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*a-s*l,this.z=s*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const s=e.dot(this)/t;return this.copy(e).multiplyScalar(s)}projectOnPlane(e){return Wb.copy(this).projectOnVector(e),this.sub(Wb)}reflect(e){return this.sub(Wb.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const s=this.dot(e)/t;return Math.acos($s(s,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y,i=this.z-e.z;return t*t+s*s+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,s){const i=Math.sin(t)*e;return this.x=i*Math.sin(s),this.y=Math.cos(t)*e,this.z=i*Math.cos(s),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,s){return this.x=e*Math.sin(t),this.y=s,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),s=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=s,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,s=Math.sqrt(1-e**2);return this.x=s*Math.cos(t),this.y=s*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Wb=new ae,X2=new wa;class $d{constructor(e=new ae(1/0,1/0,1/0),t=new ae(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,s=e.length;t<s;t+=3)this.expandByPoint(Xr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,s=e.count;t<s;t++)this.expandByPoint(Xr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,s=e.length;t<s;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const s=Xr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(s),this.max.copy(e).add(s),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Yl.copy(e.boundingBox),Yl.applyMatrix4(e.matrixWorld),this.union(Yl);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let a=0,o=r.count;a<o;a++)Xr.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Xr)}else i.boundingBox===null&&i.computeBoundingBox(),Yl.copy(i.boundingBox),Yl.applyMatrix4(e.matrixWorld),this.union(Yl)}const s=e.children;for(let i=0,r=s.length;i<r;i++)this.expandByObject(s[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Xr),Xr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,s;return e.normal.x>0?(t=e.normal.x*this.min.x,s=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,s=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,s+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,s+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,s+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,s+=e.normal.z*this.min.z),t<=-e.constant&&s>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Fh),zf.subVectors(this.max,Fh),jl.subVectors(e.a,Fh),Ql.subVectors(e.b,Fh),Jl.subVectors(e.c,Fh),Ra.subVectors(Ql,jl),Aa.subVectors(Jl,Ql),Eo.subVectors(jl,Jl);let t=[0,-Ra.z,Ra.y,0,-Aa.z,Aa.y,0,-Eo.z,Eo.y,Ra.z,0,-Ra.x,Aa.z,0,-Aa.x,Eo.z,0,-Eo.x,-Ra.y,Ra.x,0,-Aa.y,Aa.x,0,-Eo.y,Eo.x,0];return!$b(t,jl,Ql,Jl,zf)||(t=[1,0,0,0,1,0,0,0,1],!$b(t,jl,Ql,Jl,zf))?!1:(Gf.crossVectors(Ra,Aa),t=[Gf.x,Gf.y,Gf.z],$b(t,jl,Ql,Jl,zf))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Xr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Xr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Br[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Br[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Br[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Br[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Br[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Br[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Br[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Br[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Br),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Br=[new ae,new ae,new ae,new ae,new ae,new ae,new ae,new ae],Xr=new ae,Yl=new $d,jl=new ae,Ql=new ae,Jl=new ae,Ra=new ae,Aa=new ae,Eo=new ae,Fh=new ae,zf=new ae,Gf=new ae,ko=new ae;function $b(n,e,t,s,i){for(let r=0,a=n.length-3;r<=a;r+=3){ko.fromArray(n,r);const o=i.x*Math.abs(ko.x)+i.y*Math.abs(ko.y)+i.z*Math.abs(ko.z),l=e.dot(ko),c=t.dot(ko),u=s.dot(ko);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>o)return!1}return!0}const hF=new $d,Oh=new ae,Ub=new ae;class Iv{constructor(e=new ae,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const s=this.center;t!==void 0?s.copy(t):hF.setFromPoints(e).getCenter(s);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,s.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const s=this.center.distanceToSquared(e);return t.copy(e),s>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Oh.subVectors(e,this.center);const t=Oh.lengthSq();if(t>this.radius*this.radius){const s=Math.sqrt(t),i=(s-this.radius)*.5;this.center.addScaledVector(Oh,i/s),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Ub.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Oh.copy(e.center).add(Ub)),this.expandByPoint(Oh.copy(e.center).sub(Ub))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Hr=new ae,Bb=new ae,Vf=new ae,La=new ae,Xb=new ae,Wf=new ae,Hb=new ae;class oE{constructor(e=new ae,t=new ae(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Hr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const s=t.dot(this.direction);return s<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,s)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Hr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Hr.copy(this.origin).addScaledVector(this.direction,t),Hr.distanceToSquared(e))}distanceSqToSegment(e,t,s,i){Bb.copy(e).add(t).multiplyScalar(.5),Vf.copy(t).sub(e).normalize(),La.copy(this.origin).sub(Bb);const r=e.distanceTo(t)*.5,a=-this.direction.dot(Vf),o=La.dot(this.direction),l=-La.dot(Vf),c=La.lengthSq(),u=Math.abs(1-a*a);let h,d,p,m;if(u>0)if(h=a*l-o,d=a*o-l,m=r*u,h>=0)if(d>=-m)if(d<=m){const g=1/u;h*=g,d*=g,p=h*(h+a*d+2*o)+d*(a*h+d+2*l)+c}else d=r,h=Math.max(0,-(a*d+o)),p=-h*h+d*(d+2*l)+c;else d=-r,h=Math.max(0,-(a*d+o)),p=-h*h+d*(d+2*l)+c;else d<=-m?(h=Math.max(0,-(-a*r+o)),d=h>0?-r:Math.min(Math.max(-r,-l),r),p=-h*h+d*(d+2*l)+c):d<=m?(h=0,d=Math.min(Math.max(-r,-l),r),p=d*(d+2*l)+c):(h=Math.max(0,-(a*r+o)),d=h>0?r:Math.min(Math.max(-r,-l),r),p=-h*h+d*(d+2*l)+c);else d=a>0?-r:r,h=Math.max(0,-(a*d+o)),p=-h*h+d*(d+2*l)+c;return s&&s.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(Bb).addScaledVector(Vf,d),p}intersectSphere(e,t){Hr.subVectors(e.center,this.origin);const s=Hr.dot(this.direction),i=Hr.dot(Hr)-s*s,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=s-a,l=s+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const s=-(this.origin.dot(e.normal)+e.constant)/t;return s>=0?s:null}intersectPlane(e,t){const s=this.distanceToPlane(e);return s===null?null:this.at(s,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let s,i,r,a,o,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(s=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(s=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),u>=0?(r=(e.min.y-d.y)*u,a=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,a=(e.min.y-d.y)*u),s>a||r>i||((r>s||isNaN(s))&&(s=r),(a<i||isNaN(i))&&(i=a),h>=0?(o=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(o=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),s>l||o>i)||((o>s||s!==s)&&(s=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(s>=0?s:i,t)}intersectsBox(e){return this.intersectBox(e,Hr)!==null}intersectTriangle(e,t,s,i,r){Xb.subVectors(t,e),Wf.subVectors(s,e),Hb.crossVectors(Xb,Wf);let a=this.direction.dot(Hb),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;La.subVectors(this.origin,e);const l=o*this.direction.dot(Wf.crossVectors(La,Wf));if(l<0)return null;const c=o*this.direction.dot(Xb.cross(La));if(c<0||l+c>a)return null;const u=-o*La.dot(Hb);return u<0?null:this.at(u/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class un{constructor(e,t,s,i,r,a,o,l,c,u,h,d,p,m,g,f){un.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,s,i,r,a,o,l,c,u,h,d,p,m,g,f)}set(e,t,s,i,r,a,o,l,c,u,h,d,p,m,g,f){const y=this.elements;return y[0]=e,y[4]=t,y[8]=s,y[12]=i,y[1]=r,y[5]=a,y[9]=o,y[13]=l,y[2]=c,y[6]=u,y[10]=h,y[14]=d,y[3]=p,y[7]=m,y[11]=g,y[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new un().fromArray(this.elements)}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],t[9]=s[9],t[10]=s[10],t[11]=s[11],t[12]=s[12],t[13]=s[13],t[14]=s[14],t[15]=s[15],this}copyPosition(e){const t=this.elements,s=e.elements;return t[12]=s[12],t[13]=s[13],t[14]=s[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,s){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(e,t,s){return this.set(e.x,t.x,s.x,0,e.y,t.y,s.y,0,e.z,t.z,s.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,s=e.elements,i=1/ql.setFromMatrixColumn(e,0).length(),r=1/ql.setFromMatrixColumn(e,1).length(),a=1/ql.setFromMatrixColumn(e,2).length();return t[0]=s[0]*i,t[1]=s[1]*i,t[2]=s[2]*i,t[3]=0,t[4]=s[4]*r,t[5]=s[5]*r,t[6]=s[6]*r,t[7]=0,t[8]=s[8]*a,t[9]=s[9]*a,t[10]=s[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,s=e.x,i=e.y,r=e.z,a=Math.cos(s),o=Math.sin(s),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=a*u,p=a*h,m=o*u,g=o*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=p+m*c,t[5]=d-g*c,t[9]=-o*l,t[2]=g-d*c,t[6]=m+p*c,t[10]=a*l}else if(e.order==="YXZ"){const d=l*u,p=l*h,m=c*u,g=c*h;t[0]=d+g*o,t[4]=m*o-p,t[8]=a*c,t[1]=a*h,t[5]=a*u,t[9]=-o,t[2]=p*o-m,t[6]=g+d*o,t[10]=a*l}else if(e.order==="ZXY"){const d=l*u,p=l*h,m=c*u,g=c*h;t[0]=d-g*o,t[4]=-a*h,t[8]=m+p*o,t[1]=p+m*o,t[5]=a*u,t[9]=g-d*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const d=a*u,p=a*h,m=o*u,g=o*h;t[0]=l*u,t[4]=m*c-p,t[8]=d*c+g,t[1]=l*h,t[5]=g*c+d,t[9]=p*c-m,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const d=a*l,p=a*c,m=o*l,g=o*c;t[0]=l*u,t[4]=g-d*h,t[8]=m*h+p,t[1]=h,t[5]=a*u,t[9]=-o*u,t[2]=-c*u,t[6]=p*h+m,t[10]=d-g*h}else if(e.order==="XZY"){const d=a*l,p=a*c,m=o*l,g=o*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+g,t[5]=a*u,t[9]=p*h-m,t[2]=m*h-p,t[6]=o*u,t[10]=g*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(dF,e,pF)}lookAt(e,t,s){const i=this.elements;return oi.subVectors(e,t),oi.lengthSq()===0&&(oi.z=1),oi.normalize(),Pa.crossVectors(s,oi),Pa.lengthSq()===0&&(Math.abs(s.z)===1?oi.x+=1e-4:oi.z+=1e-4,oi.normalize(),Pa.crossVectors(s,oi)),Pa.normalize(),$f.crossVectors(oi,Pa),i[0]=Pa.x,i[4]=$f.x,i[8]=oi.x,i[1]=Pa.y,i[5]=$f.y,i[9]=oi.y,i[2]=Pa.z,i[6]=$f.z,i[10]=oi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,i=t.elements,r=this.elements,a=s[0],o=s[4],l=s[8],c=s[12],u=s[1],h=s[5],d=s[9],p=s[13],m=s[2],g=s[6],f=s[10],y=s[14],b=s[3],x=s[7],v=s[11],w=s[15],_=i[0],T=i[4],C=i[8],S=i[12],M=i[1],A=i[5],P=i[9],D=i[13],N=i[2],L=i[6],G=i[10],V=i[14],U=i[3],H=i[7],j=i[11],O=i[15];return r[0]=a*_+o*M+l*N+c*U,r[4]=a*T+o*A+l*L+c*H,r[8]=a*C+o*P+l*G+c*j,r[12]=a*S+o*D+l*V+c*O,r[1]=u*_+h*M+d*N+p*U,r[5]=u*T+h*A+d*L+p*H,r[9]=u*C+h*P+d*G+p*j,r[13]=u*S+h*D+d*V+p*O,r[2]=m*_+g*M+f*N+y*U,r[6]=m*T+g*A+f*L+y*H,r[10]=m*C+g*P+f*G+y*j,r[14]=m*S+g*D+f*V+y*O,r[3]=b*_+x*M+v*N+w*U,r[7]=b*T+x*A+v*L+w*H,r[11]=b*C+x*P+v*G+w*j,r[15]=b*S+x*D+v*V+w*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[4],i=e[8],r=e[12],a=e[1],o=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],p=e[14],m=e[3],g=e[7],f=e[11],y=e[15];return m*(+r*l*h-i*c*h-r*o*d+s*c*d+i*o*p-s*l*p)+g*(+t*l*p-t*c*d+r*a*d-i*a*p+i*c*u-r*l*u)+f*(+t*c*h-t*o*p-r*a*h+s*a*p+r*o*u-s*c*u)+y*(-i*o*u-t*l*h+t*o*d+i*a*h-s*a*d+s*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,s){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=s),this}invert(){const e=this.elements,t=e[0],s=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],p=e[11],m=e[12],g=e[13],f=e[14],y=e[15],b=h*f*c-g*d*c+g*l*p-o*f*p-h*l*y+o*d*y,x=m*d*c-u*f*c-m*l*p+a*f*p+u*l*y-a*d*y,v=u*g*c-m*h*c+m*o*p-a*g*p-u*o*y+a*h*y,w=m*h*l-u*g*l-m*o*d+a*g*d+u*o*f-a*h*f,_=t*b+s*x+i*v+r*w;if(_===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/_;return e[0]=b*T,e[1]=(g*d*r-h*f*r-g*i*p+s*f*p+h*i*y-s*d*y)*T,e[2]=(o*f*r-g*l*r+g*i*c-s*f*c-o*i*y+s*l*y)*T,e[3]=(h*l*r-o*d*r-h*i*c+s*d*c+o*i*p-s*l*p)*T,e[4]=x*T,e[5]=(u*f*r-m*d*r+m*i*p-t*f*p-u*i*y+t*d*y)*T,e[6]=(m*l*r-a*f*r-m*i*c+t*f*c+a*i*y-t*l*y)*T,e[7]=(a*d*r-u*l*r+u*i*c-t*d*c-a*i*p+t*l*p)*T,e[8]=v*T,e[9]=(m*h*r-u*g*r-m*s*p+t*g*p+u*s*y-t*h*y)*T,e[10]=(a*g*r-m*o*r+m*s*c-t*g*c-a*s*y+t*o*y)*T,e[11]=(u*o*r-a*h*r-u*s*c+t*h*c+a*s*p-t*o*p)*T,e[12]=w*T,e[13]=(u*g*i-m*h*i+m*s*d-t*g*d-u*s*f+t*h*f)*T,e[14]=(m*o*i-a*g*i-m*s*l+t*g*l+a*s*f-t*o*f)*T,e[15]=(a*h*i-u*o*i+u*s*l-t*h*l-a*s*d+t*o*d)*T,this}scale(e){const t=this.elements,s=e.x,i=e.y,r=e.z;return t[0]*=s,t[4]*=i,t[8]*=r,t[1]*=s,t[5]*=i,t[9]*=r,t[2]*=s,t[6]*=i,t[10]*=r,t[3]*=s,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],s=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,s,i))}makeTranslation(e,t,s){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,s,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),s=Math.sin(e);return this.set(1,0,0,0,0,t,-s,0,0,s,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,0,s,0,0,1,0,0,-s,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,0,s,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const s=Math.cos(t),i=Math.sin(t),r=1-s,a=e.x,o=e.y,l=e.z,c=r*a,u=r*o;return this.set(c*a+s,c*o-i*l,c*l+i*o,0,c*o+i*l,u*o+s,u*l-i*a,0,c*l-i*o,u*l+i*a,r*l*l+s,0,0,0,0,1),this}makeScale(e,t,s){return this.set(e,0,0,0,0,t,0,0,0,0,s,0,0,0,0,1),this}makeShear(e,t,s,i,r,a){return this.set(1,s,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,s){const i=this.elements,r=t._x,a=t._y,o=t._z,l=t._w,c=r+r,u=a+a,h=o+o,d=r*c,p=r*u,m=r*h,g=a*u,f=a*h,y=o*h,b=l*c,x=l*u,v=l*h,w=s.x,_=s.y,T=s.z;return i[0]=(1-(g+y))*w,i[1]=(p+v)*w,i[2]=(m-x)*w,i[3]=0,i[4]=(p-v)*_,i[5]=(1-(d+y))*_,i[6]=(f+b)*_,i[7]=0,i[8]=(m+x)*T,i[9]=(f-b)*T,i[10]=(1-(d+g))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,s){const i=this.elements;let r=ql.set(i[0],i[1],i[2]).length();const a=ql.set(i[4],i[5],i[6]).length(),o=ql.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Hi.copy(this);const c=1/r,u=1/a,h=1/o;return Hi.elements[0]*=c,Hi.elements[1]*=c,Hi.elements[2]*=c,Hi.elements[4]*=u,Hi.elements[5]*=u,Hi.elements[6]*=u,Hi.elements[8]*=h,Hi.elements[9]*=h,Hi.elements[10]*=h,t.setFromRotationMatrix(Hi),s.x=r,s.y=a,s.z=o,this}makePerspective(e,t,s,i,r,a,o=oa){const l=this.elements,c=2*r/(t-e),u=2*r/(s-i),h=(t+e)/(t-e),d=(s+i)/(s-i);let p,m;if(o===oa)p=-(a+r)/(a-r),m=-2*a*r/(a-r);else if(o===zm)p=-a/(a-r),m=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=p,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,s,i,r,a,o=oa){const l=this.elements,c=1/(t-e),u=1/(s-i),h=1/(a-r),d=(t+e)*c,p=(s+i)*u;let m,g;if(o===oa)m=(a+r)*h,g=-2*h;else if(o===zm)m=r*h,g=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-p,l[2]=0,l[6]=0,l[10]=g,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,s=e.elements;for(let i=0;i<16;i++)if(t[i]!==s[i])return!1;return!0}fromArray(e,t=0){for(let s=0;s<16;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e[t+9]=s[9],e[t+10]=s[10],e[t+11]=s[11],e[t+12]=s[12],e[t+13]=s[13],e[t+14]=s[14],e[t+15]=s[15],e}}const ql=new ae,Hi=new un,dF=new ae(0,0,0),pF=new ae(1,1,1),Pa=new ae,$f=new ae,oi=new ae,H2=new un,Z2=new wa;class Rg{constructor(e=0,t=0,s=0,i=Rg.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=s,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,s,i=this._order){return this._x=e,this._y=t,this._z=s,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,s=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin($s(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-$s(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin($s(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-$s(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin($s(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-$s(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,s===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,s){return H2.makeRotationFromQuaternion(e),this.setFromRotationMatrix(H2,t,s)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Z2.setFromEuler(this),this.setFromQuaternion(Z2,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Rg.DEFAULT_ORDER="XYZ";class Cv{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let fF=0;const K2=new ae,ec=new wa,Zr=new un,Uf=new ae,zh=new ae,mF=new ae,gF=new wa,Y2=new ae(1,0,0),j2=new ae(0,1,0),Q2=new ae(0,0,1),yF={type:"added"},bF={type:"removed"};class Ns extends uu{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:fF++}),this.uuid=Wd(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ns.DEFAULT_UP.clone();const e=new ae,t=new Rg,s=new wa,i=new ae(1,1,1);function r(){s.setFromEuler(t,!1)}function a(){t.setFromQuaternion(s,void 0,!1)}t._onChange(r),s._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:s},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new un},normalMatrix:{value:new xt}}),this.matrix=new un,this.matrixWorld=new un,this.matrixAutoUpdate=Ns.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Ns.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Cv,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ec.setFromAxisAngle(e,t),this.quaternion.multiply(ec),this}rotateOnWorldAxis(e,t){return ec.setFromAxisAngle(e,t),this.quaternion.premultiply(ec),this}rotateX(e){return this.rotateOnAxis(Y2,e)}rotateY(e){return this.rotateOnAxis(j2,e)}rotateZ(e){return this.rotateOnAxis(Q2,e)}translateOnAxis(e,t){return K2.copy(e).applyQuaternion(this.quaternion),this.position.add(K2.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Y2,e)}translateY(e){return this.translateOnAxis(j2,e)}translateZ(e){return this.translateOnAxis(Q2,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Zr.copy(this.matrixWorld).invert())}lookAt(e,t,s){e.isVector3?Uf.copy(e):Uf.set(e,t,s);const i=this.parent;this.updateWorldMatrix(!0,!1),zh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Zr.lookAt(zh,Uf,this.up):Zr.lookAt(Uf,zh,this.up),this.quaternion.setFromRotationMatrix(Zr),i&&(Zr.extractRotation(i.matrixWorld),ec.setFromRotationMatrix(Zr),this.quaternion.premultiply(ec.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(yF)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.remove(arguments[s]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(bF)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Zr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Zr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Zr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let s=0,i=this.children.length;s<i;s++){const a=this.children[s].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let s=[];this[e]===t&&s.push(this);for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectsByProperty(e,t);a.length>0&&(s=s.concat(a))}return s}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zh,e,mF),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zh,gF,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let s=0,i=t.length;s<i;s++)t[s].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let s=0,i=t.length;s<i;s++)t[s].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let s=0,i=t.length;s<i;s++){const r=t[s];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const s=this.parent;if(e===!0&&s!==null&&s.matrixWorldAutoUpdate===!0&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const o=i[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",s={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},s.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(e.shapes,h)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(r(e.materials,this.material[l]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(r(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),u=a(e.images),h=a(e.shapes),d=a(e.skeletons),p=a(e.animations),m=a(e.nodes);o.length>0&&(s.geometries=o),l.length>0&&(s.materials=l),c.length>0&&(s.textures=c),u.length>0&&(s.images=u),h.length>0&&(s.shapes=h),d.length>0&&(s.skeletons=d),p.length>0&&(s.animations=p),m.length>0&&(s.nodes=m)}return s.object=i,s;function a(o){const l=[];for(const c in o){const u=o[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let s=0;s<e.children.length;s++){const i=e.children[s];this.add(i.clone())}return this}}Ns.DEFAULT_UP=new ae(0,1,0);Ns.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ns.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Zi=new ae,Kr=new ae,Zb=new ae,Yr=new ae,tc=new ae,nc=new ae,J2=new ae,Kb=new ae,Yb=new ae,jb=new ae;let Bf=!1;class Yi{constructor(e=new ae,t=new ae,s=new ae){this.a=e,this.b=t,this.c=s}static getNormal(e,t,s,i){i.subVectors(s,t),Zi.subVectors(e,t),i.cross(Zi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,s,i,r){Zi.subVectors(i,t),Kr.subVectors(s,t),Zb.subVectors(e,t);const a=Zi.dot(Zi),o=Zi.dot(Kr),l=Zi.dot(Zb),c=Kr.dot(Kr),u=Kr.dot(Zb),h=a*c-o*o;if(h===0)return r.set(-2,-1,-1);const d=1/h,p=(c*l-o*u)*d,m=(a*u-o*l)*d;return r.set(1-p-m,m,p)}static containsPoint(e,t,s,i){return this.getBarycoord(e,t,s,i,Yr),Yr.x>=0&&Yr.y>=0&&Yr.x+Yr.y<=1}static getUV(e,t,s,i,r,a,o,l){return Bf===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Bf=!0),this.getInterpolation(e,t,s,i,r,a,o,l)}static getInterpolation(e,t,s,i,r,a,o,l){return this.getBarycoord(e,t,s,i,Yr),l.setScalar(0),l.addScaledVector(r,Yr.x),l.addScaledVector(a,Yr.y),l.addScaledVector(o,Yr.z),l}static isFrontFacing(e,t,s,i){return Zi.subVectors(s,t),Kr.subVectors(e,t),Zi.cross(Kr).dot(i)<0}set(e,t,s){return this.a.copy(e),this.b.copy(t),this.c.copy(s),this}setFromPointsAndIndices(e,t,s,i){return this.a.copy(e[t]),this.b.copy(e[s]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,s,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,s),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Zi.subVectors(this.c,this.b),Kr.subVectors(this.a,this.b),Zi.cross(Kr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Yi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Yi.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,s,i,r){return Bf===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Bf=!0),Yi.getInterpolation(e,this.a,this.b,this.c,t,s,i,r)}getInterpolation(e,t,s,i,r){return Yi.getInterpolation(e,this.a,this.b,this.c,t,s,i,r)}containsPoint(e){return Yi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Yi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const s=this.a,i=this.b,r=this.c;let a,o;tc.subVectors(i,s),nc.subVectors(r,s),Kb.subVectors(e,s);const l=tc.dot(Kb),c=nc.dot(Kb);if(l<=0&&c<=0)return t.copy(s);Yb.subVectors(e,i);const u=tc.dot(Yb),h=nc.dot(Yb);if(u>=0&&h<=u)return t.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return a=l/(l-u),t.copy(s).addScaledVector(tc,a);jb.subVectors(e,r);const p=tc.dot(jb),m=nc.dot(jb);if(m>=0&&p<=m)return t.copy(r);const g=p*c-l*m;if(g<=0&&c>=0&&m<=0)return o=c/(c-m),t.copy(s).addScaledVector(nc,o);const f=u*m-p*h;if(f<=0&&h-u>=0&&p-m>=0)return J2.subVectors(r,i),o=(h-u)/(h-u+(p-m)),t.copy(i).addScaledVector(J2,o);const y=1/(f+g+d);return a=g*y,o=d*y,t.copy(s).addScaledVector(tc,a).addScaledVector(nc,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let xF=0;class Ag extends uu{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xF++}),this.uuid=Wd(),this.name="",this.type="Material",this.blending=_c,this.side=io,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=HM,this.blendDst=ZM,this.blendEquation=fc,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=t1,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=YD,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Db,this.stencilZFail=Db,this.stencilZPass=Db,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const s=e[t];if(s===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(s):i&&i.isVector3&&s&&s.isVector3?i.copy(s):this[t]=s}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const s={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.color&&this.color.isColor&&(s.color=this.color.getHex()),this.roughness!==void 0&&(s.roughness=this.roughness),this.metalness!==void 0&&(s.metalness=this.metalness),this.sheen!==void 0&&(s.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(s.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(s.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(s.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(s.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(s.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(s.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(s.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(s.shininess=this.shininess),this.clearcoat!==void 0&&(s.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(s.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(s.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(s.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(s.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,s.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(s.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(s.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(s.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(s.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(s.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(s.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(s.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(s.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(s.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(s.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(s.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(s.lightMap=this.lightMap.toJSON(e).uuid,s.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(s.aoMap=this.aoMap.toJSON(e).uuid,s.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(s.bumpMap=this.bumpMap.toJSON(e).uuid,s.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(s.normalMap=this.normalMap.toJSON(e).uuid,s.normalMapType=this.normalMapType,s.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(s.displacementMap=this.displacementMap.toJSON(e).uuid,s.displacementScale=this.displacementScale,s.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(s.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(s.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(s.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(s.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(s.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(s.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(s.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(s.combine=this.combine)),this.envMapIntensity!==void 0&&(s.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(s.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(s.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(s.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(s.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(s.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(s.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(s.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(s.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(s.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(s.size=this.size),this.shadowSide!==null&&(s.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(s.sizeAttenuation=this.sizeAttenuation),this.blending!==_c&&(s.blending=this.blending),this.side!==io&&(s.side=this.side),this.vertexColors===!0&&(s.vertexColors=!0),this.opacity<1&&(s.opacity=this.opacity),this.transparent===!0&&(s.transparent=!0),s.depthFunc=this.depthFunc,s.depthTest=this.depthTest,s.depthWrite=this.depthWrite,s.colorWrite=this.colorWrite,s.stencilWrite=this.stencilWrite,s.stencilWriteMask=this.stencilWriteMask,s.stencilFunc=this.stencilFunc,s.stencilRef=this.stencilRef,s.stencilFuncMask=this.stencilFuncMask,s.stencilFail=this.stencilFail,s.stencilZFail=this.stencilZFail,s.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(s.rotation=this.rotation),this.polygonOffset===!0&&(s.polygonOffset=!0),this.polygonOffsetFactor!==0&&(s.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(s.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(s.linewidth=this.linewidth),this.dashSize!==void 0&&(s.dashSize=this.dashSize),this.gapSize!==void 0&&(s.gapSize=this.gapSize),this.scale!==void 0&&(s.scale=this.scale),this.dithering===!0&&(s.dithering=!0),this.alphaTest>0&&(s.alphaTest=this.alphaTest),this.alphaHash===!0&&(s.alphaHash=!0),this.alphaToCoverage===!0&&(s.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(s.premultipliedAlpha=!0),this.forceSinglePass===!0&&(s.forceSinglePass=!0),this.wireframe===!0&&(s.wireframe=!0),this.wireframeLinewidth>1&&(s.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(s.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(s.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(s.flatShading=!0),this.visible===!1&&(s.visible=!1),this.toneMapped===!1&&(s.toneMapped=!1),this.fog===!1&&(s.fog=!1),Object.keys(this.userData).length>0&&(s.userData=this.userData);function i(r){const a=[];for(const o in r){const l=r[o];delete l.metadata,a.push(l)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(s.textures=r),a.length>0&&(s.images=a)}return s}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let s=null;if(t!==null){const i=t.length;s=new Array(i);for(let r=0;r!==i;++r)s[r]=t[r].clone()}return this.clippingPlanes=s,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const lE={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Da={h:0,s:0,l:0},Xf={h:0,s:0,l:0};function Qb(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class Qt{constructor(e,t,s){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,s)}set(e,t,s){if(t===void 0&&s===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,s);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Dn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Lt.toWorkingColorSpace(this,t),this}setRGB(e,t,s,i=Lt.workingColorSpace){return this.r=e,this.g=t,this.b=s,Lt.toWorkingColorSpace(this,i),this}setHSL(e,t,s,i=Lt.workingColorSpace){if(e=iF(e,1),t=$s(t,0,1),s=$s(s,0,1),t===0)this.r=this.g=this.b=s;else{const r=s<=.5?s*(1+t):s+t-s*t,a=2*s-r;this.r=Qb(a,r,e+1/3),this.g=Qb(a,r,e),this.b=Qb(a,r,e-1/3)}return Lt.toWorkingColorSpace(this,i),this}setStyle(e,t=Dn){function s(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return s(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return s(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return s(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Dn){const s=lE[e.toLowerCase()];return s!==void 0?this.setHex(s,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Tc(e.r),this.g=Tc(e.g),this.b=Tc(e.b),this}copyLinearToSRGB(e){return this.r=Gb(e.r),this.g=Gb(e.g),this.b=Gb(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Dn){return Lt.fromWorkingColorSpace(cs.copy(this),e),Math.round($s(cs.r*255,0,255))*65536+Math.round($s(cs.g*255,0,255))*256+Math.round($s(cs.b*255,0,255))}getHexString(e=Dn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Lt.workingColorSpace){Lt.fromWorkingColorSpace(cs.copy(this),t);const s=cs.r,i=cs.g,r=cs.b,a=Math.max(s,i,r),o=Math.min(s,i,r);let l,c;const u=(o+a)/2;if(o===a)l=0,c=0;else{const h=a-o;switch(c=u<=.5?h/(a+o):h/(2-a-o),a){case s:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-s)/h+2;break;case r:l=(s-i)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Lt.workingColorSpace){return Lt.fromWorkingColorSpace(cs.copy(this),t),e.r=cs.r,e.g=cs.g,e.b=cs.b,e}getStyle(e=Dn){Lt.fromWorkingColorSpace(cs.copy(this),e);const t=cs.r,s=cs.g,i=cs.b;return e!==Dn?`color(${e} ${t.toFixed(3)} ${s.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(s*255)},${Math.round(i*255)})`}offsetHSL(e,t,s){return this.getHSL(Da),this.setHSL(Da.h+e,Da.s+t,Da.l+s)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,s){return this.r=e.r+(t.r-e.r)*s,this.g=e.g+(t.g-e.g)*s,this.b=e.b+(t.b-e.b)*s,this}lerpHSL(e,t){this.getHSL(Da),e.getHSL(Xf);const s=Ob(Da.h,Xf.h,t),i=Ob(Da.s,Xf.s,t),r=Ob(Da.l,Xf.l,t);return this.setHSL(s,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,s=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*s+r[6]*i,this.g=r[1]*t+r[4]*s+r[7]*i,this.b=r[2]*t+r[5]*s+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const cs=new Qt;Qt.NAMES=lE;class cr extends Ag{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Qt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=KM,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const En=new ae,Hf=new zt;class kr{constructor(e,t,s=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=s,this.usage=G2,this.updateRange={offset:0,count:-1},this.gpuType=Va,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,s){e*=this.itemSize,s*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[s+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,s=this.count;t<s;t++)Hf.fromBufferAttribute(this,t),Hf.applyMatrix3(e),this.setXY(t,Hf.x,Hf.y);else if(this.itemSize===3)for(let t=0,s=this.count;t<s;t++)En.fromBufferAttribute(this,t),En.applyMatrix3(e),this.setXYZ(t,En.x,En.y,En.z);return this}applyMatrix4(e){for(let t=0,s=this.count;t<s;t++)En.fromBufferAttribute(this,t),En.applyMatrix4(e),this.setXYZ(t,En.x,En.y,En.z);return this}applyNormalMatrix(e){for(let t=0,s=this.count;t<s;t++)En.fromBufferAttribute(this,t),En.applyNormalMatrix(e),this.setXYZ(t,En.x,En.y,En.z);return this}transformDirection(e){for(let t=0,s=this.count;t<s;t++)En.fromBufferAttribute(this,t),En.transformDirection(e),this.setXYZ(t,En.x,En.y,En.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let s=this.array[e*this.itemSize+t];return this.normalized&&(s=Dh(s,this.array)),s}setComponent(e,t,s){return this.normalized&&(s=zs(s,this.array)),this.array[e*this.itemSize+t]=s,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Dh(t,this.array)),t}setX(e,t){return this.normalized&&(t=zs(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Dh(t,this.array)),t}setY(e,t){return this.normalized&&(t=zs(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Dh(t,this.array)),t}setZ(e,t){return this.normalized&&(t=zs(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Dh(t,this.array)),t}setW(e,t){return this.normalized&&(t=zs(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,s){return e*=this.itemSize,this.normalized&&(t=zs(t,this.array),s=zs(s,this.array)),this.array[e+0]=t,this.array[e+1]=s,this}setXYZ(e,t,s,i){return e*=this.itemSize,this.normalized&&(t=zs(t,this.array),s=zs(s,this.array),i=zs(i,this.array)),this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=i,this}setXYZW(e,t,s,i,r){return e*=this.itemSize,this.normalized&&(t=zs(t,this.array),s=zs(s,this.array),i=zs(i,this.array),r=zs(r,this.array)),this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==G2&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class cE extends kr{constructor(e,t,s){super(new Uint16Array(e),t,s)}}class uE extends kr{constructor(e,t,s){super(new Uint32Array(e),t,s)}}class el extends kr{constructor(e,t,s){super(new Float32Array(e),t,s)}}let vF=0;const _i=new un,Jb=new Ns,sc=new ae,li=new $d,Gh=new $d,Hn=new ae;class kl extends uu{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:vF++}),this.uuid=Wd(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(sE(e)?uE:cE)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,s=0){this.groups.push({start:e,count:t,materialIndex:s})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const s=this.attributes.normal;if(s!==void 0){const r=new xt().getNormalMatrix(e);s.applyNormalMatrix(r),s.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return _i.makeRotationFromQuaternion(e),this.applyMatrix4(_i),this}rotateX(e){return _i.makeRotationX(e),this.applyMatrix4(_i),this}rotateY(e){return _i.makeRotationY(e),this.applyMatrix4(_i),this}rotateZ(e){return _i.makeRotationZ(e),this.applyMatrix4(_i),this}translate(e,t,s){return _i.makeTranslation(e,t,s),this.applyMatrix4(_i),this}scale(e,t,s){return _i.makeScale(e,t,s),this.applyMatrix4(_i),this}lookAt(e){return Jb.lookAt(e),Jb.updateMatrix(),this.applyMatrix4(Jb.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(sc).negate(),this.translate(sc.x,sc.y,sc.z),this}setFromPoints(e){const t=[];for(let s=0,i=e.length;s<i;s++){const r=e[s];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new el(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new $d);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new ae(-1/0,-1/0,-1/0),new ae(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let s=0,i=t.length;s<i;s++){const r=t[s];li.setFromBufferAttribute(r),this.morphTargetsRelative?(Hn.addVectors(this.boundingBox.min,li.min),this.boundingBox.expandByPoint(Hn),Hn.addVectors(this.boundingBox.max,li.max),this.boundingBox.expandByPoint(Hn)):(this.boundingBox.expandByPoint(li.min),this.boundingBox.expandByPoint(li.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Iv);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new ae,1/0);return}if(e){const s=this.boundingSphere.center;if(li.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];Gh.setFromBufferAttribute(o),this.morphTargetsRelative?(Hn.addVectors(li.min,Gh.min),li.expandByPoint(Hn),Hn.addVectors(li.max,Gh.max),li.expandByPoint(Hn)):(li.expandByPoint(Gh.min),li.expandByPoint(Gh.max))}li.getCenter(s);let i=0;for(let r=0,a=e.count;r<a;r++)Hn.fromBufferAttribute(e,r),i=Math.max(i,s.distanceToSquared(Hn));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],l=this.morphTargetsRelative;for(let c=0,u=o.count;c<u;c++)Hn.fromBufferAttribute(o,c),l&&(sc.fromBufferAttribute(e,c),Hn.add(sc)),i=Math.max(i,s.distanceToSquared(Hn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const s=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new kr(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let M=0;M<o;M++)c[M]=new ae,u[M]=new ae;const h=new ae,d=new ae,p=new ae,m=new zt,g=new zt,f=new zt,y=new ae,b=new ae;function x(M,A,P){h.fromArray(i,M*3),d.fromArray(i,A*3),p.fromArray(i,P*3),m.fromArray(a,M*2),g.fromArray(a,A*2),f.fromArray(a,P*2),d.sub(h),p.sub(h),g.sub(m),f.sub(m);const D=1/(g.x*f.y-f.x*g.y);isFinite(D)&&(y.copy(d).multiplyScalar(f.y).addScaledVector(p,-g.y).multiplyScalar(D),b.copy(p).multiplyScalar(g.x).addScaledVector(d,-f.x).multiplyScalar(D),c[M].add(y),c[A].add(y),c[P].add(y),u[M].add(b),u[A].add(b),u[P].add(b))}let v=this.groups;v.length===0&&(v=[{start:0,count:s.length}]);for(let M=0,A=v.length;M<A;++M){const P=v[M],D=P.start,N=P.count;for(let L=D,G=D+N;L<G;L+=3)x(s[L+0],s[L+1],s[L+2])}const w=new ae,_=new ae,T=new ae,C=new ae;function S(M){T.fromArray(r,M*3),C.copy(T);const A=c[M];w.copy(A),w.sub(T.multiplyScalar(T.dot(A))).normalize(),_.crossVectors(C,A);const D=_.dot(u[M])<0?-1:1;l[M*4]=w.x,l[M*4+1]=w.y,l[M*4+2]=w.z,l[M*4+3]=D}for(let M=0,A=v.length;M<A;++M){const P=v[M],D=P.start,N=P.count;for(let L=D,G=D+N;L<G;L+=3)S(s[L+0]),S(s[L+1]),S(s[L+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let s=this.getAttribute("normal");if(s===void 0)s=new kr(new Float32Array(t.count*3),3),this.setAttribute("normal",s);else for(let d=0,p=s.count;d<p;d++)s.setXYZ(d,0,0,0);const i=new ae,r=new ae,a=new ae,o=new ae,l=new ae,c=new ae,u=new ae,h=new ae;if(e)for(let d=0,p=e.count;d<p;d+=3){const m=e.getX(d+0),g=e.getX(d+1),f=e.getX(d+2);i.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),a.fromBufferAttribute(t,f),u.subVectors(a,r),h.subVectors(i,r),u.cross(h),o.fromBufferAttribute(s,m),l.fromBufferAttribute(s,g),c.fromBufferAttribute(s,f),o.add(u),l.add(u),c.add(u),s.setXYZ(m,o.x,o.y,o.z),s.setXYZ(g,l.x,l.y,l.z),s.setXYZ(f,c.x,c.y,c.z)}else for(let d=0,p=t.count;d<p;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),u.subVectors(a,r),h.subVectors(i,r),u.cross(h),s.setXYZ(d+0,u.x,u.y,u.z),s.setXYZ(d+1,u.x,u.y,u.z),s.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),s.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,s=e.count;t<s;t++)Hn.fromBufferAttribute(e,t),Hn.normalize(),e.setXYZ(t,Hn.x,Hn.y,Hn.z)}toNonIndexed(){function e(o,l){const c=o.array,u=o.itemSize,h=o.normalized,d=new c.constructor(l.length*u);let p=0,m=0;for(let g=0,f=l.length;g<f;g++){o.isInterleavedBufferAttribute?p=l[g]*o.data.stride+o.offset:p=l[g]*u;for(let y=0;y<u;y++)d[m++]=c[p++]}return new kr(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new kl,s=this.index.array,i=this.attributes;for(const o in i){const l=i[o],c=e(l,s);t.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const l=[],c=r[o];for(let u=0,h=c.length;u<h;u++){const d=c[u],p=e(d,s);l.push(p)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const s=this.attributes;for(const l in s){const c=s[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const p=c[h];u.push(p.toJSON(e.data))}u.length>0&&(i[l]=u,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const s=e.index;s!==null&&this.setIndex(s.clone(t));const i=e.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(t))}const r=e.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,p=h.length;d<p;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const q2=new un,No=new oE,Zf=new Iv,eI=new ae,ic=new ae,rc=new ae,ac=new ae,qb=new ae,Kf=new ae,Yf=new zt,jf=new zt,Qf=new zt,tI=new ae,nI=new ae,sI=new ae,Jf=new ae,qf=new ae;class Ft extends Ns{constructor(e=new kl,t=new cr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,s=Object.keys(t);if(s.length>0){const i=t[s[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const s=this.geometry,i=s.attributes.position,r=s.morphAttributes.position,a=s.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){Kf.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const u=o[l],h=r[l];u!==0&&(qb.fromBufferAttribute(h,e),a?Kf.addScaledVector(qb,u):Kf.addScaledVector(qb.sub(t),u))}t.add(Kf)}return t}raycast(e,t){const s=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(s.boundingSphere===null&&s.computeBoundingSphere(),Zf.copy(s.boundingSphere),Zf.applyMatrix4(r),No.copy(e.ray).recast(e.near),!(Zf.containsPoint(No.origin)===!1&&(No.intersectSphere(Zf,eI)===null||No.origin.distanceToSquared(eI)>(e.far-e.near)**2))&&(q2.copy(r).invert(),No.copy(e.ray).applyMatrix4(q2),!(s.boundingBox!==null&&No.intersectsBox(s.boundingBox)===!1)&&this._computeIntersections(e,t,No)))}_computeIntersections(e,t,s){let i;const r=this.geometry,a=this.material,o=r.index,l=r.attributes.position,c=r.attributes.uv,u=r.attributes.uv1,h=r.attributes.normal,d=r.groups,p=r.drawRange;if(o!==null)if(Array.isArray(a))for(let m=0,g=d.length;m<g;m++){const f=d[m],y=a[f.materialIndex],b=Math.max(f.start,p.start),x=Math.min(o.count,Math.min(f.start+f.count,p.start+p.count));for(let v=b,w=x;v<w;v+=3){const _=o.getX(v),T=o.getX(v+1),C=o.getX(v+2);i=em(this,y,e,s,c,u,h,_,T,C),i&&(i.faceIndex=Math.floor(v/3),i.face.materialIndex=f.materialIndex,t.push(i))}}else{const m=Math.max(0,p.start),g=Math.min(o.count,p.start+p.count);for(let f=m,y=g;f<y;f+=3){const b=o.getX(f),x=o.getX(f+1),v=o.getX(f+2);i=em(this,a,e,s,c,u,h,b,x,v),i&&(i.faceIndex=Math.floor(f/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(a))for(let m=0,g=d.length;m<g;m++){const f=d[m],y=a[f.materialIndex],b=Math.max(f.start,p.start),x=Math.min(l.count,Math.min(f.start+f.count,p.start+p.count));for(let v=b,w=x;v<w;v+=3){const _=v,T=v+1,C=v+2;i=em(this,y,e,s,c,u,h,_,T,C),i&&(i.faceIndex=Math.floor(v/3),i.face.materialIndex=f.materialIndex,t.push(i))}}else{const m=Math.max(0,p.start),g=Math.min(l.count,p.start+p.count);for(let f=m,y=g;f<y;f+=3){const b=f,x=f+1,v=f+2;i=em(this,a,e,s,c,u,h,b,x,v),i&&(i.faceIndex=Math.floor(f/3),t.push(i))}}}}function wF(n,e,t,s,i,r,a,o){let l;if(e.side===Zs?l=s.intersectTriangle(a,r,i,!0,o):l=s.intersectTriangle(i,r,a,e.side===io,o),l===null)return null;qf.copy(o),qf.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(qf);return c<t.near||c>t.far?null:{distance:c,point:qf.clone(),object:n}}function em(n,e,t,s,i,r,a,o,l,c){n.getVertexPosition(o,ic),n.getVertexPosition(l,rc),n.getVertexPosition(c,ac);const u=wF(n,e,t,s,ic,rc,ac,Jf);if(u){i&&(Yf.fromBufferAttribute(i,o),jf.fromBufferAttribute(i,l),Qf.fromBufferAttribute(i,c),u.uv=Yi.getInterpolation(Jf,ic,rc,ac,Yf,jf,Qf,new zt)),r&&(Yf.fromBufferAttribute(r,o),jf.fromBufferAttribute(r,l),Qf.fromBufferAttribute(r,c),u.uv1=Yi.getInterpolation(Jf,ic,rc,ac,Yf,jf,Qf,new zt),u.uv2=u.uv1),a&&(tI.fromBufferAttribute(a,o),nI.fromBufferAttribute(a,l),sI.fromBufferAttribute(a,c),u.normal=Yi.getInterpolation(Jf,ic,rc,ac,tI,nI,sI,new ae),u.normal.dot(s.direction)>0&&u.normal.multiplyScalar(-1));const h={a:o,b:l,c,normal:new ae,materialIndex:0};Yi.getNormal(ic,rc,ac,h.normal),u.face=h}return u}class Ud extends kl{constructor(e=1,t=1,s=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:s,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const l=[],c=[],u=[],h=[];let d=0,p=0;m("z","y","x",-1,-1,s,t,e,a,r,0),m("z","y","x",1,-1,s,t,-e,a,r,1),m("x","z","y",1,1,e,s,t,i,a,2),m("x","z","y",1,-1,e,s,-t,i,a,3),m("x","y","z",1,-1,e,t,s,i,r,4),m("x","y","z",-1,-1,e,t,-s,i,r,5),this.setIndex(l),this.setAttribute("position",new el(c,3)),this.setAttribute("normal",new el(u,3)),this.setAttribute("uv",new el(h,2));function m(g,f,y,b,x,v,w,_,T,C,S){const M=v/T,A=w/C,P=v/2,D=w/2,N=_/2,L=T+1,G=C+1;let V=0,U=0;const H=new ae;for(let j=0;j<G;j++){const O=j*A-D;for(let X=0;X<L;X++){const ee=X*M-P;H[g]=ee*b,H[f]=O*x,H[y]=N,c.push(H.x,H.y,H.z),H[g]=0,H[f]=0,H[y]=_>0?1:-1,u.push(H.x,H.y,H.z),h.push(X/T),h.push(1-j/C),V+=1}}for(let j=0;j<C;j++)for(let O=0;O<T;O++){const X=d+O+L*j,ee=d+O+L*(j+1),te=d+(O+1)+L*(j+1),se=d+(O+1)+L*j;l.push(X,ee,se),l.push(ee,te,se),U+=6}o.addGroup(p,U,S),p+=U,d+=V}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ud(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Fc(n){const e={};for(const t in n){e[t]={};for(const s in n[t]){const i=n[t][s];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][s]=null):e[t][s]=i.clone():Array.isArray(i)?e[t][s]=i.slice():e[t][s]=i}}return e}function Ms(n){const e={};for(let t=0;t<n.length;t++){const s=Fc(n[t]);for(const i in s)e[i]=s[i]}return e}function SF(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function hE(n){return n.getRenderTarget()===null?n.outputColorSpace:Lt.workingColorSpace}const _F={clone:Fc,merge:Ms};var TF=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,IF=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class hl extends Ag{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=TF,this.fragmentShader=IF,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Fc(e.uniforms),this.uniformsGroups=SF(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const s={};for(const i in this.extensions)this.extensions[i]===!0&&(s[i]=!0);return Object.keys(s).length>0&&(t.extensions=s),t}}class dE extends Ns{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new un,this.projectionMatrix=new un,this.projectionMatrixInverse=new un,this.coordinateSystem=oa}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Ri extends dE{constructor(e=50,t=1,s=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=s,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=a1*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Fb*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return a1*2*Math.atan(Math.tan(Fb*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,s,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Fb*.5*this.fov)/this.zoom,s=2*t,i=this.aspect*s,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;r+=a.offsetX*i/l,t-=a.offsetY*s/c,i*=a.width/l,s*=a.height/c}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-s,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const oc=-90,lc=1;class CF extends Ns{constructor(e,t,s){super(),this.type="CubeCamera",this.renderTarget=s,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Ri(oc,lc,e,t);i.layers=this.layers,this.add(i);const r=new Ri(oc,lc,e,t);r.layers=this.layers,this.add(r);const a=new Ri(oc,lc,e,t);a.layers=this.layers,this.add(a);const o=new Ri(oc,lc,e,t);o.layers=this.layers,this.add(o);const l=new Ri(oc,lc,e,t);l.layers=this.layers,this.add(l);const c=new Ri(oc,lc,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[s,i,r,a,o,l]=t;for(const c of t)this.remove(c);if(e===oa)s.up.set(0,1,0),s.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===zm)s.up.set(0,-1,0),s.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:s,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,l,c,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),p=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const g=s.texture.generateMipmaps;s.texture.generateMipmaps=!1,e.setRenderTarget(s,0,i),e.render(t,r),e.setRenderTarget(s,1,i),e.render(t,a),e.setRenderTarget(s,2,i),e.render(t,o),e.setRenderTarget(s,3,i),e.render(t,l),e.setRenderTarget(s,4,i),e.render(t,c),s.texture.generateMipmaps=g,e.setRenderTarget(s,5,i),e.render(t,u),e.setRenderTarget(h,d,p),e.xr.enabled=m,s.texture.needsPMREMUpdate=!0}}class pE extends Ks{constructor(e,t,s,i,r,a,o,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:Lc,super(e,t,s,i,r,a,o,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class MF extends ul{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const s={width:e,height:e,depth:1},i=[s,s,s,s,s,s];t.encoding!==void 0&&(id("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Qa?Dn:Ai),this.texture=new pE(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Ni}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ud(5,5,5),r=new hl({name:"CubemapFromEquirect",uniforms:Fc(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,side:Zs,blending:Ka});r.uniforms.tEquirect.value=t;const a=new Ft(i,r),o=t.minFilter;return t.minFilter===ud&&(t.minFilter=Ni),new CF(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,s,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,s,i);e.setRenderTarget(r)}}const ex=new ae,EF=new ae,kF=new xt;class zo{constructor(e=new ae(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,s,i){return this.normal.set(e,t,s),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,s){const i=ex.subVectors(s,t).cross(EF.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const s=e.delta(ex),i=this.normal.dot(s);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(s,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),s=this.distanceToPoint(e.end);return t<0&&s>0||s<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const s=t||kF.getNormalMatrix(e),i=this.coplanarPoint(ex).applyMatrix4(e),r=this.normal.applyMatrix3(s).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ro=new Iv,tm=new ae;class fE{constructor(e=new zo,t=new zo,s=new zo,i=new zo,r=new zo,a=new zo){this.planes=[e,t,s,i,r,a]}set(e,t,s,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(s),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let s=0;s<6;s++)t[s].copy(e.planes[s]);return this}setFromProjectionMatrix(e,t=oa){const s=this.planes,i=e.elements,r=i[0],a=i[1],o=i[2],l=i[3],c=i[4],u=i[5],h=i[6],d=i[7],p=i[8],m=i[9],g=i[10],f=i[11],y=i[12],b=i[13],x=i[14],v=i[15];if(s[0].setComponents(l-r,d-c,f-p,v-y).normalize(),s[1].setComponents(l+r,d+c,f+p,v+y).normalize(),s[2].setComponents(l+a,d+u,f+m,v+b).normalize(),s[3].setComponents(l-a,d-u,f-m,v-b).normalize(),s[4].setComponents(l-o,d-h,f-g,v-x).normalize(),t===oa)s[5].setComponents(l+o,d+h,f+g,v+x).normalize();else if(t===zm)s[5].setComponents(o,h,g,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ro.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ro.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ro)}intersectsSprite(e){return Ro.center.set(0,0,0),Ro.radius=.7071067811865476,Ro.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ro)}intersectsSphere(e){const t=this.planes,s=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(s)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let s=0;s<6;s++){const i=t[s];if(tm.x=i.normal.x>0?e.max.x:e.min.x,tm.y=i.normal.y>0?e.max.y:e.min.y,tm.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(tm)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let s=0;s<6;s++)if(t[s].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function mE(){let n=null,e=!1,t=null,s=null;function i(r,a){t(r,a),s=n.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(s=n.requestAnimationFrame(i),e=!0)},stop:function(){n.cancelAnimationFrame(s),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){n=r}}}function NF(n,e){const t=e.isWebGL2,s=new WeakMap;function i(c,u){const h=c.array,d=c.usage,p=n.createBuffer();n.bindBuffer(u,p),n.bufferData(u,h,d),c.onUploadCallback();let m;if(h instanceof Float32Array)m=n.FLOAT;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)m=n.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=n.UNSIGNED_SHORT;else if(h instanceof Int16Array)m=n.SHORT;else if(h instanceof Uint32Array)m=n.UNSIGNED_INT;else if(h instanceof Int32Array)m=n.INT;else if(h instanceof Int8Array)m=n.BYTE;else if(h instanceof Uint8Array)m=n.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)m=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:p,type:m,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const d=u.array,p=u.updateRange;n.bindBuffer(h,c),p.count===-1?n.bufferSubData(h,0,d):(t?n.bufferSubData(h,p.offset*d.BYTES_PER_ELEMENT,d,p.offset,p.count):n.bufferSubData(h,p.offset*d.BYTES_PER_ELEMENT,d.subarray(p.offset,p.offset+p.count)),p.count=-1),u.onUploadCallback()}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),s.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=s.get(c);u&&(n.deleteBuffer(u.buffer),s.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=s.get(c);(!d||d.version<c.version)&&s.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=s.get(c);h===void 0?s.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:a,remove:o,update:l}}class Bd extends kl{constructor(e=1,t=1,s=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:s,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(s),l=Math.floor(i),c=o+1,u=l+1,h=e/o,d=t/l,p=[],m=[],g=[],f=[];for(let y=0;y<u;y++){const b=y*d-a;for(let x=0;x<c;x++){const v=x*h-r;m.push(v,-b,0),g.push(0,0,1),f.push(x/o),f.push(1-y/l)}}for(let y=0;y<l;y++)for(let b=0;b<o;b++){const x=b+c*y,v=b+c*(y+1),w=b+1+c*(y+1),_=b+1+c*y;p.push(x,v,_),p.push(v,w,_)}this.setIndex(p),this.setAttribute("position",new el(m,3)),this.setAttribute("normal",new el(g,3)),this.setAttribute("uv",new el(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Bd(e.width,e.height,e.widthSegments,e.heightSegments)}}var RF=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,AF=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,LF=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,PF=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,DF=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,FF=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,OF=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,zF=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,GF=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,VF=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,WF=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,$F=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,UF=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,BF=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,XF=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,HF=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,ZF=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,KF=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,YF=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,jF=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,QF=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,JF=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,qF=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,eO=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,tO=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,nO=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,sO=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,iO=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,rO="gl_FragColor = linearToOutputTexel( gl_FragColor );",aO=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,oO=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,lO=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,cO=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,uO=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,hO=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,dO=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,pO=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,fO=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,mO=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gO=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,yO=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,bO=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,xO=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,vO=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,wO=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,SO=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,_O=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,TO=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,IO=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,CO=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,MO=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,EO=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,kO=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal;
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,NO=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,RO=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,AO=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,LO=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,PO=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,DO=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,FO=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,OO=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,zO=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,GO=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,VO=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,WO=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,$O=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,UO=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,BO=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,XO=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,HO=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,ZO=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,KO=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,YO=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,jO=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,QO=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,JO=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,qO=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,ez=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,tz=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,nz=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,sz=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,iz=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,rz=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,az=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,oz=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,lz=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,cz=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,uz=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,hz=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,dz=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,pz=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,fz=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,mz=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,gz=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,yz=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,bz=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,xz=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,vz=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,wz=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Sz=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,_z=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Tz=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Iz=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Cz=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Mz=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Ez=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,kz=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Nz=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Rz=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Az=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Lz=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Pz=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Dz=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Fz=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Oz=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,zz=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Gz=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Vz=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Wz=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,$z=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Uz=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bz=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Xz=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hz=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Zz=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Kz=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Yz=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,jz=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Qz=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Jz=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,qz=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eG=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tG=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nG=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,sG=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,iG=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rG=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,aG=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,oG=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gt={alphahash_fragment:RF,alphahash_pars_fragment:AF,alphamap_fragment:LF,alphamap_pars_fragment:PF,alphatest_fragment:DF,alphatest_pars_fragment:FF,aomap_fragment:OF,aomap_pars_fragment:zF,begin_vertex:GF,beginnormal_vertex:VF,bsdfs:WF,iridescence_fragment:$F,bumpmap_pars_fragment:UF,clipping_planes_fragment:BF,clipping_planes_pars_fragment:XF,clipping_planes_pars_vertex:HF,clipping_planes_vertex:ZF,color_fragment:KF,color_pars_fragment:YF,color_pars_vertex:jF,color_vertex:QF,common:JF,cube_uv_reflection_fragment:qF,defaultnormal_vertex:eO,displacementmap_pars_vertex:tO,displacementmap_vertex:nO,emissivemap_fragment:sO,emissivemap_pars_fragment:iO,colorspace_fragment:rO,colorspace_pars_fragment:aO,envmap_fragment:oO,envmap_common_pars_fragment:lO,envmap_pars_fragment:cO,envmap_pars_vertex:uO,envmap_physical_pars_fragment:SO,envmap_vertex:hO,fog_vertex:dO,fog_pars_vertex:pO,fog_fragment:fO,fog_pars_fragment:mO,gradientmap_pars_fragment:gO,lightmap_fragment:yO,lightmap_pars_fragment:bO,lights_lambert_fragment:xO,lights_lambert_pars_fragment:vO,lights_pars_begin:wO,lights_toon_fragment:_O,lights_toon_pars_fragment:TO,lights_phong_fragment:IO,lights_phong_pars_fragment:CO,lights_physical_fragment:MO,lights_physical_pars_fragment:EO,lights_fragment_begin:kO,lights_fragment_maps:NO,lights_fragment_end:RO,logdepthbuf_fragment:AO,logdepthbuf_pars_fragment:LO,logdepthbuf_pars_vertex:PO,logdepthbuf_vertex:DO,map_fragment:FO,map_pars_fragment:OO,map_particle_fragment:zO,map_particle_pars_fragment:GO,metalnessmap_fragment:VO,metalnessmap_pars_fragment:WO,morphcolor_vertex:$O,morphnormal_vertex:UO,morphtarget_pars_vertex:BO,morphtarget_vertex:XO,normal_fragment_begin:HO,normal_fragment_maps:ZO,normal_pars_fragment:KO,normal_pars_vertex:YO,normal_vertex:jO,normalmap_pars_fragment:QO,clearcoat_normal_fragment_begin:JO,clearcoat_normal_fragment_maps:qO,clearcoat_pars_fragment:ez,iridescence_pars_fragment:tz,opaque_fragment:nz,packing:sz,premultiplied_alpha_fragment:iz,project_vertex:rz,dithering_fragment:az,dithering_pars_fragment:oz,roughnessmap_fragment:lz,roughnessmap_pars_fragment:cz,shadowmap_pars_fragment:uz,shadowmap_pars_vertex:hz,shadowmap_vertex:dz,shadowmask_pars_fragment:pz,skinbase_vertex:fz,skinning_pars_vertex:mz,skinning_vertex:gz,skinnormal_vertex:yz,specularmap_fragment:bz,specularmap_pars_fragment:xz,tonemapping_fragment:vz,tonemapping_pars_fragment:wz,transmission_fragment:Sz,transmission_pars_fragment:_z,uv_pars_fragment:Tz,uv_pars_vertex:Iz,uv_vertex:Cz,worldpos_vertex:Mz,background_vert:Ez,background_frag:kz,backgroundCube_vert:Nz,backgroundCube_frag:Rz,cube_vert:Az,cube_frag:Lz,depth_vert:Pz,depth_frag:Dz,distanceRGBA_vert:Fz,distanceRGBA_frag:Oz,equirect_vert:zz,equirect_frag:Gz,linedashed_vert:Vz,linedashed_frag:Wz,meshbasic_vert:$z,meshbasic_frag:Uz,meshlambert_vert:Bz,meshlambert_frag:Xz,meshmatcap_vert:Hz,meshmatcap_frag:Zz,meshnormal_vert:Kz,meshnormal_frag:Yz,meshphong_vert:jz,meshphong_frag:Qz,meshphysical_vert:Jz,meshphysical_frag:qz,meshtoon_vert:eG,meshtoon_frag:tG,points_vert:nG,points_frag:sG,shadow_vert:iG,shadow_frag:rG,sprite_vert:aG,sprite_frag:oG},Ee={common:{diffuse:{value:new Qt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new xt},alphaMap:{value:null},alphaMapTransform:{value:new xt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new xt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new xt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new xt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new xt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new xt},normalScale:{value:new zt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new xt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new xt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new xt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new xt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Qt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Qt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new xt},alphaTest:{value:0},uvTransform:{value:new xt}},sprite:{diffuse:{value:new Qt(16777215)},opacity:{value:1},center:{value:new zt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new xt},alphaMap:{value:null},alphaMapTransform:{value:new xt},alphaTest:{value:0}}},vr={basic:{uniforms:Ms([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.fog]),vertexShader:gt.meshbasic_vert,fragmentShader:gt.meshbasic_frag},lambert:{uniforms:Ms([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Qt(0)}}]),vertexShader:gt.meshlambert_vert,fragmentShader:gt.meshlambert_frag},phong:{uniforms:Ms([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Qt(0)},specular:{value:new Qt(1118481)},shininess:{value:30}}]),vertexShader:gt.meshphong_vert,fragmentShader:gt.meshphong_frag},standard:{uniforms:Ms([Ee.common,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.roughnessmap,Ee.metalnessmap,Ee.fog,Ee.lights,{emissive:{value:new Qt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag},toon:{uniforms:Ms([Ee.common,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.gradientmap,Ee.fog,Ee.lights,{emissive:{value:new Qt(0)}}]),vertexShader:gt.meshtoon_vert,fragmentShader:gt.meshtoon_frag},matcap:{uniforms:Ms([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,{matcap:{value:null}}]),vertexShader:gt.meshmatcap_vert,fragmentShader:gt.meshmatcap_frag},points:{uniforms:Ms([Ee.points,Ee.fog]),vertexShader:gt.points_vert,fragmentShader:gt.points_frag},dashed:{uniforms:Ms([Ee.common,Ee.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gt.linedashed_vert,fragmentShader:gt.linedashed_frag},depth:{uniforms:Ms([Ee.common,Ee.displacementmap]),vertexShader:gt.depth_vert,fragmentShader:gt.depth_frag},normal:{uniforms:Ms([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,{opacity:{value:1}}]),vertexShader:gt.meshnormal_vert,fragmentShader:gt.meshnormal_frag},sprite:{uniforms:Ms([Ee.sprite,Ee.fog]),vertexShader:gt.sprite_vert,fragmentShader:gt.sprite_frag},background:{uniforms:{uvTransform:{value:new xt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gt.background_vert,fragmentShader:gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:gt.backgroundCube_vert,fragmentShader:gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gt.cube_vert,fragmentShader:gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gt.equirect_vert,fragmentShader:gt.equirect_frag},distanceRGBA:{uniforms:Ms([Ee.common,Ee.displacementmap,{referencePosition:{value:new ae},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gt.distanceRGBA_vert,fragmentShader:gt.distanceRGBA_frag},shadow:{uniforms:Ms([Ee.lights,Ee.fog,{color:{value:new Qt(0)},opacity:{value:1}}]),vertexShader:gt.shadow_vert,fragmentShader:gt.shadow_frag}};vr.physical={uniforms:Ms([vr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new xt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new xt},clearcoatNormalScale:{value:new zt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new xt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new xt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new xt},sheen:{value:0},sheenColor:{value:new Qt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new xt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new xt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new xt},transmissionSamplerSize:{value:new zt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new xt},attenuationDistance:{value:0},attenuationColor:{value:new Qt(0)},specularColor:{value:new Qt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new xt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new xt},anisotropyVector:{value:new zt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new xt}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag};const nm={r:0,b:0,g:0};function lG(n,e,t,s,i,r,a){const o=new Qt(0);let l=r===!0?0:1,c,u,h=null,d=0,p=null;function m(f,y){let b=!1,x=y.isScene===!0?y.background:null;x&&x.isTexture&&(x=(y.backgroundBlurriness>0?t:e).get(x)),x===null?g(o,l):x&&x.isColor&&(g(x,1),b=!0);const v=n.xr.getEnvironmentBlendMode();v==="additive"?s.buffers.color.setClear(0,0,0,1,a):v==="alpha-blend"&&s.buffers.color.setClear(0,0,0,0,a),(n.autoClear||b)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),x&&(x.isCubeTexture||x.mapping===kg)?(u===void 0&&(u=new Ft(new Ud(1,1,1),new hl({name:"BackgroundCubeMaterial",uniforms:Fc(vr.backgroundCube.uniforms),vertexShader:vr.backgroundCube.vertexShader,fragmentShader:vr.backgroundCube.fragmentShader,side:Zs,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(w,_,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=x,u.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,u.material.toneMapped=Lt.getTransfer(x.colorSpace)!==jt,(h!==x||d!==x.version||p!==n.toneMapping)&&(u.material.needsUpdate=!0,h=x,d=x.version,p=n.toneMapping),u.layers.enableAll(),f.unshift(u,u.geometry,u.material,0,0,null)):x&&x.isTexture&&(c===void 0&&(c=new Ft(new Bd(2,2),new hl({name:"BackgroundMaterial",uniforms:Fc(vr.background.uniforms),vertexShader:vr.background.vertexShader,fragmentShader:vr.background.fragmentShader,side:io,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=x,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=Lt.getTransfer(x.colorSpace)!==jt,x.matrixAutoUpdate===!0&&x.updateMatrix(),c.material.uniforms.uvTransform.value.copy(x.matrix),(h!==x||d!==x.version||p!==n.toneMapping)&&(c.material.needsUpdate=!0,h=x,d=x.version,p=n.toneMapping),c.layers.enableAll(),f.unshift(c,c.geometry,c.material,0,0,null))}function g(f,y){f.getRGB(nm,hE(n)),s.buffers.color.setClear(nm.r,nm.g,nm.b,y,a)}return{getClearColor:function(){return o},setClearColor:function(f,y=1){o.set(f),l=y,g(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(f){l=f,g(o,l)},render:m}}function cG(n,e,t,s){const i=n.getParameter(n.MAX_VERTEX_ATTRIBS),r=s.isWebGL2?null:e.get("OES_vertex_array_object"),a=s.isWebGL2||r!==null,o={},l=f(null);let c=l,u=!1;function h(N,L,G,V,U){let H=!1;if(a){const j=g(V,G,L);c!==j&&(c=j,p(c.object)),H=y(N,V,G,U),H&&b(N,V,G,U)}else{const j=L.wireframe===!0;(c.geometry!==V.id||c.program!==G.id||c.wireframe!==j)&&(c.geometry=V.id,c.program=G.id,c.wireframe=j,H=!0)}U!==null&&t.update(U,n.ELEMENT_ARRAY_BUFFER),(H||u)&&(u=!1,C(N,L,G,V),U!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(U).buffer))}function d(){return s.isWebGL2?n.createVertexArray():r.createVertexArrayOES()}function p(N){return s.isWebGL2?n.bindVertexArray(N):r.bindVertexArrayOES(N)}function m(N){return s.isWebGL2?n.deleteVertexArray(N):r.deleteVertexArrayOES(N)}function g(N,L,G){const V=G.wireframe===!0;let U=o[N.id];U===void 0&&(U={},o[N.id]=U);let H=U[L.id];H===void 0&&(H={},U[L.id]=H);let j=H[V];return j===void 0&&(j=f(d()),H[V]=j),j}function f(N){const L=[],G=[],V=[];for(let U=0;U<i;U++)L[U]=0,G[U]=0,V[U]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:L,enabledAttributes:G,attributeDivisors:V,object:N,attributes:{},index:null}}function y(N,L,G,V){const U=c.attributes,H=L.attributes;let j=0;const O=G.getAttributes();for(const X in O)if(O[X].location>=0){const te=U[X];let se=H[X];if(se===void 0&&(X==="instanceMatrix"&&N.instanceMatrix&&(se=N.instanceMatrix),X==="instanceColor"&&N.instanceColor&&(se=N.instanceColor)),te===void 0||te.attribute!==se||se&&te.data!==se.data)return!0;j++}return c.attributesNum!==j||c.index!==V}function b(N,L,G,V){const U={},H=L.attributes;let j=0;const O=G.getAttributes();for(const X in O)if(O[X].location>=0){let te=H[X];te===void 0&&(X==="instanceMatrix"&&N.instanceMatrix&&(te=N.instanceMatrix),X==="instanceColor"&&N.instanceColor&&(te=N.instanceColor));const se={};se.attribute=te,te&&te.data&&(se.data=te.data),U[X]=se,j++}c.attributes=U,c.attributesNum=j,c.index=V}function x(){const N=c.newAttributes;for(let L=0,G=N.length;L<G;L++)N[L]=0}function v(N){w(N,0)}function w(N,L){const G=c.newAttributes,V=c.enabledAttributes,U=c.attributeDivisors;G[N]=1,V[N]===0&&(n.enableVertexAttribArray(N),V[N]=1),U[N]!==L&&((s.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[s.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](N,L),U[N]=L)}function _(){const N=c.newAttributes,L=c.enabledAttributes;for(let G=0,V=L.length;G<V;G++)L[G]!==N[G]&&(n.disableVertexAttribArray(G),L[G]=0)}function T(N,L,G,V,U,H,j){j===!0?n.vertexAttribIPointer(N,L,G,U,H):n.vertexAttribPointer(N,L,G,V,U,H)}function C(N,L,G,V){if(s.isWebGL2===!1&&(N.isInstancedMesh||V.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const U=V.attributes,H=G.getAttributes(),j=L.defaultAttributeValues;for(const O in H){const X=H[O];if(X.location>=0){let ee=U[O];if(ee===void 0&&(O==="instanceMatrix"&&N.instanceMatrix&&(ee=N.instanceMatrix),O==="instanceColor"&&N.instanceColor&&(ee=N.instanceColor)),ee!==void 0){const te=ee.normalized,se=ee.itemSize,pe=t.get(ee);if(pe===void 0)continue;const me=pe.buffer,fe=pe.type,Ce=pe.bytesPerElement,Ue=s.isWebGL2===!0&&(fe===n.INT||fe===n.UNSIGNED_INT||ee.gpuType===jM);if(ee.isInterleavedBufferAttribute){const Me=ee.data,J=Me.stride,ht=ee.offset;if(Me.isInstancedInterleavedBuffer){for(let Ne=0;Ne<X.locationSize;Ne++)w(X.location+Ne,Me.meshPerAttribute);N.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=Me.meshPerAttribute*Me.count)}else for(let Ne=0;Ne<X.locationSize;Ne++)v(X.location+Ne);n.bindBuffer(n.ARRAY_BUFFER,me);for(let Ne=0;Ne<X.locationSize;Ne++)T(X.location+Ne,se/X.locationSize,fe,te,J*Ce,(ht+se/X.locationSize*Ne)*Ce,Ue)}else{if(ee.isInstancedBufferAttribute){for(let Me=0;Me<X.locationSize;Me++)w(X.location+Me,ee.meshPerAttribute);N.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=ee.meshPerAttribute*ee.count)}else for(let Me=0;Me<X.locationSize;Me++)v(X.location+Me);n.bindBuffer(n.ARRAY_BUFFER,me);for(let Me=0;Me<X.locationSize;Me++)T(X.location+Me,se/X.locationSize,fe,te,se*Ce,se/X.locationSize*Me*Ce,Ue)}}else if(j!==void 0){const te=j[O];if(te!==void 0)switch(te.length){case 2:n.vertexAttrib2fv(X.location,te);break;case 3:n.vertexAttrib3fv(X.location,te);break;case 4:n.vertexAttrib4fv(X.location,te);break;default:n.vertexAttrib1fv(X.location,te)}}}}_()}function S(){P();for(const N in o){const L=o[N];for(const G in L){const V=L[G];for(const U in V)m(V[U].object),delete V[U];delete L[G]}delete o[N]}}function M(N){if(o[N.id]===void 0)return;const L=o[N.id];for(const G in L){const V=L[G];for(const U in V)m(V[U].object),delete V[U];delete L[G]}delete o[N.id]}function A(N){for(const L in o){const G=o[L];if(G[N.id]===void 0)continue;const V=G[N.id];for(const U in V)m(V[U].object),delete V[U];delete G[N.id]}}function P(){D(),u=!0,c!==l&&(c=l,p(c.object))}function D(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:P,resetDefaultState:D,dispose:S,releaseStatesOfGeometry:M,releaseStatesOfProgram:A,initAttributes:x,enableAttribute:v,disableUnusedAttributes:_}}function uG(n,e,t,s){const i=s.isWebGL2;let r;function a(c){r=c}function o(c,u){n.drawArrays(r,c,u),t.update(u,r,1)}function l(c,u,h){if(h===0)return;let d,p;if(i)d=n,p="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](r,c,u,h),t.update(u,r,h)}this.setMode=a,this.render=o,this.renderInstances=l}function hG(n,e,t){let s;function i(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");s=n.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function r(T){if(T==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";T="mediump"}return T==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&n.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),d=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=n.getParameter(n.MAX_TEXTURE_SIZE),m=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),g=n.getParameter(n.MAX_VERTEX_ATTRIBS),f=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),y=n.getParameter(n.MAX_VARYING_VECTORS),b=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),x=d>0,v=a||e.has("OES_texture_float"),w=x&&v,_=a?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:f,maxVaryings:y,maxFragmentUniforms:b,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:w,maxSamples:_}}function dG(n){const e=this;let t=null,s=0,i=!1,r=!1;const a=new zo,o=new xt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const p=h.length!==0||d||s!==0||i;return i=d,s=h.length,p},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,p){const m=h.clippingPlanes,g=h.clipIntersection,f=h.clipShadows,y=n.get(h);if(!i||m===null||m.length===0||r&&!f)r?u(null):c();else{const b=r?0:s,x=b*4;let v=y.clippingState||null;l.value=v,v=u(m,d,x,p);for(let w=0;w!==x;++w)v[w]=t[w];y.clippingState=v,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=b}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=s>0),e.numPlanes=s,e.numIntersection=0}function u(h,d,p,m){const g=h!==null?h.length:0;let f=null;if(g!==0){if(f=l.value,m!==!0||f===null){const y=p+g*4,b=d.matrixWorldInverse;o.getNormalMatrix(b),(f===null||f.length<y)&&(f=new Float32Array(y));for(let x=0,v=p;x!==g;++x,v+=4)a.copy(h[x]).applyMatrix4(b,o),a.normal.toArray(f,v),f[v+3]=a.constant}l.value=f,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,f}}function pG(n){let e=new WeakMap;function t(a,o){return o===n1?a.mapping=Lc:o===s1&&(a.mapping=Pc),a}function s(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===n1||o===s1)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new MF(l.height/2);return c.fromEquirectangularTexture(n,a),e.set(a,c),a.addEventListener("dispose",i),t(c.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function r(){e=new WeakMap}return{get:s,dispose:r}}class fG extends dE{constructor(e=-1,t=1,s=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=s,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,s,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),s=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=s-e,a=s+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,a=r+c*this.view.width,o-=u*this.view.offsetY,l=o-u*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const bc=4,iI=[.125,.215,.35,.446,.526,.582],Uo=20,tx=new fG,rI=new Qt;let nx=null;const Go=(1+Math.sqrt(5))/2,cc=1/Go,aI=[new ae(1,1,1),new ae(-1,1,1),new ae(1,1,-1),new ae(-1,1,-1),new ae(0,Go,cc),new ae(0,Go,-cc),new ae(cc,0,Go),new ae(-cc,0,Go),new ae(Go,cc,0),new ae(-Go,cc,0)];class oI{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,s=.1,i=100){nx=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,s,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=uI(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=cI(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(nx),e.scissorTest=!1,sm(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Lc||e.mapping===Pc?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),nx=this._renderer.getRenderTarget();const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,s={magFilter:Ni,minFilter:Ni,generateMipmaps:!1,type:hd,format:qi,colorSpace:ua,depthBuffer:!1},i=lI(e,t,s);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=lI(e,t,s);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=mG(r)),this._blurMaterial=gG(r,e,t)}return i}_compileMaterial(e){const t=new Ft(this._lodPlanes[0],e);this._renderer.compile(t,tx)}_sceneToCubeUV(e,t,s,i){const o=new Ri(90,1,t,s),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(rI),u.toneMapping=Ya,u.autoClear=!1;const p=new cr({name:"PMREM.Background",side:Zs,depthWrite:!1,depthTest:!1}),m=new Ft(new Ud,p);let g=!1;const f=e.background;f?f.isColor&&(p.color.copy(f),e.background=null,g=!0):(p.color.copy(rI),g=!0);for(let y=0;y<6;y++){const b=y%3;b===0?(o.up.set(0,l[y],0),o.lookAt(c[y],0,0)):b===1?(o.up.set(0,0,l[y]),o.lookAt(0,c[y],0)):(o.up.set(0,l[y],0),o.lookAt(0,0,c[y]));const x=this._cubeSize;sm(i,b*x,y>2?x:0,x,x),u.setRenderTarget(i),g&&u.render(m,o),u.render(e,o)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=d,u.autoClear=h,e.background=f}_textureToCubeUV(e,t){const s=this._renderer,i=e.mapping===Lc||e.mapping===Pc;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=uI()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=cI());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Ft(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const l=this._cubeSize;sm(t,0,0,3*l,2*l),s.setRenderTarget(t),s.render(a,tx)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=aI[(i-1)%aI.length];this._blur(e,i-1,i,r,a)}t.autoClear=s}_blur(e,t,s,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,s,i,"latitudinal",r),this._halfBlur(a,e,s,s,i,"longitudinal",r)}_halfBlur(e,t,s,i,r,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new Ft(this._lodPlanes[i],c),d=c.uniforms,p=this._sizeLods[s]-1,m=isFinite(r)?Math.PI/(2*p):2*Math.PI/(2*Uo-1),g=r/m,f=isFinite(r)?1+Math.floor(u*g):Uo;f>Uo&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to ${Uo}`);const y=[];let b=0;for(let T=0;T<Uo;++T){const C=T/g,S=Math.exp(-C*C/2);y.push(S),T===0?b+=S:T<f&&(b+=2*S)}for(let T=0;T<y.length;T++)y[T]=y[T]/b;d.envMap.value=e.texture,d.samples.value=f,d.weights.value=y,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:x}=this;d.dTheta.value=m,d.mipInt.value=x-s;const v=this._sizeLods[i],w=3*v*(i>x-bc?i-x+bc:0),_=4*(this._cubeSize-v);sm(t,w,_,3*v,2*v),l.setRenderTarget(t),l.render(h,tx)}}function mG(n){const e=[],t=[],s=[];let i=n;const r=n-bc+1+iI.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let l=1/o;a>n-bc?l=iI[a-n+bc-1]:a===0&&(l=0),s.push(l);const c=1/(o-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],p=6,m=6,g=3,f=2,y=1,b=new Float32Array(g*m*p),x=new Float32Array(f*m*p),v=new Float32Array(y*m*p);for(let _=0;_<p;_++){const T=_%3*2/3-1,C=_>2?0:-1,S=[T,C,0,T+2/3,C,0,T+2/3,C+1,0,T,C,0,T+2/3,C+1,0,T,C+1,0];b.set(S,g*m*_),x.set(d,f*m*_);const M=[_,_,_,_,_,_];v.set(M,y*m*_)}const w=new kl;w.setAttribute("position",new kr(b,g)),w.setAttribute("uv",new kr(x,f)),w.setAttribute("faceIndex",new kr(v,y)),e.push(w),i>bc&&i--}return{lodPlanes:e,sizeLods:t,sigmas:s}}function lI(n,e,t){const s=new ul(n,e,t);return s.texture.mapping=kg,s.texture.name="PMREM.cubeUv",s.scissorTest=!0,s}function sm(n,e,t,s,i){n.viewport.set(e,t,s,i),n.scissor.set(e,t,s,i)}function gG(n,e,t){const s=new Float32Array(Uo),i=new ae(0,1,0);return new hl({name:"SphericalGaussianBlur",defines:{n:Uo,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:s},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Mv(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ka,depthTest:!1,depthWrite:!1})}function cI(){return new hl({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Mv(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ka,depthTest:!1,depthWrite:!1})}function uI(){return new hl({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Mv(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ka,depthTest:!1,depthWrite:!1})}function Mv(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function yG(n){let e=new WeakMap,t=null;function s(o){if(o&&o.isTexture){const l=o.mapping,c=l===n1||l===s1,u=l===Lc||l===Pc;if(c||u)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=e.get(o);return t===null&&(t=new oI(n)),h=c?t.fromEquirectangular(o,h):t.fromCubemap(o,h),e.set(o,h),h.texture}else{if(e.has(o))return e.get(o).texture;{const h=o.image;if(c&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new oI(n));const d=c?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,d),o.addEventListener("dispose",r),d.texture}else return null}}}return o}function i(o){let l=0;const c=6;for(let u=0;u<c;u++)o[u]!==void 0&&l++;return l===c}function r(o){const l=o.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:s,dispose:a}}function bG(n){const e={};function t(s){if(e[s]!==void 0)return e[s];let i;switch(s){case"WEBGL_depth_texture":i=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=n.getExtension(s)}return e[s]=i,i}return{has:function(s){return t(s)!==null},init:function(s){s.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(s){const i=t(s);return i===null&&console.warn("THREE.WebGLRenderer: "+s+" extension not supported."),i}}}function xG(n,e,t,s){const i={},r=new WeakMap;function a(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const m in d.attributes)e.remove(d.attributes[m]);for(const m in d.morphAttributes){const g=d.morphAttributes[m];for(let f=0,y=g.length;f<y;f++)e.remove(g[f])}d.removeEventListener("dispose",a),delete i[d.id];const p=r.get(d);p&&(e.remove(p),r.delete(d)),s.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(h,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}function l(h){const d=h.attributes;for(const m in d)e.update(d[m],n.ARRAY_BUFFER);const p=h.morphAttributes;for(const m in p){const g=p[m];for(let f=0,y=g.length;f<y;f++)e.update(g[f],n.ARRAY_BUFFER)}}function c(h){const d=[],p=h.index,m=h.attributes.position;let g=0;if(p!==null){const b=p.array;g=p.version;for(let x=0,v=b.length;x<v;x+=3){const w=b[x+0],_=b[x+1],T=b[x+2];d.push(w,_,_,T,T,w)}}else if(m!==void 0){const b=m.array;g=m.version;for(let x=0,v=b.length/3-1;x<v;x+=3){const w=x+0,_=x+1,T=x+2;d.push(w,_,_,T,T,w)}}else return;const f=new(sE(d)?uE:cE)(d,1);f.version=g;const y=r.get(h);y&&e.remove(y),r.set(h,f)}function u(h){const d=r.get(h);if(d){const p=h.index;p!==null&&d.version<p.version&&c(h)}else c(h);return r.get(h)}return{get:o,update:l,getWireframeAttribute:u}}function vG(n,e,t,s){const i=s.isWebGL2;let r;function a(d){r=d}let o,l;function c(d){o=d.type,l=d.bytesPerElement}function u(d,p){n.drawElements(r,p,o,d*l),t.update(p,r,1)}function h(d,p,m){if(m===0)return;let g,f;if(i)g=n,f="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),f="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[f](r,p,o,d*l,m),t.update(p,r,m)}this.setMode=a,this.setIndex=c,this.render=u,this.renderInstances=h}function wG(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function s(r,a,o){switch(t.calls++,a){case n.TRIANGLES:t.triangles+=o*(r/3);break;case n.LINES:t.lines+=o*(r/2);break;case n.LINE_STRIP:t.lines+=o*(r-1);break;case n.LINE_LOOP:t.lines+=o*r;break;case n.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:s}}function SG(n,e){return n[0]-e[0]}function _G(n,e){return Math.abs(e[1])-Math.abs(n[1])}function TG(n,e,t){const s={},i=new Float32Array(8),r=new WeakMap,a=new rs,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,u,h){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const m=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=m!==void 0?m.length:0;let f=r.get(u);if(f===void 0||f.count!==g){let L=function(){D.dispose(),r.delete(u),u.removeEventListener("dispose",L)};var p=L;f!==void 0&&f.texture.dispose();const x=u.morphAttributes.position!==void 0,v=u.morphAttributes.normal!==void 0,w=u.morphAttributes.color!==void 0,_=u.morphAttributes.position||[],T=u.morphAttributes.normal||[],C=u.morphAttributes.color||[];let S=0;x===!0&&(S=1),v===!0&&(S=2),w===!0&&(S=3);let M=u.attributes.position.count*S,A=1;M>e.maxTextureSize&&(A=Math.ceil(M/e.maxTextureSize),M=e.maxTextureSize);const P=new Float32Array(M*A*4*g),D=new aE(P,M,A,g);D.type=Va,D.needsUpdate=!0;const N=S*4;for(let G=0;G<g;G++){const V=_[G],U=T[G],H=C[G],j=M*A*4*G;for(let O=0;O<V.count;O++){const X=O*N;x===!0&&(a.fromBufferAttribute(V,O),P[j+X+0]=a.x,P[j+X+1]=a.y,P[j+X+2]=a.z,P[j+X+3]=0),v===!0&&(a.fromBufferAttribute(U,O),P[j+X+4]=a.x,P[j+X+5]=a.y,P[j+X+6]=a.z,P[j+X+7]=0),w===!0&&(a.fromBufferAttribute(H,O),P[j+X+8]=a.x,P[j+X+9]=a.y,P[j+X+10]=a.z,P[j+X+11]=H.itemSize===4?a.w:1)}}f={count:g,texture:D,size:new zt(M,A)},r.set(u,f),u.addEventListener("dispose",L)}let y=0;for(let x=0;x<d.length;x++)y+=d[x];const b=u.morphTargetsRelative?1:1-y;h.getUniforms().setValue(n,"morphTargetBaseInfluence",b),h.getUniforms().setValue(n,"morphTargetInfluences",d),h.getUniforms().setValue(n,"morphTargetsTexture",f.texture,t),h.getUniforms().setValue(n,"morphTargetsTextureSize",f.size)}else{const m=d===void 0?0:d.length;let g=s[u.id];if(g===void 0||g.length!==m){g=[];for(let v=0;v<m;v++)g[v]=[v,0];s[u.id]=g}for(let v=0;v<m;v++){const w=g[v];w[0]=v,w[1]=d[v]}g.sort(_G);for(let v=0;v<8;v++)v<m&&g[v][1]?(o[v][0]=g[v][0],o[v][1]=g[v][1]):(o[v][0]=Number.MAX_SAFE_INTEGER,o[v][1]=0);o.sort(SG);const f=u.morphAttributes.position,y=u.morphAttributes.normal;let b=0;for(let v=0;v<8;v++){const w=o[v],_=w[0],T=w[1];_!==Number.MAX_SAFE_INTEGER&&T?(f&&u.getAttribute("morphTarget"+v)!==f[_]&&u.setAttribute("morphTarget"+v,f[_]),y&&u.getAttribute("morphNormal"+v)!==y[_]&&u.setAttribute("morphNormal"+v,y[_]),i[v]=T,b+=T):(f&&u.hasAttribute("morphTarget"+v)===!0&&u.deleteAttribute("morphTarget"+v),y&&u.hasAttribute("morphNormal"+v)===!0&&u.deleteAttribute("morphNormal"+v),i[v]=0)}const x=u.morphTargetsRelative?1:1-b;h.getUniforms().setValue(n,"morphTargetBaseInfluence",x),h.getUniforms().setValue(n,"morphTargetInfluences",i)}}return{update:l}}function IG(n,e,t,s){let i=new WeakMap;function r(l){const c=s.render.frame,u=l.geometry,h=e.get(l,u);if(i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),i.get(l)!==c&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==c&&(d.update(),i.set(d,c))}return h}function a(){i=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:a}}const gE=new Ks,yE=new aE,bE=new uF,xE=new pE,hI=[],dI=[],pI=new Float32Array(16),fI=new Float32Array(9),mI=new Float32Array(4);function hu(n,e,t){const s=n[0];if(s<=0||s>0)return n;const i=e*t;let r=hI[i];if(r===void 0&&(r=new Float32Array(i),hI[i]=r),e!==0){s.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(r,o)}return r}function Gn(n,e){if(n.length!==e.length)return!1;for(let t=0,s=n.length;t<s;t++)if(n[t]!==e[t])return!1;return!0}function Vn(n,e){for(let t=0,s=e.length;t<s;t++)n[t]=e[t]}function Lg(n,e){let t=dI[e];t===void 0&&(t=new Int32Array(e),dI[e]=t);for(let s=0;s!==e;++s)t[s]=n.allocateTextureUnit();return t}function CG(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function MG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Gn(t,e))return;n.uniform2fv(this.addr,e),Vn(t,e)}}function EG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Gn(t,e))return;n.uniform3fv(this.addr,e),Vn(t,e)}}function kG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Gn(t,e))return;n.uniform4fv(this.addr,e),Vn(t,e)}}function NG(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(Gn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Vn(t,e)}else{if(Gn(t,s))return;mI.set(s),n.uniformMatrix2fv(this.addr,!1,mI),Vn(t,s)}}function RG(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(Gn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Vn(t,e)}else{if(Gn(t,s))return;fI.set(s),n.uniformMatrix3fv(this.addr,!1,fI),Vn(t,s)}}function AG(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(Gn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Vn(t,e)}else{if(Gn(t,s))return;pI.set(s),n.uniformMatrix4fv(this.addr,!1,pI),Vn(t,s)}}function LG(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function PG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Gn(t,e))return;n.uniform2iv(this.addr,e),Vn(t,e)}}function DG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Gn(t,e))return;n.uniform3iv(this.addr,e),Vn(t,e)}}function FG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Gn(t,e))return;n.uniform4iv(this.addr,e),Vn(t,e)}}function OG(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function zG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Gn(t,e))return;n.uniform2uiv(this.addr,e),Vn(t,e)}}function GG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Gn(t,e))return;n.uniform3uiv(this.addr,e),Vn(t,e)}}function VG(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Gn(t,e))return;n.uniform4uiv(this.addr,e),Vn(t,e)}}function WG(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.setTexture2D(e||gE,i)}function $G(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.setTexture3D(e||bE,i)}function UG(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.setTextureCube(e||xE,i)}function BG(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.setTexture2DArray(e||yE,i)}function XG(n){switch(n){case 5126:return CG;case 35664:return MG;case 35665:return EG;case 35666:return kG;case 35674:return NG;case 35675:return RG;case 35676:return AG;case 5124:case 35670:return LG;case 35667:case 35671:return PG;case 35668:case 35672:return DG;case 35669:case 35673:return FG;case 5125:return OG;case 36294:return zG;case 36295:return GG;case 36296:return VG;case 35678:case 36198:case 36298:case 36306:case 35682:return WG;case 35679:case 36299:case 36307:return $G;case 35680:case 36300:case 36308:case 36293:return UG;case 36289:case 36303:case 36311:case 36292:return BG}}function HG(n,e){n.uniform1fv(this.addr,e)}function ZG(n,e){const t=hu(e,this.size,2);n.uniform2fv(this.addr,t)}function KG(n,e){const t=hu(e,this.size,3);n.uniform3fv(this.addr,t)}function YG(n,e){const t=hu(e,this.size,4);n.uniform4fv(this.addr,t)}function jG(n,e){const t=hu(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function QG(n,e){const t=hu(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function JG(n,e){const t=hu(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function qG(n,e){n.uniform1iv(this.addr,e)}function eV(n,e){n.uniform2iv(this.addr,e)}function tV(n,e){n.uniform3iv(this.addr,e)}function nV(n,e){n.uniform4iv(this.addr,e)}function sV(n,e){n.uniform1uiv(this.addr,e)}function iV(n,e){n.uniform2uiv(this.addr,e)}function rV(n,e){n.uniform3uiv(this.addr,e)}function aV(n,e){n.uniform4uiv(this.addr,e)}function oV(n,e,t){const s=this.cache,i=e.length,r=Lg(t,i);Gn(s,r)||(n.uniform1iv(this.addr,r),Vn(s,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||gE,r[a])}function lV(n,e,t){const s=this.cache,i=e.length,r=Lg(t,i);Gn(s,r)||(n.uniform1iv(this.addr,r),Vn(s,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||bE,r[a])}function cV(n,e,t){const s=this.cache,i=e.length,r=Lg(t,i);Gn(s,r)||(n.uniform1iv(this.addr,r),Vn(s,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||xE,r[a])}function uV(n,e,t){const s=this.cache,i=e.length,r=Lg(t,i);Gn(s,r)||(n.uniform1iv(this.addr,r),Vn(s,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||yE,r[a])}function hV(n){switch(n){case 5126:return HG;case 35664:return ZG;case 35665:return KG;case 35666:return YG;case 35674:return jG;case 35675:return QG;case 35676:return JG;case 5124:case 35670:return qG;case 35667:case 35671:return eV;case 35668:case 35672:return tV;case 35669:case 35673:return nV;case 5125:return sV;case 36294:return iV;case 36295:return rV;case 36296:return aV;case 35678:case 36198:case 36298:case 36306:case 35682:return oV;case 35679:case 36299:case 36307:return lV;case 35680:case 36300:case 36308:case 36293:return cV;case 36289:case 36303:case 36311:case 36292:return uV}}class dV{constructor(e,t,s){this.id=e,this.addr=s,this.cache=[],this.setValue=XG(t.type)}}class pV{constructor(e,t,s){this.id=e,this.addr=s,this.cache=[],this.size=t.size,this.setValue=hV(t.type)}}class fV{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,s){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],s)}}}const sx=/(\w+)(\])?(\[|\.)?/g;function gI(n,e){n.seq.push(e),n.map[e.id]=e}function mV(n,e,t){const s=n.name,i=s.length;for(sx.lastIndex=0;;){const r=sx.exec(s),a=sx.lastIndex;let o=r[1];const l=r[2]==="]",c=r[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===i){gI(t,c===void 0?new dV(o,n,e):new pV(o,n,e));break}else{let h=t.map[o];h===void 0&&(h=new fV(o),gI(t,h)),t=h}}}class Cm{constructor(e,t){this.seq=[],this.map={};const s=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<s;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);mV(r,a,this)}}setValue(e,t,s,i){const r=this.map[t];r!==void 0&&r.setValue(e,s,i)}setOptional(e,t,s){const i=t[s];i!==void 0&&this.setValue(e,s,i)}static upload(e,t,s,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],l=s[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const s=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&s.push(a)}return s}}function yI(n,e,t){const s=n.createShader(e);return n.shaderSource(s,t),n.compileShader(s),s}let gV=0;function yV(n,e){const t=n.split(`
`),s=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;s.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return s.join(`
`)}function bV(n){const e=Lt.getPrimaries(Lt.workingColorSpace),t=Lt.getPrimaries(n);let s;switch(e===t?s="":e===Om&&t===Fm?s="LinearDisplayP3ToLinearSRGB":e===Fm&&t===Om&&(s="LinearSRGBToLinearDisplayP3"),n){case ua:case Ng:return[s,"LinearTransferOETF"];case Dn:case Tv:return[s,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),[s,"LinearTransferOETF"]}}function bI(n,e,t){const s=n.getShaderParameter(e,n.COMPILE_STATUS),i=n.getShaderInfoLog(e).trim();if(s&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+yV(n.getShaderSource(e),a)}else return i}function xV(n,e){const t=bV(e);return`vec4 ${n}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function vV(n,e){let t;switch(e){case ND:t="Linear";break;case RD:t="Reinhard";break;case AD:t="OptimizedCineon";break;case LD:t="ACESFilmic";break;case PD:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function wV(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.normalMapTangentSpace||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Yh).join(`
`)}function SV(n){const e=[];for(const t in n){const s=n[t];s!==!1&&e.push("#define "+t+" "+s)}return e.join(`
`)}function _V(n,e){const t={},s=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let i=0;i<s;i++){const r=n.getActiveAttrib(e,i),a=r.name;let o=1;r.type===n.FLOAT_MAT2&&(o=2),r.type===n.FLOAT_MAT3&&(o=3),r.type===n.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:n.getAttribLocation(e,a),locationSize:o}}return t}function Yh(n){return n!==""}function xI(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function vI(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const TV=/^[ \t]*#include +<([\w\d./]+)>/gm;function l1(n){return n.replace(TV,CV)}const IV=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function CV(n,e){let t=gt[e];if(t===void 0){const s=IV.get(e);if(s!==void 0)t=gt[s],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,s);else throw new Error("Can not resolve #include <"+e+">")}return l1(t)}const MV=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function wI(n){return n.replace(MV,EV)}function EV(n,e,t,s){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=s.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function SI(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function kV(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===XM?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===lD?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Qr&&(e="SHADOWMAP_TYPE_VSM"),e}function NV(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Lc:case Pc:e="ENVMAP_TYPE_CUBE";break;case kg:e="ENVMAP_TYPE_CUBE_UV";break}return e}function RV(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Pc:e="ENVMAP_MODE_REFRACTION";break}return e}function AV(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case KM:e="ENVMAP_BLENDING_MULTIPLY";break;case ED:e="ENVMAP_BLENDING_MIX";break;case kD:e="ENVMAP_BLENDING_ADD";break}return e}function LV(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,s=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:s,maxMip:t}}function PV(n,e,t,s){const i=n.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=kV(t),c=NV(t),u=RV(t),h=AV(t),d=LV(t),p=t.isWebGL2?"":wV(t),m=SV(r),g=i.createProgram();let f,y,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(f=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Yh).join(`
`),f.length>0&&(f+=`
`),y=[p,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Yh).join(`
`),y.length>0&&(y+=`
`)):(f=[SI(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Yh).join(`
`),y=[p,SI(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ya?"#define TONE_MAPPING":"",t.toneMapping!==Ya?gt.tonemapping_pars_fragment:"",t.toneMapping!==Ya?vV("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",gt.colorspace_pars_fragment,xV("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Yh).join(`
`)),a=l1(a),a=xI(a,t),a=vI(a,t),o=l1(o),o=xI(o,t),o=vI(o,t),a=wI(a),o=wI(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,f=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+f,y=["#define varying in",t.glslVersion===V2?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===V2?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const x=b+f+a,v=b+y+o,w=yI(i,i.VERTEX_SHADER,x),_=yI(i,i.FRAGMENT_SHADER,v);if(i.attachShader(g,w),i.attachShader(g,_),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),n.debug.checkShaderErrors){const S=i.getProgramInfoLog(g).trim(),M=i.getShaderInfoLog(w).trim(),A=i.getShaderInfoLog(_).trim();let P=!0,D=!0;if(i.getProgramParameter(g,i.LINK_STATUS)===!1)if(P=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(i,g,w,_);else{const N=bI(i,w,"vertex"),L=bI(i,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+`

Program Info Log: `+S+`
`+N+`
`+L)}else S!==""?console.warn("THREE.WebGLProgram: Program Info Log:",S):(M===""||A==="")&&(D=!1);D&&(this.diagnostics={runnable:P,programLog:S,vertexShader:{log:M,prefix:f},fragmentShader:{log:A,prefix:y}})}i.deleteShader(w),i.deleteShader(_);let T;this.getUniforms=function(){return T===void 0&&(T=new Cm(i,g)),T};let C;return this.getAttributes=function(){return C===void 0&&(C=_V(i,g)),C},this.destroy=function(){s.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=gV++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=_,this}let DV=0;class FV{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,s=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(s),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const s of t)s.usedTimes--,s.usedTimes===0&&this.shaderCache.delete(s.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let s=t.get(e);return s===void 0&&(s=new Set,t.set(e,s)),s}_getShaderStage(e){const t=this.shaderCache;let s=t.get(e);return s===void 0&&(s=new OV(e),t.set(e,s)),s}}class OV{constructor(e){this.id=DV++,this.code=e,this.usedTimes=0}}function zV(n,e,t,s,i,r,a){const o=new Cv,l=new FV,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let p=i.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(S){return S===0?"uv":`uv${S}`}function f(S,M,A,P,D){const N=P.fog,L=D.geometry,G=S.isMeshStandardMaterial?P.environment:null,V=(S.isMeshStandardMaterial?t:e).get(S.envMap||G),U=V&&V.mapping===kg?V.image.height:null,H=m[S.type];S.precision!==null&&(p=i.getMaxPrecision(S.precision),p!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",p,"instead."));const j=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,O=j!==void 0?j.length:0;let X=0;L.morphAttributes.position!==void 0&&(X=1),L.morphAttributes.normal!==void 0&&(X=2),L.morphAttributes.color!==void 0&&(X=3);let ee,te,se,pe;if(H){const Yt=vr[H];ee=Yt.vertexShader,te=Yt.fragmentShader}else ee=S.vertexShader,te=S.fragmentShader,l.update(S),se=l.getVertexShaderID(S),pe=l.getFragmentShaderID(S);const me=n.getRenderTarget(),fe=D.isInstancedMesh===!0,Ce=!!S.map,Ue=!!S.matcap,Me=!!V,J=!!S.aoMap,ht=!!S.lightMap,Ne=!!S.bumpMap,Fe=!!S.normalMap,Ae=!!S.displacementMap,Ye=!!S.emissiveMap,He=!!S.metalnessMap,qe=!!S.roughnessMap,ot=S.anisotropy>0,Gt=S.clearcoat>0,Nt=S.iridescence>0,z=S.sheen>0,R=S.transmission>0,ie=ot&&!!S.anisotropyMap,ye=Gt&&!!S.clearcoatMap,ge=Gt&&!!S.clearcoatNormalMap,xe=Gt&&!!S.clearcoatRoughnessMap,Be=Nt&&!!S.iridescenceMap,_e=Nt&&!!S.iridescenceThicknessMap,Pe=z&&!!S.sheenColorMap,et=z&&!!S.sheenRoughnessMap,Tt=!!S.specularMap,ve=!!S.specularColorMap,Rt=!!S.specularIntensityMap,ut=R&&!!S.transmissionMap,it=R&&!!S.thicknessMap,Qe=!!S.gradientMap,B=!!S.alphaMap,Te=S.alphaTest>0,Se=!!S.alphaHash,Ge=!!S.extensions,Le=!!L.attributes.uv1,be=!!L.attributes.uv2,Ke=!!L.attributes.uv3;let dt=Ya;return S.toneMapped&&(me===null||me.isXRRenderTarget===!0)&&(dt=n.toneMapping),{isWebGL2:u,shaderID:H,shaderType:S.type,shaderName:S.name,vertexShader:ee,fragmentShader:te,defines:S.defines,customVertexShaderID:se,customFragmentShaderID:pe,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:p,instancing:fe,instancingColor:fe&&D.instanceColor!==null,supportsVertexTextures:d,outputColorSpace:me===null?n.outputColorSpace:me.isXRRenderTarget===!0?me.texture.colorSpace:ua,map:Ce,matcap:Ue,envMap:Me,envMapMode:Me&&V.mapping,envMapCubeUVHeight:U,aoMap:J,lightMap:ht,bumpMap:Ne,normalMap:Fe,displacementMap:d&&Ae,emissiveMap:Ye,normalMapObjectSpace:Fe&&S.normalMapType===KD,normalMapTangentSpace:Fe&&S.normalMapType===ZD,metalnessMap:He,roughnessMap:qe,anisotropy:ot,anisotropyMap:ie,clearcoat:Gt,clearcoatMap:ye,clearcoatNormalMap:ge,clearcoatRoughnessMap:xe,iridescence:Nt,iridescenceMap:Be,iridescenceThicknessMap:_e,sheen:z,sheenColorMap:Pe,sheenRoughnessMap:et,specularMap:Tt,specularColorMap:ve,specularIntensityMap:Rt,transmission:R,transmissionMap:ut,thicknessMap:it,gradientMap:Qe,opaque:S.transparent===!1&&S.blending===_c,alphaMap:B,alphaTest:Te,alphaHash:Se,combine:S.combine,mapUv:Ce&&g(S.map.channel),aoMapUv:J&&g(S.aoMap.channel),lightMapUv:ht&&g(S.lightMap.channel),bumpMapUv:Ne&&g(S.bumpMap.channel),normalMapUv:Fe&&g(S.normalMap.channel),displacementMapUv:Ae&&g(S.displacementMap.channel),emissiveMapUv:Ye&&g(S.emissiveMap.channel),metalnessMapUv:He&&g(S.metalnessMap.channel),roughnessMapUv:qe&&g(S.roughnessMap.channel),anisotropyMapUv:ie&&g(S.anisotropyMap.channel),clearcoatMapUv:ye&&g(S.clearcoatMap.channel),clearcoatNormalMapUv:ge&&g(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:xe&&g(S.clearcoatRoughnessMap.channel),iridescenceMapUv:Be&&g(S.iridescenceMap.channel),iridescenceThicknessMapUv:_e&&g(S.iridescenceThicknessMap.channel),sheenColorMapUv:Pe&&g(S.sheenColorMap.channel),sheenRoughnessMapUv:et&&g(S.sheenRoughnessMap.channel),specularMapUv:Tt&&g(S.specularMap.channel),specularColorMapUv:ve&&g(S.specularColorMap.channel),specularIntensityMapUv:Rt&&g(S.specularIntensityMap.channel),transmissionMapUv:ut&&g(S.transmissionMap.channel),thicknessMapUv:it&&g(S.thicknessMap.channel),alphaMapUv:B&&g(S.alphaMap.channel),vertexTangents:!!L.attributes.tangent&&(Fe||ot),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,vertexUv1s:Le,vertexUv2s:be,vertexUv3s:Ke,pointsUvs:D.isPoints===!0&&!!L.attributes.uv&&(Ce||B),fog:!!N,useFog:S.fog===!0,fogExp2:N&&N.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:D.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:O,morphTextureStride:X,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numLightProbes:M.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:S.dithering,shadowMapEnabled:n.shadowMap.enabled&&A.length>0,shadowMapType:n.shadowMap.type,toneMapping:dt,useLegacyLights:n._useLegacyLights,decodeVideoTexture:Ce&&S.map.isVideoTexture===!0&&Lt.getTransfer(S.map.colorSpace)===jt,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===ia,flipSided:S.side===Zs,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:Ge&&S.extensions.derivatives===!0,extensionFragDepth:Ge&&S.extensions.fragDepth===!0,extensionDrawBuffers:Ge&&S.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ge&&S.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||s.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||s.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||s.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function y(S){const M=[];if(S.shaderID?M.push(S.shaderID):(M.push(S.customVertexShaderID),M.push(S.customFragmentShaderID)),S.defines!==void 0)for(const A in S.defines)M.push(A),M.push(S.defines[A]);return S.isRawShaderMaterial===!1&&(b(M,S),x(M,S),M.push(n.outputColorSpace)),M.push(S.customProgramCacheKey),M.join()}function b(S,M){S.push(M.precision),S.push(M.outputColorSpace),S.push(M.envMapMode),S.push(M.envMapCubeUVHeight),S.push(M.mapUv),S.push(M.alphaMapUv),S.push(M.lightMapUv),S.push(M.aoMapUv),S.push(M.bumpMapUv),S.push(M.normalMapUv),S.push(M.displacementMapUv),S.push(M.emissiveMapUv),S.push(M.metalnessMapUv),S.push(M.roughnessMapUv),S.push(M.anisotropyMapUv),S.push(M.clearcoatMapUv),S.push(M.clearcoatNormalMapUv),S.push(M.clearcoatRoughnessMapUv),S.push(M.iridescenceMapUv),S.push(M.iridescenceThicknessMapUv),S.push(M.sheenColorMapUv),S.push(M.sheenRoughnessMapUv),S.push(M.specularMapUv),S.push(M.specularColorMapUv),S.push(M.specularIntensityMapUv),S.push(M.transmissionMapUv),S.push(M.thicknessMapUv),S.push(M.combine),S.push(M.fogExp2),S.push(M.sizeAttenuation),S.push(M.morphTargetsCount),S.push(M.morphAttributeCount),S.push(M.numDirLights),S.push(M.numPointLights),S.push(M.numSpotLights),S.push(M.numSpotLightMaps),S.push(M.numHemiLights),S.push(M.numRectAreaLights),S.push(M.numDirLightShadows),S.push(M.numPointLightShadows),S.push(M.numSpotLightShadows),S.push(M.numSpotLightShadowsWithMaps),S.push(M.numLightProbes),S.push(M.shadowMapType),S.push(M.toneMapping),S.push(M.numClippingPlanes),S.push(M.numClipIntersection),S.push(M.depthPacking)}function x(S,M){o.disableAll(),M.isWebGL2&&o.enable(0),M.supportsVertexTextures&&o.enable(1),M.instancing&&o.enable(2),M.instancingColor&&o.enable(3),M.matcap&&o.enable(4),M.envMap&&o.enable(5),M.normalMapObjectSpace&&o.enable(6),M.normalMapTangentSpace&&o.enable(7),M.clearcoat&&o.enable(8),M.iridescence&&o.enable(9),M.alphaTest&&o.enable(10),M.vertexColors&&o.enable(11),M.vertexAlphas&&o.enable(12),M.vertexUv1s&&o.enable(13),M.vertexUv2s&&o.enable(14),M.vertexUv3s&&o.enable(15),M.vertexTangents&&o.enable(16),M.anisotropy&&o.enable(17),S.push(o.mask),o.disableAll(),M.fog&&o.enable(0),M.useFog&&o.enable(1),M.flatShading&&o.enable(2),M.logarithmicDepthBuffer&&o.enable(3),M.skinning&&o.enable(4),M.morphTargets&&o.enable(5),M.morphNormals&&o.enable(6),M.morphColors&&o.enable(7),M.premultipliedAlpha&&o.enable(8),M.shadowMapEnabled&&o.enable(9),M.useLegacyLights&&o.enable(10),M.doubleSided&&o.enable(11),M.flipSided&&o.enable(12),M.useDepthPacking&&o.enable(13),M.dithering&&o.enable(14),M.transmission&&o.enable(15),M.sheen&&o.enable(16),M.opaque&&o.enable(17),M.pointsUvs&&o.enable(18),M.decodeVideoTexture&&o.enable(19),S.push(o.mask)}function v(S){const M=m[S.type];let A;if(M){const P=vr[M];A=_F.clone(P.uniforms)}else A=S.uniforms;return A}function w(S,M){let A;for(let P=0,D=c.length;P<D;P++){const N=c[P];if(N.cacheKey===M){A=N,++A.usedTimes;break}}return A===void 0&&(A=new PV(n,M,S,r),c.push(A)),A}function _(S){if(--S.usedTimes===0){const M=c.indexOf(S);c[M]=c[c.length-1],c.pop(),S.destroy()}}function T(S){l.remove(S)}function C(){l.dispose()}return{getParameters:f,getProgramCacheKey:y,getUniforms:v,acquireProgram:w,releaseProgram:_,releaseShaderCache:T,programs:c,dispose:C}}function GV(){let n=new WeakMap;function e(r){let a=n.get(r);return a===void 0&&(a={},n.set(r,a)),a}function t(r){n.delete(r)}function s(r,a,o){n.get(r)[a]=o}function i(){n=new WeakMap}return{get:e,remove:t,update:s,dispose:i}}function VV(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function _I(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function TI(){const n=[];let e=0;const t=[],s=[],i=[];function r(){e=0,t.length=0,s.length=0,i.length=0}function a(h,d,p,m,g,f){let y=n[e];return y===void 0?(y={id:h.id,object:h,geometry:d,material:p,groupOrder:m,renderOrder:h.renderOrder,z:g,group:f},n[e]=y):(y.id=h.id,y.object=h,y.geometry=d,y.material=p,y.groupOrder=m,y.renderOrder=h.renderOrder,y.z=g,y.group=f),e++,y}function o(h,d,p,m,g,f){const y=a(h,d,p,m,g,f);p.transmission>0?s.push(y):p.transparent===!0?i.push(y):t.push(y)}function l(h,d,p,m,g,f){const y=a(h,d,p,m,g,f);p.transmission>0?s.unshift(y):p.transparent===!0?i.unshift(y):t.unshift(y)}function c(h,d){t.length>1&&t.sort(h||VV),s.length>1&&s.sort(d||_I),i.length>1&&i.sort(d||_I)}function u(){for(let h=e,d=n.length;h<d;h++){const p=n[h];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:s,transparent:i,init:r,push:o,unshift:l,finish:u,sort:c}}function WV(){let n=new WeakMap;function e(s,i){const r=n.get(s);let a;return r===void 0?(a=new TI,n.set(s,[a])):i>=r.length?(a=new TI,r.push(a)):a=r[i],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function $V(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new ae,color:new Qt};break;case"SpotLight":t={position:new ae,direction:new ae,color:new Qt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new ae,color:new Qt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new ae,skyColor:new Qt,groundColor:new Qt};break;case"RectAreaLight":t={color:new Qt,position:new ae,halfWidth:new ae,halfHeight:new ae};break}return n[e.id]=t,t}}}function UV(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new zt};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new zt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new zt,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let BV=0;function XV(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function HV(n,e){const t=new $V,s=UV(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)i.probe.push(new ae);const r=new ae,a=new un,o=new un;function l(u,h){let d=0,p=0,m=0;for(let P=0;P<9;P++)i.probe[P].set(0,0,0);let g=0,f=0,y=0,b=0,x=0,v=0,w=0,_=0,T=0,C=0,S=0;u.sort(XV);const M=h===!0?Math.PI:1;for(let P=0,D=u.length;P<D;P++){const N=u[P],L=N.color,G=N.intensity,V=N.distance,U=N.shadow&&N.shadow.map?N.shadow.map.texture:null;if(N.isAmbientLight)d+=L.r*G*M,p+=L.g*G*M,m+=L.b*G*M;else if(N.isLightProbe){for(let H=0;H<9;H++)i.probe[H].addScaledVector(N.sh.coefficients[H],G);S++}else if(N.isDirectionalLight){const H=t.get(N);if(H.color.copy(N.color).multiplyScalar(N.intensity*M),N.castShadow){const j=N.shadow,O=s.get(N);O.shadowBias=j.bias,O.shadowNormalBias=j.normalBias,O.shadowRadius=j.radius,O.shadowMapSize=j.mapSize,i.directionalShadow[g]=O,i.directionalShadowMap[g]=U,i.directionalShadowMatrix[g]=N.shadow.matrix,v++}i.directional[g]=H,g++}else if(N.isSpotLight){const H=t.get(N);H.position.setFromMatrixPosition(N.matrixWorld),H.color.copy(L).multiplyScalar(G*M),H.distance=V,H.coneCos=Math.cos(N.angle),H.penumbraCos=Math.cos(N.angle*(1-N.penumbra)),H.decay=N.decay,i.spot[y]=H;const j=N.shadow;if(N.map&&(i.spotLightMap[T]=N.map,T++,j.updateMatrices(N),N.castShadow&&C++),i.spotLightMatrix[y]=j.matrix,N.castShadow){const O=s.get(N);O.shadowBias=j.bias,O.shadowNormalBias=j.normalBias,O.shadowRadius=j.radius,O.shadowMapSize=j.mapSize,i.spotShadow[y]=O,i.spotShadowMap[y]=U,_++}y++}else if(N.isRectAreaLight){const H=t.get(N);H.color.copy(L).multiplyScalar(G),H.halfWidth.set(N.width*.5,0,0),H.halfHeight.set(0,N.height*.5,0),i.rectArea[b]=H,b++}else if(N.isPointLight){const H=t.get(N);if(H.color.copy(N.color).multiplyScalar(N.intensity*M),H.distance=N.distance,H.decay=N.decay,N.castShadow){const j=N.shadow,O=s.get(N);O.shadowBias=j.bias,O.shadowNormalBias=j.normalBias,O.shadowRadius=j.radius,O.shadowMapSize=j.mapSize,O.shadowCameraNear=j.camera.near,O.shadowCameraFar=j.camera.far,i.pointShadow[f]=O,i.pointShadowMap[f]=U,i.pointShadowMatrix[f]=N.shadow.matrix,w++}i.point[f]=H,f++}else if(N.isHemisphereLight){const H=t.get(N);H.skyColor.copy(N.color).multiplyScalar(G*M),H.groundColor.copy(N.groundColor).multiplyScalar(G*M),i.hemi[x]=H,x++}}b>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_FLOAT_1,i.rectAreaLTC2=Ee.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_HALF_1,i.rectAreaLTC2=Ee.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=p,i.ambient[2]=m;const A=i.hash;(A.directionalLength!==g||A.pointLength!==f||A.spotLength!==y||A.rectAreaLength!==b||A.hemiLength!==x||A.numDirectionalShadows!==v||A.numPointShadows!==w||A.numSpotShadows!==_||A.numSpotMaps!==T||A.numLightProbes!==S)&&(i.directional.length=g,i.spot.length=y,i.rectArea.length=b,i.point.length=f,i.hemi.length=x,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=_+T-C,i.spotLightMap.length=T,i.numSpotLightShadowsWithMaps=C,i.numLightProbes=S,A.directionalLength=g,A.pointLength=f,A.spotLength=y,A.rectAreaLength=b,A.hemiLength=x,A.numDirectionalShadows=v,A.numPointShadows=w,A.numSpotShadows=_,A.numSpotMaps=T,A.numLightProbes=S,i.version=BV++)}function c(u,h){let d=0,p=0,m=0,g=0,f=0;const y=h.matrixWorldInverse;for(let b=0,x=u.length;b<x;b++){const v=u[b];if(v.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(y),d++}else if(v.isSpotLight){const w=i.spot[m];w.position.setFromMatrixPosition(v.matrixWorld),w.position.applyMatrix4(y),w.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(y),m++}else if(v.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(v.matrixWorld),w.position.applyMatrix4(y),o.identity(),a.copy(v.matrixWorld),a.premultiply(y),o.extractRotation(a),w.halfWidth.set(v.width*.5,0,0),w.halfHeight.set(0,v.height*.5,0),w.halfWidth.applyMatrix4(o),w.halfHeight.applyMatrix4(o),g++}else if(v.isPointLight){const w=i.point[p];w.position.setFromMatrixPosition(v.matrixWorld),w.position.applyMatrix4(y),p++}else if(v.isHemisphereLight){const w=i.hemi[f];w.direction.setFromMatrixPosition(v.matrixWorld),w.direction.transformDirection(y),f++}}}return{setup:l,setupView:c,state:i}}function II(n,e){const t=new HV(n,e),s=[],i=[];function r(){s.length=0,i.length=0}function a(h){s.push(h)}function o(h){i.push(h)}function l(h){t.setup(s,h)}function c(h){t.setupView(s,h)}return{init:r,state:{lightsArray:s,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function ZV(n,e){let t=new WeakMap;function s(r,a=0){const o=t.get(r);let l;return o===void 0?(l=new II(n,e),t.set(r,[l])):a>=o.length?(l=new II(n,e),o.push(l)):l=o[a],l}function i(){t=new WeakMap}return{get:s,dispose:i}}class KV extends Ag{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=XD,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class YV extends Ag{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const jV=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,QV=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function JV(n,e,t){let s=new fE;const i=new zt,r=new zt,a=new rs,o=new KV({depthPacking:HD}),l=new YV,c={},u=t.maxTextureSize,h={[io]:Zs,[Zs]:io,[ia]:ia},d=new hl({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new zt},radius:{value:4}},vertexShader:jV,fragmentShader:QV}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const m=new kl;m.setAttribute("position",new kr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Ft(m,d),f=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=XM;let y=this.type;this.render=function(w,_,T){if(f.enabled===!1||f.autoUpdate===!1&&f.needsUpdate===!1||w.length===0)return;const C=n.getRenderTarget(),S=n.getActiveCubeFace(),M=n.getActiveMipmapLevel(),A=n.state;A.setBlending(Ka),A.buffers.color.setClear(1,1,1,1),A.buffers.depth.setTest(!0),A.setScissorTest(!1);const P=y!==Qr&&this.type===Qr,D=y===Qr&&this.type!==Qr;for(let N=0,L=w.length;N<L;N++){const G=w[N],V=G.shadow;if(V===void 0){console.warn("THREE.WebGLShadowMap:",G,"has no shadow.");continue}if(V.autoUpdate===!1&&V.needsUpdate===!1)continue;i.copy(V.mapSize);const U=V.getFrameExtents();if(i.multiply(U),r.copy(V.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/U.x),i.x=r.x*U.x,V.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/U.y),i.y=r.y*U.y,V.mapSize.y=r.y)),V.map===null||P===!0||D===!0){const j=this.type!==Qr?{minFilter:Es,magFilter:Es}:{};V.map!==null&&V.map.dispose(),V.map=new ul(i.x,i.y,j),V.map.texture.name=G.name+".shadowMap",V.camera.updateProjectionMatrix()}n.setRenderTarget(V.map),n.clear();const H=V.getViewportCount();for(let j=0;j<H;j++){const O=V.getViewport(j);a.set(r.x*O.x,r.y*O.y,r.x*O.z,r.y*O.w),A.viewport(a),V.updateMatrices(G,j),s=V.getFrustum(),v(_,T,V.camera,G,this.type)}V.isPointLightShadow!==!0&&this.type===Qr&&b(V,T),V.needsUpdate=!1}y=this.type,f.needsUpdate=!1,n.setRenderTarget(C,S,M)};function b(w,_){const T=e.update(g);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,p.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new ul(i.x,i.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,n.setRenderTarget(w.mapPass),n.clear(),n.renderBufferDirect(_,null,T,d,g,null),p.uniforms.shadow_pass.value=w.mapPass.texture,p.uniforms.resolution.value=w.mapSize,p.uniforms.radius.value=w.radius,n.setRenderTarget(w.map),n.clear(),n.renderBufferDirect(_,null,T,p,g,null)}function x(w,_,T,C){let S=null;const M=T.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(M!==void 0)S=M;else if(S=T.isPointLight===!0?l:o,n.localClippingEnabled&&_.clipShadows===!0&&Array.isArray(_.clippingPlanes)&&_.clippingPlanes.length!==0||_.displacementMap&&_.displacementScale!==0||_.alphaMap&&_.alphaTest>0||_.map&&_.alphaTest>0){const A=S.uuid,P=_.uuid;let D=c[A];D===void 0&&(D={},c[A]=D);let N=D[P];N===void 0&&(N=S.clone(),D[P]=N),S=N}if(S.visible=_.visible,S.wireframe=_.wireframe,C===Qr?S.side=_.shadowSide!==null?_.shadowSide:_.side:S.side=_.shadowSide!==null?_.shadowSide:h[_.side],S.alphaMap=_.alphaMap,S.alphaTest=_.alphaTest,S.map=_.map,S.clipShadows=_.clipShadows,S.clippingPlanes=_.clippingPlanes,S.clipIntersection=_.clipIntersection,S.displacementMap=_.displacementMap,S.displacementScale=_.displacementScale,S.displacementBias=_.displacementBias,S.wireframeLinewidth=_.wireframeLinewidth,S.linewidth=_.linewidth,T.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const A=n.properties.get(S);A.light=T}return S}function v(w,_,T,C,S){if(w.visible===!1)return;if(w.layers.test(_.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&S===Qr)&&(!w.frustumCulled||s.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,w.matrixWorld);const P=e.update(w),D=w.material;if(Array.isArray(D)){const N=P.groups;for(let L=0,G=N.length;L<G;L++){const V=N[L],U=D[V.materialIndex];if(U&&U.visible){const H=x(w,U,C,S);n.renderBufferDirect(T,null,P,H,w,V)}}}else if(D.visible){const N=x(w,D,C,S);n.renderBufferDirect(T,null,P,N,w,null)}}const A=w.children;for(let P=0,D=A.length;P<D;P++)v(A[P],_,T,C,S)}}function qV(n,e,t){const s=t.isWebGL2;function i(){let B=!1;const Te=new rs;let Se=null;const Ge=new rs(0,0,0,0);return{setMask:function(Le){Se!==Le&&!B&&(n.colorMask(Le,Le,Le,Le),Se=Le)},setLocked:function(Le){B=Le},setClear:function(Le,be,Ke,dt,Ts){Ts===!0&&(Le*=dt,be*=dt,Ke*=dt),Te.set(Le,be,Ke,dt),Ge.equals(Te)===!1&&(n.clearColor(Le,be,Ke,dt),Ge.copy(Te))},reset:function(){B=!1,Se=null,Ge.set(-1,0,0,0)}}}function r(){let B=!1,Te=null,Se=null,Ge=null;return{setTest:function(Le){Le?me(n.DEPTH_TEST):fe(n.DEPTH_TEST)},setMask:function(Le){Te!==Le&&!B&&(n.depthMask(Le),Te=Le)},setFunc:function(Le){if(Se!==Le){switch(Le){case wD:n.depthFunc(n.NEVER);break;case SD:n.depthFunc(n.ALWAYS);break;case _D:n.depthFunc(n.LESS);break;case t1:n.depthFunc(n.LEQUAL);break;case TD:n.depthFunc(n.EQUAL);break;case ID:n.depthFunc(n.GEQUAL);break;case CD:n.depthFunc(n.GREATER);break;case MD:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}Se=Le}},setLocked:function(Le){B=Le},setClear:function(Le){Ge!==Le&&(n.clearDepth(Le),Ge=Le)},reset:function(){B=!1,Te=null,Se=null,Ge=null}}}function a(){let B=!1,Te=null,Se=null,Ge=null,Le=null,be=null,Ke=null,dt=null,Ts=null;return{setTest:function(Yt){B||(Yt?me(n.STENCIL_TEST):fe(n.STENCIL_TEST))},setMask:function(Yt){Te!==Yt&&!B&&(n.stencilMask(Yt),Te=Yt)},setFunc:function(Yt,fr,Is){(Se!==Yt||Ge!==fr||Le!==Is)&&(n.stencilFunc(Yt,fr,Is),Se=Yt,Ge=fr,Le=Is)},setOp:function(Yt,fr,Is){(be!==Yt||Ke!==fr||dt!==Is)&&(n.stencilOp(Yt,fr,Is),be=Yt,Ke=fr,dt=Is)},setLocked:function(Yt){B=Yt},setClear:function(Yt){Ts!==Yt&&(n.clearStencil(Yt),Ts=Yt)},reset:function(){B=!1,Te=null,Se=null,Ge=null,Le=null,be=null,Ke=null,dt=null,Ts=null}}}const o=new i,l=new r,c=new a,u=new WeakMap,h=new WeakMap;let d={},p={},m=new WeakMap,g=[],f=null,y=!1,b=null,x=null,v=null,w=null,_=null,T=null,C=null,S=!1,M=null,A=null,P=null,D=null,N=null;const L=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let G=!1,V=0;const U=n.getParameter(n.VERSION);U.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL (\d)/.exec(U)[1]),G=V>=1):U.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL ES (\d)/.exec(U)[1]),G=V>=2);let H=null,j={};const O=n.getParameter(n.SCISSOR_BOX),X=n.getParameter(n.VIEWPORT),ee=new rs().fromArray(O),te=new rs().fromArray(X);function se(B,Te,Se,Ge){const Le=new Uint8Array(4),be=n.createTexture();n.bindTexture(B,be),n.texParameteri(B,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(B,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let Ke=0;Ke<Se;Ke++)s&&(B===n.TEXTURE_3D||B===n.TEXTURE_2D_ARRAY)?n.texImage3D(Te,0,n.RGBA,1,1,Ge,0,n.RGBA,n.UNSIGNED_BYTE,Le):n.texImage2D(Te+Ke,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,Le);return be}const pe={};pe[n.TEXTURE_2D]=se(n.TEXTURE_2D,n.TEXTURE_2D,1),pe[n.TEXTURE_CUBE_MAP]=se(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),s&&(pe[n.TEXTURE_2D_ARRAY]=se(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),pe[n.TEXTURE_3D]=se(n.TEXTURE_3D,n.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),me(n.DEPTH_TEST),l.setFunc(t1),Ae(!1),Ye(l2),me(n.CULL_FACE),Ne(Ka);function me(B){d[B]!==!0&&(n.enable(B),d[B]=!0)}function fe(B){d[B]!==!1&&(n.disable(B),d[B]=!1)}function Ce(B,Te){return p[B]!==Te?(n.bindFramebuffer(B,Te),p[B]=Te,s&&(B===n.DRAW_FRAMEBUFFER&&(p[n.FRAMEBUFFER]=Te),B===n.FRAMEBUFFER&&(p[n.DRAW_FRAMEBUFFER]=Te)),!0):!1}function Ue(B,Te){let Se=g,Ge=!1;if(B)if(Se=m.get(Te),Se===void 0&&(Se=[],m.set(Te,Se)),B.isWebGLMultipleRenderTargets){const Le=B.texture;if(Se.length!==Le.length||Se[0]!==n.COLOR_ATTACHMENT0){for(let be=0,Ke=Le.length;be<Ke;be++)Se[be]=n.COLOR_ATTACHMENT0+be;Se.length=Le.length,Ge=!0}}else Se[0]!==n.COLOR_ATTACHMENT0&&(Se[0]=n.COLOR_ATTACHMENT0,Ge=!0);else Se[0]!==n.BACK&&(Se[0]=n.BACK,Ge=!0);Ge&&(t.isWebGL2?n.drawBuffers(Se):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Se))}function Me(B){return f!==B?(n.useProgram(B),f=B,!0):!1}const J={[fc]:n.FUNC_ADD,[uD]:n.FUNC_SUBTRACT,[hD]:n.FUNC_REVERSE_SUBTRACT};if(s)J[h2]=n.MIN,J[d2]=n.MAX;else{const B=e.get("EXT_blend_minmax");B!==null&&(J[h2]=B.MIN_EXT,J[d2]=B.MAX_EXT)}const ht={[dD]:n.ZERO,[pD]:n.ONE,[fD]:n.SRC_COLOR,[HM]:n.SRC_ALPHA,[vD]:n.SRC_ALPHA_SATURATE,[bD]:n.DST_COLOR,[gD]:n.DST_ALPHA,[mD]:n.ONE_MINUS_SRC_COLOR,[ZM]:n.ONE_MINUS_SRC_ALPHA,[xD]:n.ONE_MINUS_DST_COLOR,[yD]:n.ONE_MINUS_DST_ALPHA};function Ne(B,Te,Se,Ge,Le,be,Ke,dt){if(B===Ka){y===!0&&(fe(n.BLEND),y=!1);return}if(y===!1&&(me(n.BLEND),y=!0),B!==cD){if(B!==b||dt!==S){if((x!==fc||_!==fc)&&(n.blendEquation(n.FUNC_ADD),x=fc,_=fc),dt)switch(B){case _c:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Pm:n.blendFunc(n.ONE,n.ONE);break;case c2:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case u2:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case _c:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Pm:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case c2:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case u2:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}v=null,w=null,T=null,C=null,b=B,S=dt}return}Le=Le||Te,be=be||Se,Ke=Ke||Ge,(Te!==x||Le!==_)&&(n.blendEquationSeparate(J[Te],J[Le]),x=Te,_=Le),(Se!==v||Ge!==w||be!==T||Ke!==C)&&(n.blendFuncSeparate(ht[Se],ht[Ge],ht[be],ht[Ke]),v=Se,w=Ge,T=be,C=Ke),b=B,S=!1}function Fe(B,Te){B.side===ia?fe(n.CULL_FACE):me(n.CULL_FACE);let Se=B.side===Zs;Te&&(Se=!Se),Ae(Se),B.blending===_c&&B.transparent===!1?Ne(Ka):Ne(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.premultipliedAlpha),l.setFunc(B.depthFunc),l.setTest(B.depthTest),l.setMask(B.depthWrite),o.setMask(B.colorWrite);const Ge=B.stencilWrite;c.setTest(Ge),Ge&&(c.setMask(B.stencilWriteMask),c.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),c.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),qe(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?me(n.SAMPLE_ALPHA_TO_COVERAGE):fe(n.SAMPLE_ALPHA_TO_COVERAGE)}function Ae(B){M!==B&&(B?n.frontFace(n.CW):n.frontFace(n.CCW),M=B)}function Ye(B){B!==aD?(me(n.CULL_FACE),B!==A&&(B===l2?n.cullFace(n.BACK):B===oD?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):fe(n.CULL_FACE),A=B}function He(B){B!==P&&(G&&n.lineWidth(B),P=B)}function qe(B,Te,Se){B?(me(n.POLYGON_OFFSET_FILL),(D!==Te||N!==Se)&&(n.polygonOffset(Te,Se),D=Te,N=Se)):fe(n.POLYGON_OFFSET_FILL)}function ot(B){B?me(n.SCISSOR_TEST):fe(n.SCISSOR_TEST)}function Gt(B){B===void 0&&(B=n.TEXTURE0+L-1),H!==B&&(n.activeTexture(B),H=B)}function Nt(B,Te,Se){Se===void 0&&(H===null?Se=n.TEXTURE0+L-1:Se=H);let Ge=j[Se];Ge===void 0&&(Ge={type:void 0,texture:void 0},j[Se]=Ge),(Ge.type!==B||Ge.texture!==Te)&&(H!==Se&&(n.activeTexture(Se),H=Se),n.bindTexture(B,Te||pe[B]),Ge.type=B,Ge.texture=Te)}function z(){const B=j[H];B!==void 0&&B.type!==void 0&&(n.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function R(){try{n.compressedTexImage2D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ie(){try{n.compressedTexImage3D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ye(){try{n.texSubImage2D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ge(){try{n.texSubImage3D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function xe(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Be(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function _e(){try{n.texStorage2D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Pe(){try{n.texStorage3D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function et(){try{n.texImage2D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Tt(){try{n.texImage3D.apply(n,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ve(B){ee.equals(B)===!1&&(n.scissor(B.x,B.y,B.z,B.w),ee.copy(B))}function Rt(B){te.equals(B)===!1&&(n.viewport(B.x,B.y,B.z,B.w),te.copy(B))}function ut(B,Te){let Se=h.get(Te);Se===void 0&&(Se=new WeakMap,h.set(Te,Se));let Ge=Se.get(B);Ge===void 0&&(Ge=n.getUniformBlockIndex(Te,B.name),Se.set(B,Ge))}function it(B,Te){const Ge=h.get(Te).get(B);u.get(Te)!==Ge&&(n.uniformBlockBinding(Te,Ge,B.__bindingPointIndex),u.set(Te,Ge))}function Qe(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),s===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),d={},H=null,j={},p={},m=new WeakMap,g=[],f=null,y=!1,b=null,x=null,v=null,w=null,_=null,T=null,C=null,S=!1,M=null,A=null,P=null,D=null,N=null,ee.set(0,0,n.canvas.width,n.canvas.height),te.set(0,0,n.canvas.width,n.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:me,disable:fe,bindFramebuffer:Ce,drawBuffers:Ue,useProgram:Me,setBlending:Ne,setMaterial:Fe,setFlipSided:Ae,setCullFace:Ye,setLineWidth:He,setPolygonOffset:qe,setScissorTest:ot,activeTexture:Gt,bindTexture:Nt,unbindTexture:z,compressedTexImage2D:R,compressedTexImage3D:ie,texImage2D:et,texImage3D:Tt,updateUBOMapping:ut,uniformBlockBinding:it,texStorage2D:_e,texStorage3D:Pe,texSubImage2D:ye,texSubImage3D:ge,compressedTexSubImage2D:xe,compressedTexSubImage3D:Be,scissor:ve,viewport:Rt,reset:Qe}}function eW(n,e,t,s,i,r,a){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let g;const f=new WeakMap;let y=!1;try{y=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(z,R){return y?new OffscreenCanvas(z,R):dd("canvas")}function x(z,R,ie,ye){let ge=1;if((z.width>ye||z.height>ye)&&(ge=ye/Math.max(z.width,z.height)),ge<1||R===!0)if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&z instanceof ImageBitmap){const xe=R?o1:Math.floor,Be=xe(ge*z.width),_e=xe(ge*z.height);g===void 0&&(g=b(Be,_e));const Pe=ie?b(Be,_e):g;return Pe.width=Be,Pe.height=_e,Pe.getContext("2d").drawImage(z,0,0,Be,_e),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+z.width+"x"+z.height+") to ("+Be+"x"+_e+")."),Pe}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+z.width+"x"+z.height+")."),z;return z}function v(z){return W2(z.width)&&W2(z.height)}function w(z){return o?!1:z.wrapS!==Ji||z.wrapT!==Ji||z.minFilter!==Es&&z.minFilter!==Ni}function _(z,R){return z.generateMipmaps&&R&&z.minFilter!==Es&&z.minFilter!==Ni}function T(z){n.generateMipmap(z)}function C(z,R,ie,ye,ge=!1){if(o===!1)return R;if(z!==null){if(n[z]!==void 0)return n[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let xe=R;if(R===n.RED&&(ie===n.FLOAT&&(xe=n.R32F),ie===n.HALF_FLOAT&&(xe=n.R16F),ie===n.UNSIGNED_BYTE&&(xe=n.R8)),R===n.RED_INTEGER&&(ie===n.UNSIGNED_BYTE&&(xe=n.R8UI),ie===n.UNSIGNED_SHORT&&(xe=n.R16UI),ie===n.UNSIGNED_INT&&(xe=n.R32UI),ie===n.BYTE&&(xe=n.R8I),ie===n.SHORT&&(xe=n.R16I),ie===n.INT&&(xe=n.R32I)),R===n.RG&&(ie===n.FLOAT&&(xe=n.RG32F),ie===n.HALF_FLOAT&&(xe=n.RG16F),ie===n.UNSIGNED_BYTE&&(xe=n.RG8)),R===n.RGBA){const Be=ge?Dm:Lt.getTransfer(ye);ie===n.FLOAT&&(xe=n.RGBA32F),ie===n.HALF_FLOAT&&(xe=n.RGBA16F),ie===n.UNSIGNED_BYTE&&(xe=Be===jt?n.SRGB8_ALPHA8:n.RGBA8),ie===n.UNSIGNED_SHORT_4_4_4_4&&(xe=n.RGBA4),ie===n.UNSIGNED_SHORT_5_5_5_1&&(xe=n.RGB5_A1)}return(xe===n.R16F||xe===n.R32F||xe===n.RG16F||xe===n.RG32F||xe===n.RGBA16F||xe===n.RGBA32F)&&e.get("EXT_color_buffer_float"),xe}function S(z,R,ie){return _(z,ie)===!0||z.isFramebufferTexture&&z.minFilter!==Es&&z.minFilter!==Ni?Math.log2(Math.max(R.width,R.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?R.mipmaps.length:1}function M(z){return z===Es||z===p2||z===kb?n.NEAREST:n.LINEAR}function A(z){const R=z.target;R.removeEventListener("dispose",A),D(R),R.isVideoTexture&&m.delete(R)}function P(z){const R=z.target;R.removeEventListener("dispose",P),L(R)}function D(z){const R=s.get(z);if(R.__webglInit===void 0)return;const ie=z.source,ye=f.get(ie);if(ye){const ge=ye[R.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&N(z),Object.keys(ye).length===0&&f.delete(ie)}s.remove(z)}function N(z){const R=s.get(z);n.deleteTexture(R.__webglTexture);const ie=z.source,ye=f.get(ie);delete ye[R.__cacheKey],a.memory.textures--}function L(z){const R=z.texture,ie=s.get(z),ye=s.get(R);if(ye.__webglTexture!==void 0&&(n.deleteTexture(ye.__webglTexture),a.memory.textures--),z.depthTexture&&z.depthTexture.dispose(),z.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++){if(Array.isArray(ie.__webglFramebuffer[ge]))for(let xe=0;xe<ie.__webglFramebuffer[ge].length;xe++)n.deleteFramebuffer(ie.__webglFramebuffer[ge][xe]);else n.deleteFramebuffer(ie.__webglFramebuffer[ge]);ie.__webglDepthbuffer&&n.deleteRenderbuffer(ie.__webglDepthbuffer[ge])}else{if(Array.isArray(ie.__webglFramebuffer))for(let ge=0;ge<ie.__webglFramebuffer.length;ge++)n.deleteFramebuffer(ie.__webglFramebuffer[ge]);else n.deleteFramebuffer(ie.__webglFramebuffer);if(ie.__webglDepthbuffer&&n.deleteRenderbuffer(ie.__webglDepthbuffer),ie.__webglMultisampledFramebuffer&&n.deleteFramebuffer(ie.__webglMultisampledFramebuffer),ie.__webglColorRenderbuffer)for(let ge=0;ge<ie.__webglColorRenderbuffer.length;ge++)ie.__webglColorRenderbuffer[ge]&&n.deleteRenderbuffer(ie.__webglColorRenderbuffer[ge]);ie.__webglDepthRenderbuffer&&n.deleteRenderbuffer(ie.__webglDepthRenderbuffer)}if(z.isWebGLMultipleRenderTargets)for(let ge=0,xe=R.length;ge<xe;ge++){const Be=s.get(R[ge]);Be.__webglTexture&&(n.deleteTexture(Be.__webglTexture),a.memory.textures--),s.remove(R[ge])}s.remove(R),s.remove(z)}let G=0;function V(){G=0}function U(){const z=G;return z>=l&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+l),G+=1,z}function H(z){const R=[];return R.push(z.wrapS),R.push(z.wrapT),R.push(z.wrapR||0),R.push(z.magFilter),R.push(z.minFilter),R.push(z.anisotropy),R.push(z.internalFormat),R.push(z.format),R.push(z.type),R.push(z.generateMipmaps),R.push(z.premultiplyAlpha),R.push(z.flipY),R.push(z.unpackAlignment),R.push(z.colorSpace),R.join()}function j(z,R){const ie=s.get(z);if(z.isVideoTexture&&Gt(z),z.isRenderTargetTexture===!1&&z.version>0&&ie.__version!==z.version){const ye=z.image;if(ye===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ye.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ce(ie,z,R);return}}t.bindTexture(n.TEXTURE_2D,ie.__webglTexture,n.TEXTURE0+R)}function O(z,R){const ie=s.get(z);if(z.version>0&&ie.__version!==z.version){Ce(ie,z,R);return}t.bindTexture(n.TEXTURE_2D_ARRAY,ie.__webglTexture,n.TEXTURE0+R)}function X(z,R){const ie=s.get(z);if(z.version>0&&ie.__version!==z.version){Ce(ie,z,R);return}t.bindTexture(n.TEXTURE_3D,ie.__webglTexture,n.TEXTURE0+R)}function ee(z,R){const ie=s.get(z);if(z.version>0&&ie.__version!==z.version){Ue(ie,z,R);return}t.bindTexture(n.TEXTURE_CUBE_MAP,ie.__webglTexture,n.TEXTURE0+R)}const te={[cd]:n.REPEAT,[Ji]:n.CLAMP_TO_EDGE,[i1]:n.MIRRORED_REPEAT},se={[Es]:n.NEAREST,[p2]:n.NEAREST_MIPMAP_NEAREST,[kb]:n.NEAREST_MIPMAP_LINEAR,[Ni]:n.LINEAR,[DD]:n.LINEAR_MIPMAP_NEAREST,[ud]:n.LINEAR_MIPMAP_LINEAR},pe={[jD]:n.NEVER,[sF]:n.ALWAYS,[QD]:n.LESS,[qD]:n.LEQUAL,[JD]:n.EQUAL,[nF]:n.GEQUAL,[eF]:n.GREATER,[tF]:n.NOTEQUAL};function me(z,R,ie){if(ie?(n.texParameteri(z,n.TEXTURE_WRAP_S,te[R.wrapS]),n.texParameteri(z,n.TEXTURE_WRAP_T,te[R.wrapT]),(z===n.TEXTURE_3D||z===n.TEXTURE_2D_ARRAY)&&n.texParameteri(z,n.TEXTURE_WRAP_R,te[R.wrapR]),n.texParameteri(z,n.TEXTURE_MAG_FILTER,se[R.magFilter]),n.texParameteri(z,n.TEXTURE_MIN_FILTER,se[R.minFilter])):(n.texParameteri(z,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(z,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(z===n.TEXTURE_3D||z===n.TEXTURE_2D_ARRAY)&&n.texParameteri(z,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(R.wrapS!==Ji||R.wrapT!==Ji)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(z,n.TEXTURE_MAG_FILTER,M(R.magFilter)),n.texParameteri(z,n.TEXTURE_MIN_FILTER,M(R.minFilter)),R.minFilter!==Es&&R.minFilter!==Ni&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),R.compareFunction&&(n.texParameteri(z,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(z,n.TEXTURE_COMPARE_FUNC,pe[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const ye=e.get("EXT_texture_filter_anisotropic");if(R.magFilter===Es||R.minFilter!==kb&&R.minFilter!==ud||R.type===Va&&e.has("OES_texture_float_linear")===!1||o===!1&&R.type===hd&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||s.get(R).__currentAnisotropy)&&(n.texParameterf(z,ye.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),s.get(R).__currentAnisotropy=R.anisotropy)}}function fe(z,R){let ie=!1;z.__webglInit===void 0&&(z.__webglInit=!0,R.addEventListener("dispose",A));const ye=R.source;let ge=f.get(ye);ge===void 0&&(ge={},f.set(ye,ge));const xe=H(R);if(xe!==z.__cacheKey){ge[xe]===void 0&&(ge[xe]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,ie=!0),ge[xe].usedTimes++;const Be=ge[z.__cacheKey];Be!==void 0&&(ge[z.__cacheKey].usedTimes--,Be.usedTimes===0&&N(R)),z.__cacheKey=xe,z.__webglTexture=ge[xe].texture}return ie}function Ce(z,R,ie){let ye=n.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ye=n.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ye=n.TEXTURE_3D);const ge=fe(z,R),xe=R.source;t.bindTexture(ye,z.__webglTexture,n.TEXTURE0+ie);const Be=s.get(xe);if(xe.version!==Be.__version||ge===!0){t.activeTexture(n.TEXTURE0+ie);const _e=Lt.getPrimaries(Lt.workingColorSpace),Pe=R.colorSpace===Ai?null:Lt.getPrimaries(R.colorSpace),et=R.colorSpace===Ai||_e===Pe?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,R.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,R.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,et);const Tt=w(R)&&v(R.image)===!1;let ve=x(R.image,Tt,!1,u);ve=Nt(R,ve);const Rt=v(ve)||o,ut=r.convert(R.format,R.colorSpace);let it=r.convert(R.type),Qe=C(R.internalFormat,ut,it,R.colorSpace,R.isVideoTexture);me(ye,R,Rt);let B;const Te=R.mipmaps,Se=o&&R.isVideoTexture!==!0,Ge=Be.__version===void 0||ge===!0,Le=S(R,ve,Rt);if(R.isDepthTexture)Qe=n.DEPTH_COMPONENT,o?R.type===Va?Qe=n.DEPTH_COMPONENT32F:R.type===Ga?Qe=n.DEPTH_COMPONENT24:R.type===Jo?Qe=n.DEPTH24_STENCIL8:Qe=n.DEPTH_COMPONENT16:R.type===Va&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===qo&&Qe===n.DEPTH_COMPONENT&&R.type!==_v&&R.type!==Ga&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=Ga,it=r.convert(R.type)),R.format===Dc&&Qe===n.DEPTH_COMPONENT&&(Qe=n.DEPTH_STENCIL,R.type!==Jo&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=Jo,it=r.convert(R.type))),Ge&&(Se?t.texStorage2D(n.TEXTURE_2D,1,Qe,ve.width,ve.height):t.texImage2D(n.TEXTURE_2D,0,Qe,ve.width,ve.height,0,ut,it,null));else if(R.isDataTexture)if(Te.length>0&&Rt){Se&&Ge&&t.texStorage2D(n.TEXTURE_2D,Le,Qe,Te[0].width,Te[0].height);for(let be=0,Ke=Te.length;be<Ke;be++)B=Te[be],Se?t.texSubImage2D(n.TEXTURE_2D,be,0,0,B.width,B.height,ut,it,B.data):t.texImage2D(n.TEXTURE_2D,be,Qe,B.width,B.height,0,ut,it,B.data);R.generateMipmaps=!1}else Se?(Ge&&t.texStorage2D(n.TEXTURE_2D,Le,Qe,ve.width,ve.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,ve.width,ve.height,ut,it,ve.data)):t.texImage2D(n.TEXTURE_2D,0,Qe,ve.width,ve.height,0,ut,it,ve.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){Se&&Ge&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Le,Qe,Te[0].width,Te[0].height,ve.depth);for(let be=0,Ke=Te.length;be<Ke;be++)B=Te[be],R.format!==qi?ut!==null?Se?t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,be,0,0,0,B.width,B.height,ve.depth,ut,B.data,0,0):t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,be,Qe,B.width,B.height,ve.depth,0,B.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Se?t.texSubImage3D(n.TEXTURE_2D_ARRAY,be,0,0,0,B.width,B.height,ve.depth,ut,it,B.data):t.texImage3D(n.TEXTURE_2D_ARRAY,be,Qe,B.width,B.height,ve.depth,0,ut,it,B.data)}else{Se&&Ge&&t.texStorage2D(n.TEXTURE_2D,Le,Qe,Te[0].width,Te[0].height);for(let be=0,Ke=Te.length;be<Ke;be++)B=Te[be],R.format!==qi?ut!==null?Se?t.compressedTexSubImage2D(n.TEXTURE_2D,be,0,0,B.width,B.height,ut,B.data):t.compressedTexImage2D(n.TEXTURE_2D,be,Qe,B.width,B.height,0,B.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Se?t.texSubImage2D(n.TEXTURE_2D,be,0,0,B.width,B.height,ut,it,B.data):t.texImage2D(n.TEXTURE_2D,be,Qe,B.width,B.height,0,ut,it,B.data)}else if(R.isDataArrayTexture)Se?(Ge&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Le,Qe,ve.width,ve.height,ve.depth),t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,ve.width,ve.height,ve.depth,ut,it,ve.data)):t.texImage3D(n.TEXTURE_2D_ARRAY,0,Qe,ve.width,ve.height,ve.depth,0,ut,it,ve.data);else if(R.isData3DTexture)Se?(Ge&&t.texStorage3D(n.TEXTURE_3D,Le,Qe,ve.width,ve.height,ve.depth),t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,ve.width,ve.height,ve.depth,ut,it,ve.data)):t.texImage3D(n.TEXTURE_3D,0,Qe,ve.width,ve.height,ve.depth,0,ut,it,ve.data);else if(R.isFramebufferTexture){if(Ge)if(Se)t.texStorage2D(n.TEXTURE_2D,Le,Qe,ve.width,ve.height);else{let be=ve.width,Ke=ve.height;for(let dt=0;dt<Le;dt++)t.texImage2D(n.TEXTURE_2D,dt,Qe,be,Ke,0,ut,it,null),be>>=1,Ke>>=1}}else if(Te.length>0&&Rt){Se&&Ge&&t.texStorage2D(n.TEXTURE_2D,Le,Qe,Te[0].width,Te[0].height);for(let be=0,Ke=Te.length;be<Ke;be++)B=Te[be],Se?t.texSubImage2D(n.TEXTURE_2D,be,0,0,ut,it,B):t.texImage2D(n.TEXTURE_2D,be,Qe,ut,it,B);R.generateMipmaps=!1}else Se?(Ge&&t.texStorage2D(n.TEXTURE_2D,Le,Qe,ve.width,ve.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,ut,it,ve)):t.texImage2D(n.TEXTURE_2D,0,Qe,ut,it,ve);_(R,Rt)&&T(ye),Be.__version=xe.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function Ue(z,R,ie){if(R.image.length!==6)return;const ye=fe(z,R),ge=R.source;t.bindTexture(n.TEXTURE_CUBE_MAP,z.__webglTexture,n.TEXTURE0+ie);const xe=s.get(ge);if(ge.version!==xe.__version||ye===!0){t.activeTexture(n.TEXTURE0+ie);const Be=Lt.getPrimaries(Lt.workingColorSpace),_e=R.colorSpace===Ai?null:Lt.getPrimaries(R.colorSpace),Pe=R.colorSpace===Ai||Be===_e?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,R.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,R.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Pe);const et=R.isCompressedTexture||R.image[0].isCompressedTexture,Tt=R.image[0]&&R.image[0].isDataTexture,ve=[];for(let be=0;be<6;be++)!et&&!Tt?ve[be]=x(R.image[be],!1,!0,c):ve[be]=Tt?R.image[be].image:R.image[be],ve[be]=Nt(R,ve[be]);const Rt=ve[0],ut=v(Rt)||o,it=r.convert(R.format,R.colorSpace),Qe=r.convert(R.type),B=C(R.internalFormat,it,Qe,R.colorSpace),Te=o&&R.isVideoTexture!==!0,Se=xe.__version===void 0||ye===!0;let Ge=S(R,Rt,ut);me(n.TEXTURE_CUBE_MAP,R,ut);let Le;if(et){Te&&Se&&t.texStorage2D(n.TEXTURE_CUBE_MAP,Ge,B,Rt.width,Rt.height);for(let be=0;be<6;be++){Le=ve[be].mipmaps;for(let Ke=0;Ke<Le.length;Ke++){const dt=Le[Ke];R.format!==qi?it!==null?Te?t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke,0,0,dt.width,dt.height,it,dt.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke,B,dt.width,dt.height,0,dt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Te?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke,0,0,dt.width,dt.height,it,Qe,dt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke,B,dt.width,dt.height,0,it,Qe,dt.data)}}}else{Le=R.mipmaps,Te&&Se&&(Le.length>0&&Ge++,t.texStorage2D(n.TEXTURE_CUBE_MAP,Ge,B,ve[0].width,ve[0].height));for(let be=0;be<6;be++)if(Tt){Te?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,0,0,ve[be].width,ve[be].height,it,Qe,ve[be].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,B,ve[be].width,ve[be].height,0,it,Qe,ve[be].data);for(let Ke=0;Ke<Le.length;Ke++){const Ts=Le[Ke].image[be].image;Te?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke+1,0,0,Ts.width,Ts.height,it,Qe,Ts.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke+1,B,Ts.width,Ts.height,0,it,Qe,Ts.data)}}else{Te?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,0,0,it,Qe,ve[be]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,B,it,Qe,ve[be]);for(let Ke=0;Ke<Le.length;Ke++){const dt=Le[Ke];Te?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke+1,0,0,it,Qe,dt.image[be]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ke+1,B,it,Qe,dt.image[be])}}}_(R,ut)&&T(n.TEXTURE_CUBE_MAP),xe.__version=ge.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function Me(z,R,ie,ye,ge,xe){const Be=r.convert(ie.format,ie.colorSpace),_e=r.convert(ie.type),Pe=C(ie.internalFormat,Be,_e,ie.colorSpace);if(!s.get(R).__hasExternalTextures){const Tt=Math.max(1,R.width>>xe),ve=Math.max(1,R.height>>xe);ge===n.TEXTURE_3D||ge===n.TEXTURE_2D_ARRAY?t.texImage3D(ge,xe,Pe,Tt,ve,R.depth,0,Be,_e,null):t.texImage2D(ge,xe,Pe,Tt,ve,0,Be,_e,null)}t.bindFramebuffer(n.FRAMEBUFFER,z),ot(R)?d.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,ye,ge,s.get(ie).__webglTexture,0,qe(R)):(ge===n.TEXTURE_2D||ge>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&ge<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,ye,ge,s.get(ie).__webglTexture,xe),t.bindFramebuffer(n.FRAMEBUFFER,null)}function J(z,R,ie){if(n.bindRenderbuffer(n.RENDERBUFFER,z),R.depthBuffer&&!R.stencilBuffer){let ye=o===!0?n.DEPTH_COMPONENT24:n.DEPTH_COMPONENT16;if(ie||ot(R)){const ge=R.depthTexture;ge&&ge.isDepthTexture&&(ge.type===Va?ye=n.DEPTH_COMPONENT32F:ge.type===Ga&&(ye=n.DEPTH_COMPONENT24));const xe=qe(R);ot(R)?d.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,xe,ye,R.width,R.height):n.renderbufferStorageMultisample(n.RENDERBUFFER,xe,ye,R.width,R.height)}else n.renderbufferStorage(n.RENDERBUFFER,ye,R.width,R.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,z)}else if(R.depthBuffer&&R.stencilBuffer){const ye=qe(R);ie&&ot(R)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,ye,n.DEPTH24_STENCIL8,R.width,R.height):ot(R)?d.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,ye,n.DEPTH24_STENCIL8,R.width,R.height):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,R.width,R.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,z)}else{const ye=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let ge=0;ge<ye.length;ge++){const xe=ye[ge],Be=r.convert(xe.format,xe.colorSpace),_e=r.convert(xe.type),Pe=C(xe.internalFormat,Be,_e,xe.colorSpace),et=qe(R);ie&&ot(R)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,et,Pe,R.width,R.height):ot(R)?d.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,et,Pe,R.width,R.height):n.renderbufferStorage(n.RENDERBUFFER,Pe,R.width,R.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function ht(z,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,z),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!s.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),j(R.depthTexture,0);const ye=s.get(R.depthTexture).__webglTexture,ge=qe(R);if(R.depthTexture.format===qo)ot(R)?d.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ye,0,ge):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ye,0);else if(R.depthTexture.format===Dc)ot(R)?d.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ye,0,ge):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ye,0);else throw new Error("Unknown depthTexture format")}function Ne(z){const R=s.get(z),ie=z.isWebGLCubeRenderTarget===!0;if(z.depthTexture&&!R.__autoAllocateDepthBuffer){if(ie)throw new Error("target.depthTexture not supported in Cube render targets");ht(R.__webglFramebuffer,z)}else if(ie){R.__webglDepthbuffer=[];for(let ye=0;ye<6;ye++)t.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer[ye]),R.__webglDepthbuffer[ye]=n.createRenderbuffer(),J(R.__webglDepthbuffer[ye],z,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer=n.createRenderbuffer(),J(R.__webglDepthbuffer,z,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function Fe(z,R,ie){const ye=s.get(z);R!==void 0&&Me(ye.__webglFramebuffer,z,z.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),ie!==void 0&&Ne(z)}function Ae(z){const R=z.texture,ie=s.get(z),ye=s.get(R);z.addEventListener("dispose",P),z.isWebGLMultipleRenderTargets!==!0&&(ye.__webglTexture===void 0&&(ye.__webglTexture=n.createTexture()),ye.__version=R.version,a.memory.textures++);const ge=z.isWebGLCubeRenderTarget===!0,xe=z.isWebGLMultipleRenderTargets===!0,Be=v(z)||o;if(ge){ie.__webglFramebuffer=[];for(let _e=0;_e<6;_e++)if(o&&R.mipmaps&&R.mipmaps.length>0){ie.__webglFramebuffer[_e]=[];for(let Pe=0;Pe<R.mipmaps.length;Pe++)ie.__webglFramebuffer[_e][Pe]=n.createFramebuffer()}else ie.__webglFramebuffer[_e]=n.createFramebuffer()}else{if(o&&R.mipmaps&&R.mipmaps.length>0){ie.__webglFramebuffer=[];for(let _e=0;_e<R.mipmaps.length;_e++)ie.__webglFramebuffer[_e]=n.createFramebuffer()}else ie.__webglFramebuffer=n.createFramebuffer();if(xe)if(i.drawBuffers){const _e=z.texture;for(let Pe=0,et=_e.length;Pe<et;Pe++){const Tt=s.get(_e[Pe]);Tt.__webglTexture===void 0&&(Tt.__webglTexture=n.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&z.samples>0&&ot(z)===!1){const _e=xe?R:[R];ie.__webglMultisampledFramebuffer=n.createFramebuffer(),ie.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,ie.__webglMultisampledFramebuffer);for(let Pe=0;Pe<_e.length;Pe++){const et=_e[Pe];ie.__webglColorRenderbuffer[Pe]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,ie.__webglColorRenderbuffer[Pe]);const Tt=r.convert(et.format,et.colorSpace),ve=r.convert(et.type),Rt=C(et.internalFormat,Tt,ve,et.colorSpace,z.isXRRenderTarget===!0),ut=qe(z);n.renderbufferStorageMultisample(n.RENDERBUFFER,ut,Rt,z.width,z.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Pe,n.RENDERBUFFER,ie.__webglColorRenderbuffer[Pe])}n.bindRenderbuffer(n.RENDERBUFFER,null),z.depthBuffer&&(ie.__webglDepthRenderbuffer=n.createRenderbuffer(),J(ie.__webglDepthRenderbuffer,z,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(ge){t.bindTexture(n.TEXTURE_CUBE_MAP,ye.__webglTexture),me(n.TEXTURE_CUBE_MAP,R,Be);for(let _e=0;_e<6;_e++)if(o&&R.mipmaps&&R.mipmaps.length>0)for(let Pe=0;Pe<R.mipmaps.length;Pe++)Me(ie.__webglFramebuffer[_e][Pe],z,R,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+_e,Pe);else Me(ie.__webglFramebuffer[_e],z,R,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+_e,0);_(R,Be)&&T(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(xe){const _e=z.texture;for(let Pe=0,et=_e.length;Pe<et;Pe++){const Tt=_e[Pe],ve=s.get(Tt);t.bindTexture(n.TEXTURE_2D,ve.__webglTexture),me(n.TEXTURE_2D,Tt,Be),Me(ie.__webglFramebuffer,z,Tt,n.COLOR_ATTACHMENT0+Pe,n.TEXTURE_2D,0),_(Tt,Be)&&T(n.TEXTURE_2D)}t.unbindTexture()}else{let _e=n.TEXTURE_2D;if((z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(o?_e=z.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(_e,ye.__webglTexture),me(_e,R,Be),o&&R.mipmaps&&R.mipmaps.length>0)for(let Pe=0;Pe<R.mipmaps.length;Pe++)Me(ie.__webglFramebuffer[Pe],z,R,n.COLOR_ATTACHMENT0,_e,Pe);else Me(ie.__webglFramebuffer,z,R,n.COLOR_ATTACHMENT0,_e,0);_(R,Be)&&T(_e),t.unbindTexture()}z.depthBuffer&&Ne(z)}function Ye(z){const R=v(z)||o,ie=z.isWebGLMultipleRenderTargets===!0?z.texture:[z.texture];for(let ye=0,ge=ie.length;ye<ge;ye++){const xe=ie[ye];if(_(xe,R)){const Be=z.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,_e=s.get(xe).__webglTexture;t.bindTexture(Be,_e),T(Be),t.unbindTexture()}}}function He(z){if(o&&z.samples>0&&ot(z)===!1){const R=z.isWebGLMultipleRenderTargets?z.texture:[z.texture],ie=z.width,ye=z.height;let ge=n.COLOR_BUFFER_BIT;const xe=[],Be=z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,_e=s.get(z),Pe=z.isWebGLMultipleRenderTargets===!0;if(Pe)for(let et=0;et<R.length;et++)t.bindFramebuffer(n.FRAMEBUFFER,_e.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+et,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,_e.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+et,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,_e.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,_e.__webglFramebuffer);for(let et=0;et<R.length;et++){xe.push(n.COLOR_ATTACHMENT0+et),z.depthBuffer&&xe.push(Be);const Tt=_e.__ignoreDepthValues!==void 0?_e.__ignoreDepthValues:!1;if(Tt===!1&&(z.depthBuffer&&(ge|=n.DEPTH_BUFFER_BIT),z.stencilBuffer&&(ge|=n.STENCIL_BUFFER_BIT)),Pe&&n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,_e.__webglColorRenderbuffer[et]),Tt===!0&&(n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[Be]),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[Be])),Pe){const ve=s.get(R[et]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,ve,0)}n.blitFramebuffer(0,0,ie,ye,0,0,ie,ye,ge,n.NEAREST),p&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,xe)}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),Pe)for(let et=0;et<R.length;et++){t.bindFramebuffer(n.FRAMEBUFFER,_e.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+et,n.RENDERBUFFER,_e.__webglColorRenderbuffer[et]);const Tt=s.get(R[et]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,_e.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+et,n.TEXTURE_2D,Tt,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,_e.__webglMultisampledFramebuffer)}}function qe(z){return Math.min(h,z.samples)}function ot(z){const R=s.get(z);return o&&z.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function Gt(z){const R=a.render.frame;m.get(z)!==R&&(m.set(z,R),z.update())}function Nt(z,R){const ie=z.colorSpace,ye=z.format,ge=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||z.format===r1||ie!==ua&&ie!==Ai&&(Lt.getTransfer(ie)===jt?o===!1?e.has("EXT_sRGB")===!0&&ye===qi?(z.format=r1,z.minFilter=Ni,z.generateMipmaps=!1):R=iE.sRGBToLinear(R):(ye!==qi||ge!==ja)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ie)),R}this.allocateTextureUnit=U,this.resetTextureUnits=V,this.setTexture2D=j,this.setTexture2DArray=O,this.setTexture3D=X,this.setTextureCube=ee,this.rebindTextures=Fe,this.setupRenderTarget=Ae,this.updateRenderTargetMipmap=Ye,this.updateMultisampleRenderTarget=He,this.setupDepthRenderbuffer=Ne,this.setupFrameBufferTexture=Me,this.useMultisampledRTT=ot}function tW(n,e,t){const s=t.isWebGL2;function i(r,a=Ai){let o;const l=Lt.getTransfer(a);if(r===ja)return n.UNSIGNED_BYTE;if(r===QM)return n.UNSIGNED_SHORT_4_4_4_4;if(r===JM)return n.UNSIGNED_SHORT_5_5_5_1;if(r===FD)return n.BYTE;if(r===OD)return n.SHORT;if(r===_v)return n.UNSIGNED_SHORT;if(r===jM)return n.INT;if(r===Ga)return n.UNSIGNED_INT;if(r===Va)return n.FLOAT;if(r===hd)return s?n.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===zD)return n.ALPHA;if(r===qi)return n.RGBA;if(r===GD)return n.LUMINANCE;if(r===VD)return n.LUMINANCE_ALPHA;if(r===qo)return n.DEPTH_COMPONENT;if(r===Dc)return n.DEPTH_STENCIL;if(r===r1)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===WD)return n.RED;if(r===qM)return n.RED_INTEGER;if(r===$D)return n.RG;if(r===eE)return n.RG_INTEGER;if(r===tE)return n.RGBA_INTEGER;if(r===Nb||r===Rb||r===Ab||r===Lb)if(l===jt)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===Nb)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Rb)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ab)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Lb)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===Nb)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Rb)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ab)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Lb)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===f2||r===m2||r===g2||r===y2)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===f2)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===m2)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===g2)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===y2)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===UD)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===b2||r===x2)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===b2)return l===jt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===x2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===v2||r===w2||r===S2||r===_2||r===T2||r===I2||r===C2||r===M2||r===E2||r===k2||r===N2||r===R2||r===A2||r===L2)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===v2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===w2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===S2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===_2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===T2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===I2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===C2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===M2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===E2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===k2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===N2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===R2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===A2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===L2)return l===jt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Pb||r===P2||r===D2)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===Pb)return l===jt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===P2)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===D2)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===BD||r===F2||r===O2||r===z2)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(r===Pb)return o.COMPRESSED_RED_RGTC1_EXT;if(r===F2)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===O2)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===z2)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Jo?s?n.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):n[r]!==void 0?n[r]:null}return{convert:i}}class nW extends Ri{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Ko extends Ns{constructor(){super(),this.isGroup=!0,this.type="Group"}}const sW={type:"move"};class ix{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ko,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ko,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ae,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ae),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ko,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ae,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ae),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const s of e.hand.values())this._getHandJoint(t,s)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,s){let i=null,r=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const g of e.hand.values()){const f=t.getJointPose(g,s),y=this._getHandJoint(c,g);f!==null&&(y.matrix.fromArray(f.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.matrixWorldNeedsUpdate=!0,y.jointRadius=f.radius),y.visible=f!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),p=.02,m=.005;c.inputState.pinching&&d>p+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=p-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,s),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,s),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(sW)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const s=new Ko;s.matrixAutoUpdate=!1,s.visible=!1,e.joints[t.jointName]=s,e.add(s)}return e.joints[t.jointName]}}class iW extends Ks{constructor(e,t,s,i,r,a,o,l,c,u){if(u=u!==void 0?u:qo,u!==qo&&u!==Dc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");s===void 0&&u===qo&&(s=Ga),s===void 0&&u===Dc&&(s=Jo),super(null,i,r,a,o,l,u,s,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:Es,this.minFilter=l!==void 0?l:Es,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class rW extends uu{constructor(e,t){super();const s=this;let i=null,r=1,a=null,o="local-floor",l=1,c=null,u=null,h=null,d=null,p=null,m=null;const g=t.getContextAttributes();let f=null,y=null;const b=[],x=[],v=new Ri;v.layers.enable(1),v.viewport=new rs;const w=new Ri;w.layers.enable(2),w.viewport=new rs;const _=[v,w],T=new nW;T.layers.enable(1),T.layers.enable(2);let C=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(O){let X=b[O];return X===void 0&&(X=new ix,b[O]=X),X.getTargetRaySpace()},this.getControllerGrip=function(O){let X=b[O];return X===void 0&&(X=new ix,b[O]=X),X.getGripSpace()},this.getHand=function(O){let X=b[O];return X===void 0&&(X=new ix,b[O]=X),X.getHandSpace()};function M(O){const X=x.indexOf(O.inputSource);if(X===-1)return;const ee=b[X];ee!==void 0&&(ee.update(O.inputSource,O.frame,c||a),ee.dispatchEvent({type:O.type,data:O.inputSource}))}function A(){i.removeEventListener("select",M),i.removeEventListener("selectstart",M),i.removeEventListener("selectend",M),i.removeEventListener("squeeze",M),i.removeEventListener("squeezestart",M),i.removeEventListener("squeezeend",M),i.removeEventListener("end",A),i.removeEventListener("inputsourceschange",P);for(let O=0;O<b.length;O++){const X=x[O];X!==null&&(x[O]=null,b[O].disconnect(X))}C=null,S=null,e.setRenderTarget(f),p=null,d=null,h=null,i=null,y=null,j.stop(),s.isPresenting=!1,s.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(O){r=O,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(O){o=O,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(O){c=O},this.getBaseLayer=function(){return d!==null?d:p},this.getBinding=function(){return h},this.getFrame=function(){return m},this.getSession=function(){return i},this.setSession=async function(O){if(i=O,i!==null){if(f=e.getRenderTarget(),i.addEventListener("select",M),i.addEventListener("selectstart",M),i.addEventListener("selectend",M),i.addEventListener("squeeze",M),i.addEventListener("squeezestart",M),i.addEventListener("squeezeend",M),i.addEventListener("end",A),i.addEventListener("inputsourceschange",P),g.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const X={antialias:i.renderState.layers===void 0?g.antialias:!0,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};p=new XRWebGLLayer(i,t,X),i.updateRenderState({baseLayer:p}),y=new ul(p.framebufferWidth,p.framebufferHeight,{format:qi,type:ja,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil})}else{let X=null,ee=null,te=null;g.depth&&(te=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,X=g.stencil?Dc:qo,ee=g.stencil?Jo:Ga);const se={colorFormat:t.RGBA8,depthFormat:te,scaleFactor:r};h=new XRWebGLBinding(i,t),d=h.createProjectionLayer(se),i.updateRenderState({layers:[d]}),y=new ul(d.textureWidth,d.textureHeight,{format:qi,type:ja,depthTexture:new iW(d.textureWidth,d.textureHeight,ee,void 0,void 0,void 0,void 0,void 0,void 0,X),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0});const pe=e.properties.get(y);pe.__ignoreDepthValues=d.ignoreDepthValues}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await i.requestReferenceSpace(o),j.setContext(i),j.start(),s.isPresenting=!0,s.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function P(O){for(let X=0;X<O.removed.length;X++){const ee=O.removed[X],te=x.indexOf(ee);te>=0&&(x[te]=null,b[te].disconnect(ee))}for(let X=0;X<O.added.length;X++){const ee=O.added[X];let te=x.indexOf(ee);if(te===-1){for(let pe=0;pe<b.length;pe++)if(pe>=x.length){x.push(ee),te=pe;break}else if(x[pe]===null){x[pe]=ee,te=pe;break}if(te===-1)break}const se=b[te];se&&se.connect(ee)}}const D=new ae,N=new ae;function L(O,X,ee){D.setFromMatrixPosition(X.matrixWorld),N.setFromMatrixPosition(ee.matrixWorld);const te=D.distanceTo(N),se=X.projectionMatrix.elements,pe=ee.projectionMatrix.elements,me=se[14]/(se[10]-1),fe=se[14]/(se[10]+1),Ce=(se[9]+1)/se[5],Ue=(se[9]-1)/se[5],Me=(se[8]-1)/se[0],J=(pe[8]+1)/pe[0],ht=me*Me,Ne=me*J,Fe=te/(-Me+J),Ae=Fe*-Me;X.matrixWorld.decompose(O.position,O.quaternion,O.scale),O.translateX(Ae),O.translateZ(Fe),O.matrixWorld.compose(O.position,O.quaternion,O.scale),O.matrixWorldInverse.copy(O.matrixWorld).invert();const Ye=me+Fe,He=fe+Fe,qe=ht-Ae,ot=Ne+(te-Ae),Gt=Ce*fe/He*Ye,Nt=Ue*fe/He*Ye;O.projectionMatrix.makePerspective(qe,ot,Gt,Nt,Ye,He),O.projectionMatrixInverse.copy(O.projectionMatrix).invert()}function G(O,X){X===null?O.matrixWorld.copy(O.matrix):O.matrixWorld.multiplyMatrices(X.matrixWorld,O.matrix),O.matrixWorldInverse.copy(O.matrixWorld).invert()}this.updateCamera=function(O){if(i===null)return;T.near=w.near=v.near=O.near,T.far=w.far=v.far=O.far,(C!==T.near||S!==T.far)&&(i.updateRenderState({depthNear:T.near,depthFar:T.far}),C=T.near,S=T.far);const X=O.parent,ee=T.cameras;G(T,X);for(let te=0;te<ee.length;te++)G(ee[te],X);ee.length===2?L(T,v,w):T.projectionMatrix.copy(v.projectionMatrix),V(O,T,X)};function V(O,X,ee){ee===null?O.matrix.copy(X.matrixWorld):(O.matrix.copy(ee.matrixWorld),O.matrix.invert(),O.matrix.multiply(X.matrixWorld)),O.matrix.decompose(O.position,O.quaternion,O.scale),O.updateMatrixWorld(!0),O.projectionMatrix.copy(X.projectionMatrix),O.projectionMatrixInverse.copy(X.projectionMatrixInverse),O.isPerspectiveCamera&&(O.fov=a1*2*Math.atan(1/O.projectionMatrix.elements[5]),O.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(d===null&&p===null))return l},this.setFoveation=function(O){l=O,d!==null&&(d.fixedFoveation=O),p!==null&&p.fixedFoveation!==void 0&&(p.fixedFoveation=O)};let U=null;function H(O,X){if(u=X.getViewerPose(c||a),m=X,u!==null){const ee=u.views;p!==null&&(e.setRenderTargetFramebuffer(y,p.framebuffer),e.setRenderTarget(y));let te=!1;ee.length!==T.cameras.length&&(T.cameras.length=0,te=!0);for(let se=0;se<ee.length;se++){const pe=ee[se];let me=null;if(p!==null)me=p.getViewport(pe);else{const Ce=h.getViewSubImage(d,pe);me=Ce.viewport,se===0&&(e.setRenderTargetTextures(y,Ce.colorTexture,d.ignoreDepthValues?void 0:Ce.depthStencilTexture),e.setRenderTarget(y))}let fe=_[se];fe===void 0&&(fe=new Ri,fe.layers.enable(se),fe.viewport=new rs,_[se]=fe),fe.matrix.fromArray(pe.transform.matrix),fe.matrix.decompose(fe.position,fe.quaternion,fe.scale),fe.projectionMatrix.fromArray(pe.projectionMatrix),fe.projectionMatrixInverse.copy(fe.projectionMatrix).invert(),fe.viewport.set(me.x,me.y,me.width,me.height),se===0&&(T.matrix.copy(fe.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),te===!0&&T.cameras.push(fe)}}for(let ee=0;ee<b.length;ee++){const te=x[ee],se=b[ee];te!==null&&se!==void 0&&se.update(te,X,c||a)}U&&U(O,X),X.detectedPlanes&&s.dispatchEvent({type:"planesdetected",data:X}),m=null}const j=new mE;j.setAnimationLoop(H),this.setAnimationLoop=function(O){U=O},this.dispose=function(){}}}function aW(n,e){function t(f,y){f.matrixAutoUpdate===!0&&f.updateMatrix(),y.value.copy(f.matrix)}function s(f,y){y.color.getRGB(f.fogColor.value,hE(n)),y.isFog?(f.fogNear.value=y.near,f.fogFar.value=y.far):y.isFogExp2&&(f.fogDensity.value=y.density)}function i(f,y,b,x,v){y.isMeshBasicMaterial||y.isMeshLambertMaterial?r(f,y):y.isMeshToonMaterial?(r(f,y),h(f,y)):y.isMeshPhongMaterial?(r(f,y),u(f,y)):y.isMeshStandardMaterial?(r(f,y),d(f,y),y.isMeshPhysicalMaterial&&p(f,y,v)):y.isMeshMatcapMaterial?(r(f,y),m(f,y)):y.isMeshDepthMaterial?r(f,y):y.isMeshDistanceMaterial?(r(f,y),g(f,y)):y.isMeshNormalMaterial?r(f,y):y.isLineBasicMaterial?(a(f,y),y.isLineDashedMaterial&&o(f,y)):y.isPointsMaterial?l(f,y,b,x):y.isSpriteMaterial?c(f,y):y.isShadowMaterial?(f.color.value.copy(y.color),f.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function r(f,y){f.opacity.value=y.opacity,y.color&&f.diffuse.value.copy(y.color),y.emissive&&f.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(f.map.value=y.map,t(y.map,f.mapTransform)),y.alphaMap&&(f.alphaMap.value=y.alphaMap,t(y.alphaMap,f.alphaMapTransform)),y.bumpMap&&(f.bumpMap.value=y.bumpMap,t(y.bumpMap,f.bumpMapTransform),f.bumpScale.value=y.bumpScale,y.side===Zs&&(f.bumpScale.value*=-1)),y.normalMap&&(f.normalMap.value=y.normalMap,t(y.normalMap,f.normalMapTransform),f.normalScale.value.copy(y.normalScale),y.side===Zs&&f.normalScale.value.negate()),y.displacementMap&&(f.displacementMap.value=y.displacementMap,t(y.displacementMap,f.displacementMapTransform),f.displacementScale.value=y.displacementScale,f.displacementBias.value=y.displacementBias),y.emissiveMap&&(f.emissiveMap.value=y.emissiveMap,t(y.emissiveMap,f.emissiveMapTransform)),y.specularMap&&(f.specularMap.value=y.specularMap,t(y.specularMap,f.specularMapTransform)),y.alphaTest>0&&(f.alphaTest.value=y.alphaTest);const b=e.get(y).envMap;if(b&&(f.envMap.value=b,f.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=y.reflectivity,f.ior.value=y.ior,f.refractionRatio.value=y.refractionRatio),y.lightMap){f.lightMap.value=y.lightMap;const x=n._useLegacyLights===!0?Math.PI:1;f.lightMapIntensity.value=y.lightMapIntensity*x,t(y.lightMap,f.lightMapTransform)}y.aoMap&&(f.aoMap.value=y.aoMap,f.aoMapIntensity.value=y.aoMapIntensity,t(y.aoMap,f.aoMapTransform))}function a(f,y){f.diffuse.value.copy(y.color),f.opacity.value=y.opacity,y.map&&(f.map.value=y.map,t(y.map,f.mapTransform))}function o(f,y){f.dashSize.value=y.dashSize,f.totalSize.value=y.dashSize+y.gapSize,f.scale.value=y.scale}function l(f,y,b,x){f.diffuse.value.copy(y.color),f.opacity.value=y.opacity,f.size.value=y.size*b,f.scale.value=x*.5,y.map&&(f.map.value=y.map,t(y.map,f.uvTransform)),y.alphaMap&&(f.alphaMap.value=y.alphaMap,t(y.alphaMap,f.alphaMapTransform)),y.alphaTest>0&&(f.alphaTest.value=y.alphaTest)}function c(f,y){f.diffuse.value.copy(y.color),f.opacity.value=y.opacity,f.rotation.value=y.rotation,y.map&&(f.map.value=y.map,t(y.map,f.mapTransform)),y.alphaMap&&(f.alphaMap.value=y.alphaMap,t(y.alphaMap,f.alphaMapTransform)),y.alphaTest>0&&(f.alphaTest.value=y.alphaTest)}function u(f,y){f.specular.value.copy(y.specular),f.shininess.value=Math.max(y.shininess,1e-4)}function h(f,y){y.gradientMap&&(f.gradientMap.value=y.gradientMap)}function d(f,y){f.metalness.value=y.metalness,y.metalnessMap&&(f.metalnessMap.value=y.metalnessMap,t(y.metalnessMap,f.metalnessMapTransform)),f.roughness.value=y.roughness,y.roughnessMap&&(f.roughnessMap.value=y.roughnessMap,t(y.roughnessMap,f.roughnessMapTransform)),e.get(y).envMap&&(f.envMapIntensity.value=y.envMapIntensity)}function p(f,y,b){f.ior.value=y.ior,y.sheen>0&&(f.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),f.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(f.sheenColorMap.value=y.sheenColorMap,t(y.sheenColorMap,f.sheenColorMapTransform)),y.sheenRoughnessMap&&(f.sheenRoughnessMap.value=y.sheenRoughnessMap,t(y.sheenRoughnessMap,f.sheenRoughnessMapTransform))),y.clearcoat>0&&(f.clearcoat.value=y.clearcoat,f.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(f.clearcoatMap.value=y.clearcoatMap,t(y.clearcoatMap,f.clearcoatMapTransform)),y.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap,t(y.clearcoatRoughnessMap,f.clearcoatRoughnessMapTransform)),y.clearcoatNormalMap&&(f.clearcoatNormalMap.value=y.clearcoatNormalMap,t(y.clearcoatNormalMap,f.clearcoatNormalMapTransform),f.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),y.side===Zs&&f.clearcoatNormalScale.value.negate())),y.iridescence>0&&(f.iridescence.value=y.iridescence,f.iridescenceIOR.value=y.iridescenceIOR,f.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],f.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(f.iridescenceMap.value=y.iridescenceMap,t(y.iridescenceMap,f.iridescenceMapTransform)),y.iridescenceThicknessMap&&(f.iridescenceThicknessMap.value=y.iridescenceThicknessMap,t(y.iridescenceThicknessMap,f.iridescenceThicknessMapTransform))),y.transmission>0&&(f.transmission.value=y.transmission,f.transmissionSamplerMap.value=b.texture,f.transmissionSamplerSize.value.set(b.width,b.height),y.transmissionMap&&(f.transmissionMap.value=y.transmissionMap,t(y.transmissionMap,f.transmissionMapTransform)),f.thickness.value=y.thickness,y.thicknessMap&&(f.thicknessMap.value=y.thicknessMap,t(y.thicknessMap,f.thicknessMapTransform)),f.attenuationDistance.value=y.attenuationDistance,f.attenuationColor.value.copy(y.attenuationColor)),y.anisotropy>0&&(f.anisotropyVector.value.set(y.anisotropy*Math.cos(y.anisotropyRotation),y.anisotropy*Math.sin(y.anisotropyRotation)),y.anisotropyMap&&(f.anisotropyMap.value=y.anisotropyMap,t(y.anisotropyMap,f.anisotropyMapTransform))),f.specularIntensity.value=y.specularIntensity,f.specularColor.value.copy(y.specularColor),y.specularColorMap&&(f.specularColorMap.value=y.specularColorMap,t(y.specularColorMap,f.specularColorMapTransform)),y.specularIntensityMap&&(f.specularIntensityMap.value=y.specularIntensityMap,t(y.specularIntensityMap,f.specularIntensityMapTransform))}function m(f,y){y.matcap&&(f.matcap.value=y.matcap)}function g(f,y){const b=e.get(y).light;f.referencePosition.value.setFromMatrixPosition(b.matrixWorld),f.nearDistance.value=b.shadow.camera.near,f.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:s,refreshMaterialUniforms:i}}function oW(n,e,t,s){let i={},r={},a=[];const o=t.isWebGL2?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(b,x){const v=x.program;s.uniformBlockBinding(b,v)}function c(b,x){let v=i[b.id];v===void 0&&(m(b),v=u(b),i[b.id]=v,b.addEventListener("dispose",f));const w=x.program;s.updateUBOMapping(b,w);const _=e.render.frame;r[b.id]!==_&&(d(b),r[b.id]=_)}function u(b){const x=h();b.__bindingPointIndex=x;const v=n.createBuffer(),w=b.__size,_=b.usage;return n.bindBuffer(n.UNIFORM_BUFFER,v),n.bufferData(n.UNIFORM_BUFFER,w,_),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,x,v),v}function h(){for(let b=0;b<o;b++)if(a.indexOf(b)===-1)return a.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(b){const x=i[b.id],v=b.uniforms,w=b.__cache;n.bindBuffer(n.UNIFORM_BUFFER,x);for(let _=0,T=v.length;_<T;_++){const C=v[_];if(p(C,_,w)===!0){const S=C.__offset,M=Array.isArray(C.value)?C.value:[C.value];let A=0;for(let P=0;P<M.length;P++){const D=M[P],N=g(D);typeof D=="number"?(C.__data[0]=D,n.bufferSubData(n.UNIFORM_BUFFER,S+A,C.__data)):D.isMatrix3?(C.__data[0]=D.elements[0],C.__data[1]=D.elements[1],C.__data[2]=D.elements[2],C.__data[3]=D.elements[0],C.__data[4]=D.elements[3],C.__data[5]=D.elements[4],C.__data[6]=D.elements[5],C.__data[7]=D.elements[0],C.__data[8]=D.elements[6],C.__data[9]=D.elements[7],C.__data[10]=D.elements[8],C.__data[11]=D.elements[0]):(D.toArray(C.__data,A),A+=N.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,S,C.__data)}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function p(b,x,v){const w=b.value;if(v[x]===void 0){if(typeof w=="number")v[x]=w;else{const _=Array.isArray(w)?w:[w],T=[];for(let C=0;C<_.length;C++)T.push(_[C].clone());v[x]=T}return!0}else if(typeof w=="number"){if(v[x]!==w)return v[x]=w,!0}else{const _=Array.isArray(v[x])?v[x]:[v[x]],T=Array.isArray(w)?w:[w];for(let C=0;C<_.length;C++){const S=_[C];if(S.equals(T[C])===!1)return S.copy(T[C]),!0}}return!1}function m(b){const x=b.uniforms;let v=0;const w=16;let _=0;for(let T=0,C=x.length;T<C;T++){const S=x[T],M={boundary:0,storage:0},A=Array.isArray(S.value)?S.value:[S.value];for(let P=0,D=A.length;P<D;P++){const N=A[P],L=g(N);M.boundary+=L.boundary,M.storage+=L.storage}if(S.__data=new Float32Array(M.storage/Float32Array.BYTES_PER_ELEMENT),S.__offset=v,T>0){_=v%w;const P=w-_;_!==0&&P-M.boundary<0&&(v+=w-_,S.__offset=v)}v+=M.storage}return _=v%w,_>0&&(v+=w-_),b.__size=v,b.__cache={},this}function g(b){const x={boundary:0,storage:0};return typeof b=="number"?(x.boundary=4,x.storage=4):b.isVector2?(x.boundary=8,x.storage=8):b.isVector3||b.isColor?(x.boundary=16,x.storage=12):b.isVector4?(x.boundary=16,x.storage=16):b.isMatrix3?(x.boundary=48,x.storage=48):b.isMatrix4?(x.boundary=64,x.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),x}function f(b){const x=b.target;x.removeEventListener("dispose",f);const v=a.indexOf(x.__bindingPointIndex);a.splice(v,1),n.deleteBuffer(i[x.id]),delete i[x.id],delete r[x.id]}function y(){for(const b in i)n.deleteBuffer(i[b]);a=[],i={},r={}}return{bind:l,update:c,dispose:y}}class vE{constructor(e={}){const{canvas:t=rF(),context:s=null,depth:i=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let d;s!==null?d=s.getContextAttributes().alpha:d=a;const p=new Uint32Array(4),m=new Int32Array(4);let g=null,f=null;const y=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Dn,this._useLegacyLights=!1,this.toneMapping=Ya,this.toneMappingExposure=1;const x=this;let v=!1,w=0,_=0,T=null,C=-1,S=null;const M=new rs,A=new rs;let P=null;const D=new Qt(0);let N=0,L=t.width,G=t.height,V=1,U=null,H=null;const j=new rs(0,0,L,G),O=new rs(0,0,L,G);let X=!1;const ee=new fE;let te=!1,se=!1,pe=null;const me=new un,fe=new zt,Ce=new ae,Ue={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Me(){return T===null?V:1}let J=s;function ht(F,ne){for(let ce=0;ce<F.length;ce++){const re=F[ce],ue=t.getContext(re,ne);if(ue!==null)return ue}return null}try{const F={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Sv}`),t.addEventListener("webglcontextlost",Te,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",Ge,!1),J===null){const ne=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&ne.shift(),J=ht(ne,F),J===null)throw ht(ne)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&J instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),J.getShaderPrecisionFormat===void 0&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(F){throw console.error("THREE.WebGLRenderer: "+F.message),F}let Ne,Fe,Ae,Ye,He,qe,ot,Gt,Nt,z,R,ie,ye,ge,xe,Be,_e,Pe,et,Tt,ve,Rt,ut,it;function Qe(){Ne=new bG(J),Fe=new hG(J,Ne,e),Ne.init(Fe),Rt=new tW(J,Ne,Fe),Ae=new qV(J,Ne,Fe),Ye=new wG(J),He=new GV,qe=new eW(J,Ne,Ae,He,Fe,Rt,Ye),ot=new pG(x),Gt=new yG(x),Nt=new NF(J,Fe),ut=new cG(J,Ne,Nt,Fe),z=new xG(J,Nt,Ye,ut),R=new IG(J,z,Nt,Ye),et=new TG(J,Fe,qe),Be=new dG(He),ie=new zV(x,ot,Gt,Ne,Fe,ut,Be),ye=new aW(x,He),ge=new WV,xe=new ZV(Ne,Fe),Pe=new lG(x,ot,Gt,Ae,R,d,l),_e=new JV(x,R,Fe),it=new oW(J,Ye,Fe,Ae),Tt=new uG(J,Ne,Ye,Fe),ve=new vG(J,Ne,Ye,Fe),Ye.programs=ie.programs,x.capabilities=Fe,x.extensions=Ne,x.properties=He,x.renderLists=ge,x.shadowMap=_e,x.state=Ae,x.info=Ye}Qe();const B=new rW(x,J);this.xr=B,this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){const F=Ne.get("WEBGL_lose_context");F&&F.loseContext()},this.forceContextRestore=function(){const F=Ne.get("WEBGL_lose_context");F&&F.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(F){F!==void 0&&(V=F,this.setSize(L,G,!1))},this.getSize=function(F){return F.set(L,G)},this.setSize=function(F,ne,ce=!0){if(B.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}L=F,G=ne,t.width=Math.floor(F*V),t.height=Math.floor(ne*V),ce===!0&&(t.style.width=F+"px",t.style.height=ne+"px"),this.setViewport(0,0,F,ne)},this.getDrawingBufferSize=function(F){return F.set(L*V,G*V).floor()},this.setDrawingBufferSize=function(F,ne,ce){L=F,G=ne,V=ce,t.width=Math.floor(F*ce),t.height=Math.floor(ne*ce),this.setViewport(0,0,F,ne)},this.getCurrentViewport=function(F){return F.copy(M)},this.getViewport=function(F){return F.copy(j)},this.setViewport=function(F,ne,ce,re){F.isVector4?j.set(F.x,F.y,F.z,F.w):j.set(F,ne,ce,re),Ae.viewport(M.copy(j).multiplyScalar(V).floor())},this.getScissor=function(F){return F.copy(O)},this.setScissor=function(F,ne,ce,re){F.isVector4?O.set(F.x,F.y,F.z,F.w):O.set(F,ne,ce,re),Ae.scissor(A.copy(O).multiplyScalar(V).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(F){Ae.setScissorTest(X=F)},this.setOpaqueSort=function(F){U=F},this.setTransparentSort=function(F){H=F},this.getClearColor=function(F){return F.copy(Pe.getClearColor())},this.setClearColor=function(){Pe.setClearColor.apply(Pe,arguments)},this.getClearAlpha=function(){return Pe.getClearAlpha()},this.setClearAlpha=function(){Pe.setClearAlpha.apply(Pe,arguments)},this.clear=function(F=!0,ne=!0,ce=!0){let re=0;if(F){let ue=!1;if(T!==null){const Ve=T.texture.format;ue=Ve===tE||Ve===eE||Ve===qM}if(ue){const Ve=T.texture.type,je=Ve===ja||Ve===Ga||Ve===_v||Ve===Jo||Ve===QM||Ve===JM,rt=Pe.getClearColor(),at=Pe.getClearAlpha(),wt=rt.r,tt=rt.g,mt=rt.b;je?(p[0]=wt,p[1]=tt,p[2]=mt,p[3]=at,J.clearBufferuiv(J.COLOR,0,p)):(m[0]=wt,m[1]=tt,m[2]=mt,m[3]=at,J.clearBufferiv(J.COLOR,0,m))}else re|=J.COLOR_BUFFER_BIT}ne&&(re|=J.DEPTH_BUFFER_BIT),ce&&(re|=J.STENCIL_BUFFER_BIT),J.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Te,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",Ge,!1),ge.dispose(),xe.dispose(),He.dispose(),ot.dispose(),Gt.dispose(),R.dispose(),ut.dispose(),it.dispose(),ie.dispose(),B.dispose(),B.removeEventListener("sessionstart",Yt),B.removeEventListener("sessionend",fr),pe&&(pe.dispose(),pe=null),Is.stop()};function Te(F){F.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const F=Ye.autoReset,ne=_e.enabled,ce=_e.autoUpdate,re=_e.needsUpdate,ue=_e.type;Qe(),Ye.autoReset=F,_e.enabled=ne,_e.autoUpdate=ce,_e.needsUpdate=re,_e.type=ue}function Ge(F){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",F.statusMessage)}function Le(F){const ne=F.target;ne.removeEventListener("dispose",Le),be(ne)}function be(F){Ke(F),He.remove(F)}function Ke(F){const ne=He.get(F).programs;ne!==void 0&&(ne.forEach(function(ce){ie.releaseProgram(ce)}),F.isShaderMaterial&&ie.releaseShaderCache(F))}this.renderBufferDirect=function(F,ne,ce,re,ue,Ve){ne===null&&(ne=Ue);const je=ue.isMesh&&ue.matrixWorld.determinant()<0,rt=nD(F,ne,ce,re,ue);Ae.setMaterial(re,je);let at=ce.index,wt=1;if(re.wireframe===!0){if(at=z.getWireframeAttribute(ce),at===void 0)return;wt=2}const tt=ce.drawRange,mt=ce.attributes.position;let hn=tt.start*wt,xn=(tt.start+tt.count)*wt;Ve!==null&&(hn=Math.max(hn,Ve.start*wt),xn=Math.min(xn,(Ve.start+Ve.count)*wt)),at!==null?(hn=Math.max(hn,0),xn=Math.min(xn,at.count)):mt!=null&&(hn=Math.max(hn,0),xn=Math.min(xn,mt.count));const Si=xn-hn;if(Si<0||Si===1/0)return;ut.setup(ue,re,rt,ce,at);let Ur,Cn=Tt;if(at!==null&&(Ur=Nt.get(at),Cn=ve,Cn.setIndex(Ur)),ue.isMesh)re.wireframe===!0?(Ae.setLineWidth(re.wireframeLinewidth*Me()),Cn.setMode(J.LINES)):Cn.setMode(J.TRIANGLES);else if(ue.isLine){let It=re.linewidth;It===void 0&&(It=1),Ae.setLineWidth(It*Me()),ue.isLineSegments?Cn.setMode(J.LINES):ue.isLineLoop?Cn.setMode(J.LINE_LOOP):Cn.setMode(J.LINE_STRIP)}else ue.isPoints?Cn.setMode(J.POINTS):ue.isSprite&&Cn.setMode(J.TRIANGLES);if(ue.isInstancedMesh)Cn.renderInstances(hn,Si,ue.count);else if(ce.isInstancedBufferGeometry){const It=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,Ib=Math.min(ce.instanceCount,It);Cn.renderInstances(hn,Si,Ib)}else Cn.render(hn,Si)},this.compile=function(F,ne){function ce(re,ue,Ve){re.transparent===!0&&re.side===ia&&re.forceSinglePass===!1?(re.side=Zs,re.needsUpdate=!0,Ff(re,ue,Ve),re.side=io,re.needsUpdate=!0,Ff(re,ue,Ve),re.side=ia):Ff(re,ue,Ve)}f=xe.get(F),f.init(),b.push(f),F.traverseVisible(function(re){re.isLight&&re.layers.test(ne.layers)&&(f.pushLight(re),re.castShadow&&f.pushShadow(re))}),f.setupLights(x._useLegacyLights),F.traverse(function(re){const ue=re.material;if(ue)if(Array.isArray(ue))for(let Ve=0;Ve<ue.length;Ve++){const je=ue[Ve];ce(je,F,re)}else ce(ue,F,re)}),b.pop(),f=null};let dt=null;function Ts(F){dt&&dt(F)}function Yt(){Is.stop()}function fr(){Is.start()}const Is=new mE;Is.setAnimationLoop(Ts),typeof self<"u"&&Is.setContext(self),this.setAnimationLoop=function(F){dt=F,B.setAnimationLoop(F),F===null?Is.stop():Is.start()},B.addEventListener("sessionstart",Yt),B.addEventListener("sessionend",fr),this.render=function(F,ne){if(ne!==void 0&&ne.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;F.matrixWorldAutoUpdate===!0&&F.updateMatrixWorld(),ne.parent===null&&ne.matrixWorldAutoUpdate===!0&&ne.updateMatrixWorld(),B.enabled===!0&&B.isPresenting===!0&&(B.cameraAutoUpdate===!0&&B.updateCamera(ne),ne=B.getCamera()),F.isScene===!0&&F.onBeforeRender(x,F,ne,T),f=xe.get(F,b.length),f.init(),b.push(f),me.multiplyMatrices(ne.projectionMatrix,ne.matrixWorldInverse),ee.setFromProjectionMatrix(me),se=this.localClippingEnabled,te=Be.init(this.clippingPlanes,se),g=ge.get(F,y.length),g.init(),y.push(g),n2(F,ne,0,x.sortObjects),g.finish(),x.sortObjects===!0&&g.sort(U,H),this.info.render.frame++,te===!0&&Be.beginShadows();const ce=f.state.shadowsArray;if(_e.render(ce,F,ne),te===!0&&Be.endShadows(),this.info.autoReset===!0&&this.info.reset(),Pe.render(g,F),f.setupLights(x._useLegacyLights),ne.isArrayCamera){const re=ne.cameras;for(let ue=0,Ve=re.length;ue<Ve;ue++){const je=re[ue];s2(g,F,je,je.viewport)}}else s2(g,F,ne);T!==null&&(qe.updateMultisampleRenderTarget(T),qe.updateRenderTargetMipmap(T)),F.isScene===!0&&F.onAfterRender(x,F,ne),ut.resetDefaultState(),C=-1,S=null,b.pop(),b.length>0?f=b[b.length-1]:f=null,y.pop(),y.length>0?g=y[y.length-1]:g=null};function n2(F,ne,ce,re){if(F.visible===!1)return;if(F.layers.test(ne.layers)){if(F.isGroup)ce=F.renderOrder;else if(F.isLOD)F.autoUpdate===!0&&F.update(ne);else if(F.isLight)f.pushLight(F),F.castShadow&&f.pushShadow(F);else if(F.isSprite){if(!F.frustumCulled||ee.intersectsSprite(F)){re&&Ce.setFromMatrixPosition(F.matrixWorld).applyMatrix4(me);const je=R.update(F),rt=F.material;rt.visible&&g.push(F,je,rt,ce,Ce.z,null)}}else if((F.isMesh||F.isLine||F.isPoints)&&(!F.frustumCulled||ee.intersectsObject(F))){const je=R.update(F),rt=F.material;if(re&&(F.boundingSphere!==void 0?(F.boundingSphere===null&&F.computeBoundingSphere(),Ce.copy(F.boundingSphere.center)):(je.boundingSphere===null&&je.computeBoundingSphere(),Ce.copy(je.boundingSphere.center)),Ce.applyMatrix4(F.matrixWorld).applyMatrix4(me)),Array.isArray(rt)){const at=je.groups;for(let wt=0,tt=at.length;wt<tt;wt++){const mt=at[wt],hn=rt[mt.materialIndex];hn&&hn.visible&&g.push(F,je,hn,ce,Ce.z,mt)}}else rt.visible&&g.push(F,je,rt,ce,Ce.z,null)}}const Ve=F.children;for(let je=0,rt=Ve.length;je<rt;je++)n2(Ve[je],ne,ce,re)}function s2(F,ne,ce,re){const ue=F.opaque,Ve=F.transmissive,je=F.transparent;f.setupLightsView(ce),te===!0&&Be.setGlobalState(x.clippingPlanes,ce),Ve.length>0&&tD(ue,Ve,ne,ce),re&&Ae.viewport(M.copy(re)),ue.length>0&&Df(ue,ne,ce),Ve.length>0&&Df(Ve,ne,ce),je.length>0&&Df(je,ne,ce),Ae.buffers.depth.setTest(!0),Ae.buffers.depth.setMask(!0),Ae.buffers.color.setMask(!0),Ae.setPolygonOffset(!1)}function tD(F,ne,ce,re){const ue=Fe.isWebGL2;pe===null&&(pe=new ul(1,1,{generateMipmaps:!0,type:Ne.has("EXT_color_buffer_half_float")?hd:ja,minFilter:ud,samples:ue?4:0})),x.getDrawingBufferSize(fe),ue?pe.setSize(fe.x,fe.y):pe.setSize(o1(fe.x),o1(fe.y));const Ve=x.getRenderTarget();x.setRenderTarget(pe),x.getClearColor(D),N=x.getClearAlpha(),N<1&&x.setClearColor(16777215,.5),x.clear();const je=x.toneMapping;x.toneMapping=Ya,Df(F,ce,re),qe.updateMultisampleRenderTarget(pe),qe.updateRenderTargetMipmap(pe);let rt=!1;for(let at=0,wt=ne.length;at<wt;at++){const tt=ne[at],mt=tt.object,hn=tt.geometry,xn=tt.material,Si=tt.group;if(xn.side===ia&&mt.layers.test(re.layers)){const Ur=xn.side;xn.side=Zs,xn.needsUpdate=!0,i2(mt,ce,re,hn,xn,Si),xn.side=Ur,xn.needsUpdate=!0,rt=!0}}rt===!0&&(qe.updateMultisampleRenderTarget(pe),qe.updateRenderTargetMipmap(pe)),x.setRenderTarget(Ve),x.setClearColor(D,N),x.toneMapping=je}function Df(F,ne,ce){const re=ne.isScene===!0?ne.overrideMaterial:null;for(let ue=0,Ve=F.length;ue<Ve;ue++){const je=F[ue],rt=je.object,at=je.geometry,wt=re===null?je.material:re,tt=je.group;rt.layers.test(ce.layers)&&i2(rt,ne,ce,at,wt,tt)}}function i2(F,ne,ce,re,ue,Ve){F.onBeforeRender(x,ne,ce,re,ue,Ve),F.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,F.matrixWorld),F.normalMatrix.getNormalMatrix(F.modelViewMatrix),ue.onBeforeRender(x,ne,ce,re,F,Ve),ue.transparent===!0&&ue.side===ia&&ue.forceSinglePass===!1?(ue.side=Zs,ue.needsUpdate=!0,x.renderBufferDirect(ce,ne,re,ue,F,Ve),ue.side=io,ue.needsUpdate=!0,x.renderBufferDirect(ce,ne,re,ue,F,Ve),ue.side=ia):x.renderBufferDirect(ce,ne,re,ue,F,Ve),F.onAfterRender(x,ne,ce,re,ue,Ve)}function Ff(F,ne,ce){ne.isScene!==!0&&(ne=Ue);const re=He.get(F),ue=f.state.lights,Ve=f.state.shadowsArray,je=ue.state.version,rt=ie.getParameters(F,ue.state,Ve,ne,ce),at=ie.getProgramCacheKey(rt);let wt=re.programs;re.environment=F.isMeshStandardMaterial?ne.environment:null,re.fog=ne.fog,re.envMap=(F.isMeshStandardMaterial?Gt:ot).get(F.envMap||re.environment),wt===void 0&&(F.addEventListener("dispose",Le),wt=new Map,re.programs=wt);let tt=wt.get(at);if(tt!==void 0){if(re.currentProgram===tt&&re.lightsStateVersion===je)return r2(F,rt),tt}else rt.uniforms=ie.getUniforms(F),F.onBuild(ce,rt,x),F.onBeforeCompile(rt,x),tt=ie.acquireProgram(rt,at),wt.set(at,tt),re.uniforms=rt.uniforms;const mt=re.uniforms;(!F.isShaderMaterial&&!F.isRawShaderMaterial||F.clipping===!0)&&(mt.clippingPlanes=Be.uniform),r2(F,rt),re.needsLights=iD(F),re.lightsStateVersion=je,re.needsLights&&(mt.ambientLightColor.value=ue.state.ambient,mt.lightProbe.value=ue.state.probe,mt.directionalLights.value=ue.state.directional,mt.directionalLightShadows.value=ue.state.directionalShadow,mt.spotLights.value=ue.state.spot,mt.spotLightShadows.value=ue.state.spotShadow,mt.rectAreaLights.value=ue.state.rectArea,mt.ltc_1.value=ue.state.rectAreaLTC1,mt.ltc_2.value=ue.state.rectAreaLTC2,mt.pointLights.value=ue.state.point,mt.pointLightShadows.value=ue.state.pointShadow,mt.hemisphereLights.value=ue.state.hemi,mt.directionalShadowMap.value=ue.state.directionalShadowMap,mt.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,mt.spotShadowMap.value=ue.state.spotShadowMap,mt.spotLightMatrix.value=ue.state.spotLightMatrix,mt.spotLightMap.value=ue.state.spotLightMap,mt.pointShadowMap.value=ue.state.pointShadowMap,mt.pointShadowMatrix.value=ue.state.pointShadowMatrix);const hn=tt.getUniforms(),xn=Cm.seqWithValue(hn.seq,mt);return re.currentProgram=tt,re.uniformsList=xn,tt}function r2(F,ne){const ce=He.get(F);ce.outputColorSpace=ne.outputColorSpace,ce.instancing=ne.instancing,ce.instancingColor=ne.instancingColor,ce.skinning=ne.skinning,ce.morphTargets=ne.morphTargets,ce.morphNormals=ne.morphNormals,ce.morphColors=ne.morphColors,ce.morphTargetsCount=ne.morphTargetsCount,ce.numClippingPlanes=ne.numClippingPlanes,ce.numIntersection=ne.numClipIntersection,ce.vertexAlphas=ne.vertexAlphas,ce.vertexTangents=ne.vertexTangents,ce.toneMapping=ne.toneMapping}function nD(F,ne,ce,re,ue){ne.isScene!==!0&&(ne=Ue),qe.resetTextureUnits();const Ve=ne.fog,je=re.isMeshStandardMaterial?ne.environment:null,rt=T===null?x.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:ua,at=(re.isMeshStandardMaterial?Gt:ot).get(re.envMap||je),wt=re.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,tt=!!ce.attributes.tangent&&(!!re.normalMap||re.anisotropy>0),mt=!!ce.morphAttributes.position,hn=!!ce.morphAttributes.normal,xn=!!ce.morphAttributes.color;let Si=Ya;re.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(Si=x.toneMapping);const Ur=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,Cn=Ur!==void 0?Ur.length:0,It=He.get(re),Ib=f.state.lights;if(te===!0&&(se===!0||F!==S)){const ai=F===S&&re.id===C;Be.setState(re,F,ai)}let Mn=!1;re.version===It.__version?(It.needsLights&&It.lightsStateVersion!==Ib.state.version||It.outputColorSpace!==rt||ue.isInstancedMesh&&It.instancing===!1||!ue.isInstancedMesh&&It.instancing===!0||ue.isSkinnedMesh&&It.skinning===!1||!ue.isSkinnedMesh&&It.skinning===!0||ue.isInstancedMesh&&It.instancingColor===!0&&ue.instanceColor===null||ue.isInstancedMesh&&It.instancingColor===!1&&ue.instanceColor!==null||It.envMap!==at||re.fog===!0&&It.fog!==Ve||It.numClippingPlanes!==void 0&&(It.numClippingPlanes!==Be.numPlanes||It.numIntersection!==Be.numIntersection)||It.vertexAlphas!==wt||It.vertexTangents!==tt||It.morphTargets!==mt||It.morphNormals!==hn||It.morphColors!==xn||It.toneMapping!==Si||Fe.isWebGL2===!0&&It.morphTargetsCount!==Cn)&&(Mn=!0):(Mn=!0,It.__version=re.version);let Co=It.currentProgram;Mn===!0&&(Co=Ff(re,ne,ue));let a2=!1,Ph=!1,Cb=!1;const Cs=Co.getUniforms(),Mo=It.uniforms;if(Ae.useProgram(Co.program)&&(a2=!0,Ph=!0,Cb=!0),re.id!==C&&(C=re.id,Ph=!0),a2||S!==F){Cs.setValue(J,"projectionMatrix",F.projectionMatrix),Cs.setValue(J,"viewMatrix",F.matrixWorldInverse);const ai=Cs.map.cameraPosition;ai!==void 0&&ai.setValue(J,Ce.setFromMatrixPosition(F.matrixWorld)),Fe.logarithmicDepthBuffer&&Cs.setValue(J,"logDepthBufFC",2/(Math.log(F.far+1)/Math.LN2)),(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial)&&Cs.setValue(J,"isOrthographic",F.isOrthographicCamera===!0),S!==F&&(S=F,Ph=!0,Cb=!0)}if(ue.isSkinnedMesh){Cs.setOptional(J,ue,"bindMatrix"),Cs.setOptional(J,ue,"bindMatrixInverse");const ai=ue.skeleton;ai&&(Fe.floatVertexTextures?(ai.boneTexture===null&&ai.computeBoneTexture(),Cs.setValue(J,"boneTexture",ai.boneTexture,qe),Cs.setValue(J,"boneTextureSize",ai.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Mb=ce.morphAttributes;if((Mb.position!==void 0||Mb.normal!==void 0||Mb.color!==void 0&&Fe.isWebGL2===!0)&&et.update(ue,ce,Co),(Ph||It.receiveShadow!==ue.receiveShadow)&&(It.receiveShadow=ue.receiveShadow,Cs.setValue(J,"receiveShadow",ue.receiveShadow)),re.isMeshGouraudMaterial&&re.envMap!==null&&(Mo.envMap.value=at,Mo.flipEnvMap.value=at.isCubeTexture&&at.isRenderTargetTexture===!1?-1:1),Ph&&(Cs.setValue(J,"toneMappingExposure",x.toneMappingExposure),It.needsLights&&sD(Mo,Cb),Ve&&re.fog===!0&&ye.refreshFogUniforms(Mo,Ve),ye.refreshMaterialUniforms(Mo,re,V,G,pe),Cm.upload(J,It.uniformsList,Mo,qe)),re.isShaderMaterial&&re.uniformsNeedUpdate===!0&&(Cm.upload(J,It.uniformsList,Mo,qe),re.uniformsNeedUpdate=!1),re.isSpriteMaterial&&Cs.setValue(J,"center",ue.center),Cs.setValue(J,"modelViewMatrix",ue.modelViewMatrix),Cs.setValue(J,"normalMatrix",ue.normalMatrix),Cs.setValue(J,"modelMatrix",ue.matrixWorld),re.isShaderMaterial||re.isRawShaderMaterial){const ai=re.uniformsGroups;for(let Eb=0,rD=ai.length;Eb<rD;Eb++)if(Fe.isWebGL2){const o2=ai[Eb];it.update(o2,Co),it.bind(o2,Co)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Co}function sD(F,ne){F.ambientLightColor.needsUpdate=ne,F.lightProbe.needsUpdate=ne,F.directionalLights.needsUpdate=ne,F.directionalLightShadows.needsUpdate=ne,F.pointLights.needsUpdate=ne,F.pointLightShadows.needsUpdate=ne,F.spotLights.needsUpdate=ne,F.spotLightShadows.needsUpdate=ne,F.rectAreaLights.needsUpdate=ne,F.hemisphereLights.needsUpdate=ne}function iD(F){return F.isMeshLambertMaterial||F.isMeshToonMaterial||F.isMeshPhongMaterial||F.isMeshStandardMaterial||F.isShadowMaterial||F.isShaderMaterial&&F.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(F,ne,ce){He.get(F.texture).__webglTexture=ne,He.get(F.depthTexture).__webglTexture=ce;const re=He.get(F);re.__hasExternalTextures=!0,re.__hasExternalTextures&&(re.__autoAllocateDepthBuffer=ce===void 0,re.__autoAllocateDepthBuffer||Ne.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),re.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(F,ne){const ce=He.get(F);ce.__webglFramebuffer=ne,ce.__useDefaultFramebuffer=ne===void 0},this.setRenderTarget=function(F,ne=0,ce=0){T=F,w=ne,_=ce;let re=!0,ue=null,Ve=!1,je=!1;if(F){const at=He.get(F);at.__useDefaultFramebuffer!==void 0?(Ae.bindFramebuffer(J.FRAMEBUFFER,null),re=!1):at.__webglFramebuffer===void 0?qe.setupRenderTarget(F):at.__hasExternalTextures&&qe.rebindTextures(F,He.get(F.texture).__webglTexture,He.get(F.depthTexture).__webglTexture);const wt=F.texture;(wt.isData3DTexture||wt.isDataArrayTexture||wt.isCompressedArrayTexture)&&(je=!0);const tt=He.get(F).__webglFramebuffer;F.isWebGLCubeRenderTarget?(Array.isArray(tt[ne])?ue=tt[ne][ce]:ue=tt[ne],Ve=!0):Fe.isWebGL2&&F.samples>0&&qe.useMultisampledRTT(F)===!1?ue=He.get(F).__webglMultisampledFramebuffer:Array.isArray(tt)?ue=tt[ce]:ue=tt,M.copy(F.viewport),A.copy(F.scissor),P=F.scissorTest}else M.copy(j).multiplyScalar(V).floor(),A.copy(O).multiplyScalar(V).floor(),P=X;if(Ae.bindFramebuffer(J.FRAMEBUFFER,ue)&&Fe.drawBuffers&&re&&Ae.drawBuffers(F,ue),Ae.viewport(M),Ae.scissor(A),Ae.setScissorTest(P),Ve){const at=He.get(F.texture);J.framebufferTexture2D(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_CUBE_MAP_POSITIVE_X+ne,at.__webglTexture,ce)}else if(je){const at=He.get(F.texture),wt=ne||0;J.framebufferTextureLayer(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,at.__webglTexture,ce||0,wt)}C=-1},this.readRenderTargetPixels=function(F,ne,ce,re,ue,Ve,je){if(!(F&&F.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let rt=He.get(F).__webglFramebuffer;if(F.isWebGLCubeRenderTarget&&je!==void 0&&(rt=rt[je]),rt){Ae.bindFramebuffer(J.FRAMEBUFFER,rt);try{const at=F.texture,wt=at.format,tt=at.type;if(wt!==qi&&Rt.convert(wt)!==J.getParameter(J.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const mt=tt===hd&&(Ne.has("EXT_color_buffer_half_float")||Fe.isWebGL2&&Ne.has("EXT_color_buffer_float"));if(tt!==ja&&Rt.convert(tt)!==J.getParameter(J.IMPLEMENTATION_COLOR_READ_TYPE)&&!(tt===Va&&(Fe.isWebGL2||Ne.has("OES_texture_float")||Ne.has("WEBGL_color_buffer_float")))&&!mt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ne>=0&&ne<=F.width-re&&ce>=0&&ce<=F.height-ue&&J.readPixels(ne,ce,re,ue,Rt.convert(wt),Rt.convert(tt),Ve)}finally{const at=T!==null?He.get(T).__webglFramebuffer:null;Ae.bindFramebuffer(J.FRAMEBUFFER,at)}}},this.copyFramebufferToTexture=function(F,ne,ce=0){const re=Math.pow(2,-ce),ue=Math.floor(ne.image.width*re),Ve=Math.floor(ne.image.height*re);qe.setTexture2D(ne,0),J.copyTexSubImage2D(J.TEXTURE_2D,ce,0,0,F.x,F.y,ue,Ve),Ae.unbindTexture()},this.copyTextureToTexture=function(F,ne,ce,re=0){const ue=ne.image.width,Ve=ne.image.height,je=Rt.convert(ce.format),rt=Rt.convert(ce.type);qe.setTexture2D(ce,0),J.pixelStorei(J.UNPACK_FLIP_Y_WEBGL,ce.flipY),J.pixelStorei(J.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ce.premultiplyAlpha),J.pixelStorei(J.UNPACK_ALIGNMENT,ce.unpackAlignment),ne.isDataTexture?J.texSubImage2D(J.TEXTURE_2D,re,F.x,F.y,ue,Ve,je,rt,ne.image.data):ne.isCompressedTexture?J.compressedTexSubImage2D(J.TEXTURE_2D,re,F.x,F.y,ne.mipmaps[0].width,ne.mipmaps[0].height,je,ne.mipmaps[0].data):J.texSubImage2D(J.TEXTURE_2D,re,F.x,F.y,je,rt,ne.image),re===0&&ce.generateMipmaps&&J.generateMipmap(J.TEXTURE_2D),Ae.unbindTexture()},this.copyTextureToTexture3D=function(F,ne,ce,re,ue=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ve=F.max.x-F.min.x+1,je=F.max.y-F.min.y+1,rt=F.max.z-F.min.z+1,at=Rt.convert(re.format),wt=Rt.convert(re.type);let tt;if(re.isData3DTexture)qe.setTexture3D(re,0),tt=J.TEXTURE_3D;else if(re.isDataArrayTexture)qe.setTexture2DArray(re,0),tt=J.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}J.pixelStorei(J.UNPACK_FLIP_Y_WEBGL,re.flipY),J.pixelStorei(J.UNPACK_PREMULTIPLY_ALPHA_WEBGL,re.premultiplyAlpha),J.pixelStorei(J.UNPACK_ALIGNMENT,re.unpackAlignment);const mt=J.getParameter(J.UNPACK_ROW_LENGTH),hn=J.getParameter(J.UNPACK_IMAGE_HEIGHT),xn=J.getParameter(J.UNPACK_SKIP_PIXELS),Si=J.getParameter(J.UNPACK_SKIP_ROWS),Ur=J.getParameter(J.UNPACK_SKIP_IMAGES),Cn=ce.isCompressedTexture?ce.mipmaps[0]:ce.image;J.pixelStorei(J.UNPACK_ROW_LENGTH,Cn.width),J.pixelStorei(J.UNPACK_IMAGE_HEIGHT,Cn.height),J.pixelStorei(J.UNPACK_SKIP_PIXELS,F.min.x),J.pixelStorei(J.UNPACK_SKIP_ROWS,F.min.y),J.pixelStorei(J.UNPACK_SKIP_IMAGES,F.min.z),ce.isDataTexture||ce.isData3DTexture?J.texSubImage3D(tt,ue,ne.x,ne.y,ne.z,Ve,je,rt,at,wt,Cn.data):ce.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),J.compressedTexSubImage3D(tt,ue,ne.x,ne.y,ne.z,Ve,je,rt,at,Cn.data)):J.texSubImage3D(tt,ue,ne.x,ne.y,ne.z,Ve,je,rt,at,wt,Cn),J.pixelStorei(J.UNPACK_ROW_LENGTH,mt),J.pixelStorei(J.UNPACK_IMAGE_HEIGHT,hn),J.pixelStorei(J.UNPACK_SKIP_PIXELS,xn),J.pixelStorei(J.UNPACK_SKIP_ROWS,Si),J.pixelStorei(J.UNPACK_SKIP_IMAGES,Ur),ue===0&&re.generateMipmaps&&J.generateMipmap(tt),Ae.unbindTexture()},this.initTexture=function(F){F.isCubeTexture?qe.setTextureCube(F,0):F.isData3DTexture?qe.setTexture3D(F,0):F.isDataArrayTexture||F.isCompressedArrayTexture?qe.setTexture2DArray(F,0):qe.setTexture2D(F,0),Ae.unbindTexture()},this.resetState=function(){w=0,_=0,T=null,Ae.reset(),ut.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return oa}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Tv?"display-p3":"srgb",t.unpackColorSpace=Lt.workingColorSpace===Ng?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Dn?Qa:nE}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Qa?Dn:ua}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class lW extends vE{}lW.prototype.isWebGL1Renderer=!0;class CI extends Ns{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}const Gm={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class cW{constructor(e,t,s){const i=this;let r=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=s,this.itemStart=function(u){o++,r===!1&&i.onStart!==void 0&&i.onStart(u,a,o),r=!0},this.itemEnd=function(u){a++,i.onProgress!==void 0&&i.onProgress(u,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const p=c[h],m=c[h+1];if(p.global&&(p.lastIndex=0),p.test(u))return m}return null}}}const uW=new cW;class Xd{constructor(e){this.manager=e!==void 0?e:uW,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const s=this;return new Promise(function(i,r){s.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Xd.DEFAULT_MATERIAL_NAME="__DEFAULT";const jr={};class hW extends Error{constructor(e,t){super(e),this.response=t}}class dW extends Xd{constructor(e){super(e)}load(e,t,s,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Gm.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(jr[e]!==void 0){jr[e].push({onLoad:t,onProgress:s,onError:i});return}jr[e]=[],jr[e].push({onLoad:t,onProgress:s,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=jr[e],h=c.body.getReader(),d=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),p=d?parseInt(d):0,m=p!==0;let g=0;const f=new ReadableStream({start(y){b();function b(){h.read().then(({done:x,value:v})=>{if(x)y.close();else{g+=v.byteLength;const w=new ProgressEvent("progress",{lengthComputable:m,loaded:g,total:p});for(let _=0,T=u.length;_<T;_++){const C=u[_];C.onProgress&&C.onProgress(w)}y.enqueue(v),b()}})}}});return new Response(f)}else throw new hW(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,o));case"json":return c.json();default:if(o===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),d=h&&h[1]?h[1].toLowerCase():void 0,p=new TextDecoder(d);return c.arrayBuffer().then(m=>p.decode(m))}}}).then(c=>{Gm.add(e,c);const u=jr[e];delete jr[e];for(let h=0,d=u.length;h<d;h++){const p=u[h];p.onLoad&&p.onLoad(c)}}).catch(c=>{const u=jr[e];if(u===void 0)throw this.manager.itemError(e),c;delete jr[e];for(let h=0,d=u.length;h<d;h++){const p=u[h];p.onError&&p.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class pW extends Xd{constructor(e){super(e)}load(e,t,s,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Gm.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o=dd("img");function l(){u(),Gm.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(h){u(),i&&i(h),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class fW extends Xd{constructor(e){super(e)}load(e,t,s,i){const r=new Ks,a=new pW(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},s,i),r}}let im;class wE{static getContext(){return im===void 0&&(im=new(window.AudioContext||window.webkitAudioContext)),im}static setContext(e){im=e}}class mW extends Xd{constructor(e){super(e)}load(e,t,s,i){const r=this,a=new dW(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const c=l.slice(0);wE.getContext().decodeAudioData(c,function(h){t(h)},o)}catch(c){o(c)}},s,i);function o(l){i?i(l):console.error(l),r.manager.itemError(e)}}}class gW{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=MI(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=MI();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function MI(){return(typeof performance>"u"?Date:performance).now()}const Ao=new ae,EI=new wa,yW=new ae,Lo=new ae;class bW extends Ns{constructor(){super(),this.type="AudioListener",this.context=wE.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new gW}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,s=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ao,EI,yW),Lo.set(0,0,-1).applyQuaternion(EI),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ao.x,i),t.positionY.linearRampToValueAtTime(Ao.y,i),t.positionZ.linearRampToValueAtTime(Ao.z,i),t.forwardX.linearRampToValueAtTime(Lo.x,i),t.forwardY.linearRampToValueAtTime(Lo.y,i),t.forwardZ.linearRampToValueAtTime(Lo.z,i),t.upX.linearRampToValueAtTime(s.x,i),t.upY.linearRampToValueAtTime(s.y,i),t.upZ.linearRampToValueAtTime(s.z,i)}else t.setPosition(Ao.x,Ao.y,Ao.z),t.setOrientation(Lo.x,Lo.y,Lo.z,s.x,s.y,s.z)}}class xW extends Ns{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class vW{constructor(e,t,s=0,i=1/0){this.ray=new oE(e,t),this.near=s,this.far=i,this.camera=null,this.layers=new Cv,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,s=[]){return c1(e,this,s,t),s.sort(kI),s}intersectObjects(e,t=!0,s=[]){for(let i=0,r=e.length;i<r;i++)c1(e[i],this,s,t);return s.sort(kI),s}}function kI(n,e){return n.distance-e.distance}function c1(n,e,t,s){if(n.layers.test(e.layers)&&n.raycast(e,t),s===!0){const i=n.children;for(let r=0,a=i.length;r<a;r++)c1(i[r],e,t,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Sv}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Sv);var Nl=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function wW(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function SW(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){if(this instanceof s){var i=[null];i.push.apply(i,arguments);var r=Function.bind.apply(e,i);return new r}return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var i=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,i.get?i:{enumerable:!0,get:function(){return n[s]}})}),t}const NI=(n,e)=>{const t=2*Math.PI*e*n;return t/(t+1)},RI=(n,e,t)=>n*e+(1-n)*t;class _W{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map(()=>0),this.tPrev=e,t;const{xPrev:s,tPrev:i,dxPrev:r}=this,a=e-i,o=NI(a,this.dCutOff),l=[],c=[],u=[];for(let h=0;h<t.length;h++){l[h]=(t[h]-s[h])/a,c[h]=RI(o,l[h],r[h]);const d=this.minCutOff+this.beta*Math.abs(c[h]),p=NI(a,d);u[h]=RI(p,t[h],s[h])}return this.xPrev=u,this.dxPrev=c,this.tPrev=e,u}}const TW=`<div class="mindar-ui-overlay mindar-ui-loading">
  <div class="loader"/>
</div>
`,IW=`<div class="mindar-ui-overlay mindar-ui-compatibility">
  <div class="content">
    <h1>Failed to launch :(</h1>
    <p>
      Looks like your device/browser is not compatible.
    </p>

    <br/>
    <br/>
    <p>
      Please try the following recommended browsers:
    </p>
    <p>
      For Android device - Chrome
    </p>
    <p>
      For iOS device - Safari
    </p>
  </div>
</div>
`,CW=`<div class="mindar-ui-overlay mindar-ui-scanning">
  <div class="scanning">
    <div class="inner">
      <div class="scanline"/>
    </div>
  </div>
</div>
`,MW=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}";let EW=class{constructor({uiLoading:e,uiScanning:t,uiError:s}){const i=document.createElement("style");i.innerText=MW,document.head.appendChild(i),e==="yes"?this.loadingModal=this._loadHTML(TW):e!=="no"&&(this.loadingModal=document.querySelector(e)),s==="yes"?this.compatibilityModal=this._loadHTML(IW):s!=="no"&&(this.compatibilityModal=document.querySelector(s)),t==="yes"?this.scanningMask=this._loadHTML(CW):t!=="no"&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const s=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(s),s}};function kW(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const i in s)if(i!=="default"&&!(i in n)){const r=Object.getOwnPropertyDescriptor(s,i);r&&Object.defineProperty(n,i,r.get?r:{enumerable:!0,get:()=>s[i]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW=1e-7,RW=1e-4;let Ev=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Pg=class{refCount(e){return Gs("refCount")}incRef(e){return Gs("incRef")}timerAvailable(){return!0}time(e){return Gs("time")}read(e){return Gs("read")}readSync(e){return Gs("readSync")}readToGPU(e,t){return Gs("readToGPU")}numDataIds(){return Gs("numDataIds")}disposeData(e,t){return Gs("disposeData")}write(e,t,s){return Gs("write")}move(e,t,s,i,r){return Gs("move")}createTensorFromGPUData(e,t,s){return Gs("createTensorFromGPUData")}memory(){return Gs("memory")}floatPrecision(){return Gs("floatPrecision")}epsilon(){return this.floatPrecision()===32?NW:RW}dispose(){return Gs("dispose")}};function Gs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kv(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ra(n,e,t)}function AW(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,s=0;for(;t>0;)s=Math.random()*t|0,t--,ra(n,t,s),ra(e,t,s)}function ro(n,e,t){return Math.max(n,Math.min(e,t))}function Dg(n){return n%2===0?n:n+1}function ra(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function SE(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function LW(n,e){const t=Math.random();return e*t+(1-t)*n}function PW(n,e){let t=0;for(let s=0;s<n.length;s++){const i=Number(n[s])-Number(e[s]);t+=i*i}return t}function E(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Jn(n,e,t=""){E(vt(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Rl(n){E(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function oe(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function DW(n){return n.length===0}function vt(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function dl(n){return n%1===0}function FW(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function Vm(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function OW(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return kv(e),e}function tl(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function u1(n,e=i=>0,t,s){return new Promise((i,r)=>{let a=0;const o=()=>{if(n()){i();return}a++;const l=e(a);if(t!=null&&a>=t){r();return}s!=null?s(o,l):setTimeout(o,l)};o()})}function Nv(n,e){let t=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)t*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const i=n.slice();return i[s]=e/t,i}function ft(n,e){const t=e.length;return n=n==null?e.map((s,i)=>i):[].concat(n),E(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),E(n.every(s=>dl(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function Sa(n,e){const t=[],s=[],i=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||i?null:ft(e,n).sort();let a=0;for(let o=0;o<n.length;++o){if(r!=null){if(r[a]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(r[a]==null||r[a]>o)&&n[o]===1&&(t.push(n[o]),s.push(o)),r[a]<=o&&a++}n[o]!==1&&(t.push(n[o]),s.push(o))}return{newShape:t,keptDims:s}}function Pn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function pn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function _E(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function TE(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Rv(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function pd(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function IE(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Tr(n){return typeof n=="string"||n instanceof String}function CE(n){return typeof n=="boolean"}function Wm(n){return typeof n=="number"}function du(n){return Array.isArray(n)?du(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Wm(n)?"float32":Tr(n)?"string":CE(n)?"bool":"float32"}function ao(n){return!!(n&&n.constructor&&n.call&&n.apply)}function $m(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Xe(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function ME(n,e,t,s=!1){const i=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let a=0;a<r;a++)i[a]=t[n+a]}else{const r=e[0],a=e.slice(1),o=a.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<r;l++)i[l]=ME(n+l*o,a,t,s)}return i}function fi(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((i,r)=>i*r)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return ME(0,n,e,t)}function EE(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Fg(n,e){const t=Yn(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Yn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Av(n,e){const t=n.reduce((s,i)=>s*i,1);if(e==null||e==="float32")return fi(n,new Float32Array(t));if(e==="int32")return fi(n,new Int32Array(t));if(e==="bool")return fi(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function ii(n){n.forEach(e=>{E(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function tr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let i=0;i<n.length-1;++i)s+=t[i]*n[i];return s}function Al(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let i=0;i<s.length-1;++i)s[i]=Math.floor(n/t[i]),n-=s[i]*t[i];return s[s.length-1]=n,s}function ha(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI="tfjsflags";class kE{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=zW,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const i=this.urlFlags[e];q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${i}.`),this.set(e,i)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ha(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);AI in e&&e[AI].split(",").forEach(t=>{const[s,i]=t.split(":");this.urlFlags[s]=VW(s,i)})}}function zW(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(GW(e,s[0],s[1]),s.join("="))),e}function GW(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function VW(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function q(){return Lv}let Lv=null;function WW(n){Lv=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rx;function NE(){if(rx==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");rx=n}return rx}function $W(){const n=NE();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Pv(n,e){const t=$W();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Hd="Abs",pu="Acos",fu="Acosh",Ll="Add",Zd="AddN",Og="All",zg="Any",Kd="ArgMax",Yd="ArgMin",mu="Asin",gu="Asinh",yu="Atan",bu="Atanh",xu="Atan2",jd="AvgPool",Gg="AvgPoolGrad",Qd="AvgPool3D",Vg="AvgPool3DGrad",Jd="BatchMatMul",qd="BatchToSpaceND",Wg="Bincount",RE="BroadcastTo",$g="BroadcastArgs",vu="Cast",wu="Ceil",Su="ClipByValue",Ug="Complex",ep="ComplexAbs",tp="Concat",np="Conv2D",Bg="Conv2DBackpropFilter",sp="Conv2DBackpropInput",ip="Conv3D",Xg="Conv3DBackpropFilterV2",Hg="Conv3DBackpropInputV2",_u="Cos",Tu="Cosh",Zg="Cumprod",rp="Cumsum",Kg="CropAndResize",Yg="DenseBincount",jg="DepthToSpace",ap="DepthwiseConv2dNative",Qg="DepthwiseConv2dNativeBackpropFilter",Jg="DepthwiseConv2dNativeBackpropInput",qg="Diag",op="Dilation2D",Um="Dilation2DBackpropInput",Bm="Dilation2DBackpropFilter",Iu="RealDiv",e0="Einsum",Cu="Elu",t0="EluGrad",Mu="Erf",lp="Equal",Eu="Exp",cp="ExpandDims",ku="Expm1",n0="FFT",s0="Fill",i0="FlipLeftRight",Nu="Floor",Ru="FloorDiv",up="FusedBatchNorm",hp="GatherV2",r0="GatherNd",dp="Greater",Au="GreaterEqual",Lu="Identity",a0="IFFT",o0="Imag",Pu="IsFinite",Du="IsInf",Fu="IsNan",pp="LeakyRelu",fp="Less",mp="LessEqual",l0="LinSpace",Ou="Log",zu="Log1p",gp="LogicalAnd",yp="LogicalNot",bp="LogicalOr",UW="LogicalXor",AE="LogSoftmax",BW="LowerBound",xp="LRN",c0="LRNGrad",vp="Max",Gu="Maximum",wp="MaxPool",u0="MaxPoolGrad",Sp="MaxPool3D",h0="MaxPool3DGrad",d0="MaxPoolWithArgmax",_p="Mean",Tp="Min",Vu="Minimum",Ip="MirrorPad",Wu="Mod",p0="Multinomial",$u="Multiply",Cp="Neg",Mp="NotEqual",f0="NonMaxSuppressionV3",m0="NonMaxSuppressionV4",g0="NonMaxSuppressionV5",Ep="OnesLike",kp="OneHot",Np="Pack",Rp="PadV2",XW="Pool",Uu="Pow",Ap="Prelu",Lp="Prod",y0="RaggedGather",b0="RaggedRange",x0="RaggedTensorToTensor",v0="Range",w0="Real",Bu="Reciprocal",Xu="Relu",Pp="Reshape",Dp="ResizeNearestNeighbor",S0="ResizeNearestNeighborGrad",Fp="ResizeBilinear",_0="ResizeBilinearGrad",Hu="Relu6",Op="Reverse",Zu="Round",Ku="Rsqrt",T0="ScatterNd",I0="SearchSorted",zp="Select",Yu="Selu",Gp="Slice",ju="Sin",Qu="Sinh",Ju="Sign",qu="Sigmoid",eh="Softplus",th="Sqrt",Vp="Sum",Wp="SpaceToBatchND",$p="SplitV",Up="Softmax",C0="SparseFillEmptyRows",M0="SparseReshape",E0="SparseSegmentMean",k0="SparseSegmentSum",N0="SparseToDense",nh="SquaredDifference",R0="Square",A0="StridedSlice",L0="StringNGrams",P0="StringSplit",D0="StringToHashBucketFast",sh="Sub",ih="Tan",rh="Tanh",ah="Tile",F0="TopK",O0="Transform",nl="Transpose",z0="Unique",Bp="Unpack",Xp="UnsortedSegmentSum",HW="UpperBound",Hp="ZerosLike",oh="Step",Xm="FromPixels",G0="RotateWithOffset",fd="_FusedMatMul",md="FusedConv2D",gd="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(...n){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...n)}function ZW(...n){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oc=Pv("kernelRegistry",()=>new Map),yd=Pv("gradRegistry",()=>new Map);function Hm(n,e){const t=Dv(n,e);return Oc.get(t)}function h1(n){return yd.get(n)}function Zm(n){const e=Oc.entries(),t=[];for(;;){const{done:s,value:i}=e.next();if(s)break;const[r,a]=i,[o]=r.split("_");o===n&&t.push(a)}return t}function Fs(n){const{kernelName:e,backendName:t}=n,s=Dv(e,t);Oc.has(s)&&ui(`The kernel '${e}' for backend '${t}' is already registered`),Oc.set(s,n)}function LE(n){const{kernelName:e}=n;yd.has(e)&&q().getBool("DEBUG")&&ui(`Overriding the gradient for '${e}'`),yd.set(e,n)}function KW(n,e){const t=Dv(n,e);if(!Oc.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);Oc.delete(t)}function YW(n){if(!yd.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);yd.delete(n)}function jW(n,e){Zm(n).forEach(t=>{const s=Object.assign({},t,{backendName:e});Fs(s)})}function Dv(n,e){return`${e}_${n}`}var PE=Ht,Li=null;try{Li=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ht(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Ht.prototype.__isLong__;Object.defineProperty(Ht.prototype,"__isLong__",{value:!0});function ri(n){return(n&&n.__isLong__)===!0}Ht.isLong=ri;var LI={},PI={};function Pl(n,e){var t,s,i;return e?(n>>>=0,(i=0<=n&&n<256)&&(s=PI[n],s)?s:(t=Zt(n,(n|0)<0?-1:0,!0),i&&(PI[n]=t),t)):(n|=0,(i=-128<=n&&n<128)&&(s=LI[n],s)?s:(t=Zt(n,n<0?-1:0,!1),i&&(LI[n]=t),t))}Ht.fromInt=Pl;function Pi(n,e){if(isNaN(n))return e?Yo:Di;if(e){if(n<0)return Yo;if(n>=DE)return zE}else{if(n<=-FI)return Xs;if(n+1>=FI)return OE}return n<0?Pi(-n,e).neg():Zt(n%zc|0,n/zc|0,e)}Ht.fromNumber=Pi;function Zt(n,e,t){return new Ht(n,e,t)}Ht.fromBits=Zt;var Km=Math.pow;function Fv(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return Di;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Fv(n.substring(1),e,t).neg();for(var i=Pi(Km(t,8)),r=Di,a=0;a<n.length;a+=8){var o=Math.min(8,n.length-a),l=parseInt(n.substring(a,a+o),t);if(o<8){var c=Pi(Km(t,o));r=r.mul(c).add(Pi(l))}else r=r.mul(i),r=r.add(Pi(l))}return r.unsigned=e,r}Ht.fromString=Fv;function ur(n,e){return typeof n=="number"?Pi(n,e):typeof n=="string"?Fv(n,e):Zt(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Ht.fromValue=ur;var DI=65536,QW=1<<24,zc=DI*DI,DE=zc*zc,FI=DE/2,OI=Pl(QW),Di=Pl(0);Ht.ZERO=Di;var Yo=Pl(0,!0);Ht.UZERO=Yo;var xc=Pl(1);Ht.ONE=xc;var FE=Pl(1,!0);Ht.UONE=FE;var d1=Pl(-1);Ht.NEG_ONE=d1;var OE=Zt(-1,2147483647,!1);Ht.MAX_VALUE=OE;var zE=Zt(-1,-1,!0);Ht.MAX_UNSIGNED_VALUE=zE;var Xs=Zt(0,-2147483648,!1);Ht.MIN_VALUE=Xs;var Ie=Ht.prototype;Ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ie.toNumber=function(){return this.unsigned?(this.high>>>0)*zc+(this.low>>>0):this.high*zc+(this.low>>>0)};Ie.toString=function(n){if(n=n||10,n<2||36<n)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Xs)){var e=Pi(n),t=this.div(e),s=t.mul(e).sub(this);return t.toString(n)+s.toInt().toString(n)}else return"-"+this.neg().toString(n);for(var i=Pi(Km(n,6),this.unsigned),r=this,a="";;){var o=r.div(i),l=r.sub(o.mul(i)).toInt()>>>0,c=l.toString(n);if(r=o,r.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};Ie.getHighBits=function(){return this.high};Ie.getHighBitsUnsigned=function(){return this.high>>>0};Ie.getLowBits=function(){return this.low};Ie.getLowBitsUnsigned=function(){return this.low>>>0};Ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Xs)?64:this.neg().getNumBitsAbs();for(var n=this.high!=0?this.high:this.low,e=31;e>0&&!(n&1<<e);e--);return this.high!=0?e+33:e+1};Ie.isZero=function(){return this.high===0&&this.low===0};Ie.eqz=Ie.isZero;Ie.isNegative=function(){return!this.unsigned&&this.high<0};Ie.isPositive=function(){return this.unsigned||this.high>=0};Ie.isOdd=function(){return(this.low&1)===1};Ie.isEven=function(){return(this.low&1)===0};Ie.equals=function(n){return ri(n)||(n=ur(n)),this.unsigned!==n.unsigned&&this.high>>>31===1&&n.high>>>31===1?!1:this.high===n.high&&this.low===n.low};Ie.eq=Ie.equals;Ie.notEquals=function(n){return!this.eq(n)};Ie.neq=Ie.notEquals;Ie.ne=Ie.notEquals;Ie.lessThan=function(n){return this.comp(n)<0};Ie.lt=Ie.lessThan;Ie.lessThanOrEqual=function(n){return this.comp(n)<=0};Ie.lte=Ie.lessThanOrEqual;Ie.le=Ie.lessThanOrEqual;Ie.greaterThan=function(n){return this.comp(n)>0};Ie.gt=Ie.greaterThan;Ie.greaterThanOrEqual=function(n){return this.comp(n)>=0};Ie.gte=Ie.greaterThanOrEqual;Ie.ge=Ie.greaterThanOrEqual;Ie.compare=function(n){if(ri(n)||(n=ur(n)),this.eq(n))return 0;var e=this.isNegative(),t=n.isNegative();return e&&!t?-1:!e&&t?1:this.unsigned?n.high>>>0>this.high>>>0||n.high===this.high&&n.low>>>0>this.low>>>0?-1:1:this.sub(n).isNegative()?-1:1};Ie.comp=Ie.compare;Ie.negate=function(){return!this.unsigned&&this.eq(Xs)?Xs:this.not().add(xc)};Ie.neg=Ie.negate;Ie.add=function(n){ri(n)||(n=ur(n));var e=this.high>>>16,t=this.high&65535,s=this.low>>>16,i=this.low&65535,r=n.high>>>16,a=n.high&65535,o=n.low>>>16,l=n.low&65535,c=0,u=0,h=0,d=0;return d+=i+l,h+=d>>>16,d&=65535,h+=s+o,u+=h>>>16,h&=65535,u+=t+a,c+=u>>>16,u&=65535,c+=e+r,c&=65535,Zt(h<<16|d,c<<16|u,this.unsigned)};Ie.subtract=function(n){return ri(n)||(n=ur(n)),this.add(n.neg())};Ie.sub=Ie.subtract;Ie.multiply=function(n){if(this.isZero())return Di;if(ri(n)||(n=ur(n)),Li){var e=Li.mul(this.low,this.high,n.low,n.high);return Zt(e,Li.get_high(),this.unsigned)}if(n.isZero())return Di;if(this.eq(Xs))return n.isOdd()?Xs:Di;if(n.eq(Xs))return this.isOdd()?Xs:Di;if(this.isNegative())return n.isNegative()?this.neg().mul(n.neg()):this.neg().mul(n).neg();if(n.isNegative())return this.mul(n.neg()).neg();if(this.lt(OI)&&n.lt(OI))return Pi(this.toNumber()*n.toNumber(),this.unsigned);var t=this.high>>>16,s=this.high&65535,i=this.low>>>16,r=this.low&65535,a=n.high>>>16,o=n.high&65535,l=n.low>>>16,c=n.low&65535,u=0,h=0,d=0,p=0;return p+=r*c,d+=p>>>16,p&=65535,d+=i*c,h+=d>>>16,d&=65535,d+=r*l,h+=d>>>16,d&=65535,h+=s*c,u+=h>>>16,h&=65535,h+=i*l,u+=h>>>16,h&=65535,h+=r*o,u+=h>>>16,h&=65535,u+=t*c+s*l+i*o+r*a,u&=65535,Zt(d<<16|p,u<<16|h,this.unsigned)};Ie.mul=Ie.multiply;Ie.divide=function(n){if(ri(n)||(n=ur(n)),n.isZero())throw Error("division by zero");if(Li){if(!this.unsigned&&this.high===-2147483648&&n.low===-1&&n.high===-1)return this;var e=(this.unsigned?Li.div_u:Li.div_s)(this.low,this.high,n.low,n.high);return Zt(e,Li.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Yo:Di;var t,s,i;if(this.unsigned){if(n.unsigned||(n=n.toUnsigned()),n.gt(this))return Yo;if(n.gt(this.shru(1)))return FE;i=Yo}else{if(this.eq(Xs)){if(n.eq(xc)||n.eq(d1))return Xs;if(n.eq(Xs))return xc;var r=this.shr(1);return t=r.div(n).shl(1),t.eq(Di)?n.isNegative()?xc:d1:(s=this.sub(n.mul(t)),i=t.add(s.div(n)),i)}else if(n.eq(Xs))return this.unsigned?Yo:Di;if(this.isNegative())return n.isNegative()?this.neg().div(n.neg()):this.neg().div(n).neg();if(n.isNegative())return this.div(n.neg()).neg();i=Di}for(s=this;s.gte(n);){t=Math.max(1,Math.floor(s.toNumber()/n.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),o=a<=48?1:Km(2,a-48),l=Pi(t),c=l.mul(n);c.isNegative()||c.gt(s);)t-=o,l=Pi(t,this.unsigned),c=l.mul(n);l.isZero()&&(l=xc),i=i.add(l),s=s.sub(c)}return i};Ie.div=Ie.divide;Ie.modulo=function(n){if(ri(n)||(n=ur(n)),Li){var e=(this.unsigned?Li.rem_u:Li.rem_s)(this.low,this.high,n.low,n.high);return Zt(e,Li.get_high(),this.unsigned)}return this.sub(this.div(n).mul(n))};Ie.mod=Ie.modulo;Ie.rem=Ie.modulo;Ie.not=function(){return Zt(~this.low,~this.high,this.unsigned)};Ie.and=function(n){return ri(n)||(n=ur(n)),Zt(this.low&n.low,this.high&n.high,this.unsigned)};Ie.or=function(n){return ri(n)||(n=ur(n)),Zt(this.low|n.low,this.high|n.high,this.unsigned)};Ie.xor=function(n){return ri(n)||(n=ur(n)),Zt(this.low^n.low,this.high^n.high,this.unsigned)};Ie.shiftLeft=function(n){return ri(n)&&(n=n.toInt()),(n&=63)===0?this:n<32?Zt(this.low<<n,this.high<<n|this.low>>>32-n,this.unsigned):Zt(0,this.low<<n-32,this.unsigned)};Ie.shl=Ie.shiftLeft;Ie.shiftRight=function(n){return ri(n)&&(n=n.toInt()),(n&=63)===0?this:n<32?Zt(this.low>>>n|this.high<<32-n,this.high>>n,this.unsigned):Zt(this.high>>n-32,this.high>=0?0:-1,this.unsigned)};Ie.shr=Ie.shiftRight;Ie.shiftRightUnsigned=function(n){if(ri(n)&&(n=n.toInt()),n&=63,n===0)return this;var e=this.high;if(n<32){var t=this.low;return Zt(t>>>n|e<<32-n,e>>>n,this.unsigned)}else return n===32?Zt(e,0,this.unsigned):Zt(e>>>n-32,0,this.unsigned)};Ie.shru=Ie.shiftRightUnsigned;Ie.shr_u=Ie.shiftRightUnsigned;Ie.toSigned=function(){return this.unsigned?Zt(this.low,this.high,!1):this};Ie.toUnsigned=function(){return this.unsigned?this:Zt(this.low,this.high,!0)};Ie.toBytes=function(n){return n?this.toBytesLE():this.toBytesBE()};Ie.toBytesLE=function(){var n=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,n&255,n>>>8&255,n>>>16&255,n>>>24]};Ie.toBytesBE=function(){var n=this.high,e=this.low;return[n>>>24,n>>>16&255,n>>>8&255,n&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Ht.fromBytes=function(n,e,t){return t?Ht.fromBytesLE(n,e):Ht.fromBytesBE(n,e)};Ht.fromBytesLE=function(n,e){return new Ht(n[0]|n[1]<<8|n[2]<<16|n[3]<<24,n[4]|n[5]<<8|n[6]<<16|n[7]<<24,e)};Ht.fromBytesBE=function(n,e){return new Ht(n[4]<<24|n[5]<<16|n[6]<<8|n[7],n[0]<<24|n[1]<<16|n[2]<<8|n[3],e)};const GE=wW(PE),JW=kW({__proto__:null,default:GE},[PE]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bo=GE||JW;function Zp(n){return Bo.fromString(n,!0,16)}const VE=Zp("c3a5c85c97cb3127"),Vo=Zp("b492b66fbe98f273"),hs=Zp("9ae16a3b2f90404f");function p1(n){return n.xor(n.shru(47))}function WE(n,e,t){const s=n.slice(e,e+t);return Bo.fromBytes(Array.from(s),!0,!0)}function Wt(n,e){return WE(n,e,8)}function zI(n,e){return WE(n,e,4)}function Fn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Ja(n,e,t=Zp("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let i=e.xor(s).mul(t);return i=i.xor(i.shru(47)),i=i.mul(t),i}function qW(n,e,t,s,i,r){i=i.add(n),r=Fn(r.add(i).add(s),21);const a=i;return i=i.add(e),i=i.add(t),r=r.add(Fn(i,44)),[i.add(s),r.add(a)]}function rm(n,e,t,s){return qW(Wt(n,e),Wt(n,e+8),Wt(n,e+16),Wt(n,e+24),t,s)}function e$(n,e=n.length){if(e>=8){const t=hs.add(e*2),s=Wt(n,0).add(hs),i=Wt(n,e-8),r=Fn(i,37).mul(t).add(s),a=Fn(s,25).add(i).mul(t);return Ja(r,a,t)}if(e>=4){const t=hs.add(e*2),s=zI(n,0);return Ja(s.shl(3).add(e),zI(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],i=n[e-1],r=t+(s<<8),a=e+(i<<2);return p1(hs.mul(r).xor(VE.mul(a))).mul(hs)}return hs}function t$(n,e=n.length){const t=hs.add(e*2),s=Wt(n,0).mul(Vo),i=Wt(n,8),r=Wt(n,e-8).mul(t),a=Wt(n,e-16).mul(hs);return Ja(Fn(s.add(i),43).add(Fn(r,30)).add(a),s.add(Fn(i.add(hs),18)).add(r),t)}function n$(n,e=n.length){const t=hs.add(e*2),s=Wt(n,0).mul(hs),i=Wt(n,8),r=Wt(n,e-8).mul(t),a=Wt(n,e-16).mul(hs),o=Fn(s.add(i),43).add(Fn(r,30)).add(a),l=Ja(o,s.add(Fn(i.add(hs),18)).add(r),t),c=Wt(n,16).mul(t),u=Wt(n,24),h=o.add(Wt(n,e-32)).mul(t),d=l.add(Wt(n,e-24)).mul(t);return Ja(Fn(c.add(u),43).add(Fn(h,30)).add(d),c.add(Fn(u.add(s),18)).add(h),t)}function $E(n,e=n.length){const t=Bo.fromNumber(81,!0);if(e<=32)return e<=16?e$(n,e):t$(n,e);if(e<=64)return n$(n,e);let s=t,i=t.mul(Vo).add(113),r=p1(i.mul(hs).add(113)).mul(hs),a=[Bo.UZERO,Bo.UZERO],o=[Bo.UZERO,Bo.UZERO];s=s.mul(hs).add(Wt(n,0));let l=0;const c=(e-1>>6)*64,u=c+(e-1&63)-63;do s=Fn(s.add(i).add(a[0]).add(Wt(n,l+8)),37).mul(Vo),i=Fn(i.add(a[1]).add(Wt(n,l+48)),42).mul(Vo),s=s.xor(o[1]),i=i.add(a[0]).add(Wt(n,l+40)),r=Fn(r.add(o[0]),33).mul(Vo),a=rm(n,l,a[1].mul(Vo),s.add(o[0])),o=rm(n,l+32,r.add(o[1]),i.add(Wt(n,l+16))),[r,s]=[s,r],l+=64;while(l!==c);const h=Vo.add(r.and(255).shl(1));return l=u,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=Fn(s.add(i).add(a[0]).add(Wt(n,l+8)),37).mul(h),i=Fn(i.add(a[1]).add(Wt(n,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),i=i.add(a[0].mul(9).add(Wt(n,l+40))),r=Fn(r.add(o[0]),33).mul(h),a=rm(n,l,a[1].mul(h),s.add(o[0])),o=rm(n,l+32,r.add(o[1]),i.add(Wt(n,l+16))),[r,s]=[s,r],Ja(Ja(a[0],o[0],h).add(p1(i).mul(VE)).add(r),Ja(a[1],o[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(n,e){return e==="string"?Nr(n):go([n],e)}function s$(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function go(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Fr(n)),q().getBool("DEBUG")&&_E(n,e),s$(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Zn(){return q().platform.now()}function UE(n,e){return q().platform.fetch(n,e)}function Nr(n,e="utf-8"){return e=e||"utf-8",q().platform.encode(n,e)}function da(n,e="utf-8"){return e=e||"utf-8",q().platform.decode(n,e)}function On(n){return q().platform.isTypedArray(n)}function Fr(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||ha(n)||n==null||On(n)&&t)e.push(n);else if(Array.isArray(n)||On(n))for(let s=0;s<n.length;++s)Fr(n[s],e,t);else{let s=-1;for(const i of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(i)&&(s=Math.max(s,Number(i)));for(let i=0;i<=s;i++)Fr(n[i],e,t)}return e}const i$=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:vt,assert:E,assertNonNegativeIntegerDimensions:ii,assertNonNull:Rl,assertShapesMatch:Jn,bytesFromStringArray:IE,bytesPerElement:pd,checkConversionForErrors:_E,clamp:ro,computeStrides:Xe,convertBackendValuesAndArrayBuffer:EE,createScalarValue:_a,createShuffledIndices:OW,decodeString:da,distSquared:PW,encodeString:Nr,fetch:UE,fingerPrint64:$E,flatten:Fr,getArrayFromDType:pn,getTypedArrayFromDType:Pn,hasEncodingLoss:Rv,hexToLong:Zp,indexToLoc:Al,inferDtype:du,inferFromImplicitShape:Nv,isBoolean:CE,isFunction:ao,isInt:dl,isNumber:Wm,isPromise:ha,isScalarShape:DW,isString:Tr,isTypedArray:On,isValidDtype:TE,locToIndex:tr,makeOnesTypedArray:Fg,makeZerosNestedTypedArray:Av,makeZerosTypedArray:Yn,nearestDivisor:$m,nearestLargerEven:Dg,now:Zn,parseAxisParam:ft,randUniform:LW,repeatedTry:u1,rightPad:tl,shuffle:kv,shuffleCombo:AW,sizeFromShape:oe,sizeToSquarishShape:Vm,squeezeShape:Sa,sum:SE,swap:ra,tanh:FW,toNestedArray:fi,toTypedArray:go},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r${constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new o$)}profileKernel(e,t,s){let i;const r=()=>{i=s()};let a;const o=Zn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const l of i)l.dataSync();a=Promise.resolve({kernelMs:Zn()-o})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<i.length;l++){const c=i[l];c.data().then(u=>{a$(u,c.dtype,e)})}return{kernelName:e,outputs:i,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:i,inputs:r,extraInfo:a}=e;s.forEach(o=>{Promise.all([o.data(),i,a]).then(l=>{this.logger.logKernelProfile(t,o,l[0],l[1],r,l[2])})})}}function a$(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const i=n[s];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${t}'`),!0}return!1}class o${logKernelProfile(e,t,s,i,r,a){const o=typeof i=="number"?tl(`${i}ms`,9):i.error,l=tl(e,25),c=t.rank,u=t.size,h=tl(t.shape.toString(),14);let d="";for(const p in r){const m=r[p];if(m!=null){const g=m.shape||t.shape,f=g.length;d+=`${p}: ${f}D ${f>0?g:""} `}}console.log(`%c${l}	%c${o}	%c${c}D ${h}	%c${u}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,e,t){const s={},i={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const h in u){const d=u[h];let p=!1;for(let m=0;m<e.length;m++)if(s[d.id]){c.outputs.forEach(g=>s[g.id]=!0),p=!0,i[c.id]=!0;break}if(p)break}}const r={};r[t.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,a[c.id]=!0;break}}const o=[];for(let l=0;l<n.length;l++){const c=n[l];if(i[c.id]&&a[c.id]){const u={};for(const d in c.inputs){const p=c.inputs[d];s[p.id]&&(u[d]=p)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,o.push(h)}}return o}function c$(n,e,t,s){for(let i=e.length-1;i>=0;i--){const r=e[i],a=[];if(r.outputs.forEach(l=>{const c=n[l.id];c!=null?a.push(c):a.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const o=r.gradient(a);for(const l in r.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const c=t(()=>o[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!vt(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const h=n[u.id];n[u.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GI=20,Vh=3,ax=7;function u$(n,e,t,s){const i=Xe(e),r=h$(n,e,t,i),a=e.length,o=Mm(n,e,t,i,r),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(c=>"    "+c).join(`
`)),l.join(`
`)}function h$(n,e,t,s){const i=oe(e),r=s[s.length-1],a=new Array(r).fill(0),o=e.length,l=t==="complex64"?Qh(n):n;if(o>1)for(let c=0;c<i/r;c++){const u=c*r;for(let h=0;h<r;h++)a[h]=Math.max(a[h],jh(l[u+h],0,t).length)}return a}function jh(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(ax))} + ${parseFloat(n[1].toFixed(ax))}j`:Tr(n)?s=`'${n}'`:t==="bool"?s=BE(n):s=parseFloat(n.toFixed(ax)).toString(),tl(s,e)}function BE(n){return n===0?"false":"true"}function Mm(n,e,t,s,i,r=!0){const a=t==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(t==="complex64"){const g=Qh(n);return[jh(g[0],0,t)]}return t==="bool"?[BE(n[0])]:[n[0].toString()]}if(l===1){if(o>GI){const g=Vh*a;let f=Array.from(n.slice(0,g)),y=Array.from(n.slice((o-Vh)*a,o*a));return t==="complex64"&&(f=Qh(f),y=Qh(y)),["["+f.map((b,x)=>jh(b,i[x],t)).join(", ")+", ..., "+y.map((b,x)=>jh(b,i[o-Vh+x],t)).join(", ")+"]"]}return["["+(t==="complex64"?Qh(n):Array.from(n)).map((g,f)=>jh(g,i[f],t)).join(", ")+"]"]}const c=e.slice(1),u=s.slice(1),h=s[0]*a,d=[];if(o>GI){for(let g=0;g<Vh;g++){const f=g*h,y=f+h;d.push(...Mm(n.slice(f,y),c,t,u,i,!1))}d.push("...");for(let g=o-Vh;g<o;g++){const f=g*h,y=f+h;d.push(...Mm(n.slice(f,y),c,t,u,i,g===o-1))}}else for(let g=0;g<o;g++){const f=g*h,y=f+h;d.push(...Mm(n.slice(f,y),c,t,u,i,g===o-1))}const p=l===2?",":"";d[0]="["+(o>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let m=`,
`;for(let g=2;g<l;g++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":m),d}function Qh(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=oe(e),s!=null){const i=s.length;E(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||pn(t,this.size),this.strides=Xe(e)}set(e,...t){t.length===0&&(t=[0]),E(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const i of e){if(i<0||i>=this.shape[t]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let s=e[e.length-1];for(let i=0;i<e.length-1;++i)s+=this.strides[i]*e[i];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ji().makeTensor(this.values,this.shape,this.dtype)}}let ji=null,mc=null;function d$(n){ji=n}function p$(n){mc=n}let Ct=class{constructor(e,t,s,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oe(e),this.strides=Xe(e),this.dataId=s,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return mc.buffer(this.shape,this.dtype,e)}bufferSync(){return mc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return fi(this.shape,e,this.dtype==="complex64")}arraySync(){return fi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=ji().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>da(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ji().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ji().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>da(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ji().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ji().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return mc.print(this,e)}clone(){return this.throwIfDisposed(),mc.clone(this)}toString(e=!1){const t=this.dataSync();return u$(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),mc.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),ji().makeVariable(this,e,t,s)}};Object.defineProperty(Ct,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function le(){return Pv("Tensor",()=>Ct)}le();class bd extends Ct{constructor(e,t,s,i){super(e.shape,e.dtype,e.dataId,i),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!vt(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ji().disposeTensor(this),this.dataId=e.dataId,ji().incRef(this,null)}dispose(){ji().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(bd,Symbol.hasInstance,{value:n=>n instanceof Ct&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var f1;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(f1||(f1={}));var m1;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(m1||(m1={}));var g1;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(g1||(g1={}));var y1;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(y1||(y1={}));var b1;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(b1||(b1={}));const f$={float32:y1,int32:m1,bool:g1,complex64:b1};function As(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return f$[n][e]}function V0(n){return As(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(n,e){if(n.dtype===e.dtype)return[n,e];const t=As(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function XE(n,e){E(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function W0(n,e){return e.some(t=>t.id===n.id)}function pa(n){const e=[];return HE(n,e,new Set),e}function HE(n,e,t){if(n==null)return;if(n instanceof Ct){e.push(n);return}if(!m$(n))return;const s=n;for(const i in s){const r=s[i];t.has(r)||(t.add(r),HE(r,e,t))}}function m$(n){return Array.isArray(n)||typeof n=="object"}const g$=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:XE,getTensorsInContainer:pa,isTensorInList:W0,makeTypesMatch:rn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ox(n){return n.kernelName!=null}class VI{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Gc{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new VI}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(ui(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new r$(this.backendInstance),!0}setupRegisteredKernels(){Zm(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Zm(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Pg)&&typeof s.then=="function"){const i=++this.pendingBackendInitId,r=s.then(a=>i<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,ui(`Initialization of backend ${e} failed`),ui(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return ui(`Initialization of backend ${e} failed`),ui(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:i,asyncInit:r}=this.initializeBackend(s);if(r||i)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),i=s.backend,r=this.readSync(t),a=i.refCount(t);i.disposeData(t,!0),s.backend=e,e.move(t,r,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let i;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(i),()=>(i=t(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,t,s){e();try{const i=s();return t(),i}catch(i){throw t(),i}}nextTensorId(){return Gc.nextTensorId++}nextVariableId(){return Gc.nextVariableId++}clone(e){const t=W.runKernel(Lu,{x:e}),s={x:e},i=a=>({x:()=>{const o="float32",l={x:a},c={dtype:o};return W.runKernel(vu,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[t],i,r,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,Hm(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const i=this.backend.numDataIds();let r=0;s.forEach(l=>{r+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=i-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const i=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const c=ox(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ox(e)){const{kernelName:m,inputs:g,attrs:f}=e;this.backendName==null&&this.backend;const y=Hm(m,this.backendName);E(y!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),o=()=>{const b=this.backend.numDataIds();l=y.kernelFunc({inputs:g,attrs:f,backend:this.backend});const x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,b,x);const v=x.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(i){const w=this.getTensorsForGradient(m,g,v);s=this.saveTensorsForBackwardMode(w)}return v}}else{const{forwardFunc:m}=e,g=f=>{i&&(s=f.map(y=>this.keep(this.clone(y))))};o=()=>{const f=this.backend.numDataIds();l=this.tidy(()=>m(this.backend,g));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,f,y),y}}const{inputs:u,attrs:h}=e,d=ox(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(c,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),i&&this.addTapeNode(c,u,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(m=>u[m]!=null?u[m].shape:null),outputShapes:t.map(m=>m.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,s){const i=h1(e);if(i!=null){const r=i.inputsToSave||[],a=i.outputsToSave||[];let o;i.saveAllInputs?(E(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(c=>t[c])):o=r.map(c=>t[c]);const l=s.filter((c,u)=>a[u]);return o.concat(l)}return[]}makeTensor(e,t,s,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",i=i||this.backend;let r=e;s==="string"&&Tr(e[0])&&(r=e.map(l=>Nr(l)));const a=i.write(r,t,s),o=new Ct(t,s,a,this.nextTensorId());if(this.trackTensor(o,i),s==="string"){const l=this.state.tensorInfo.get(a),c=IE(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return o}makeTensorFromDataId(e,t,s,i){s=s||"float32";const r={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:i,dtype:r}=e,a=new Ct(i,r,s,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,s,i){s=s||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));const r=new bd(e,t,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*pd(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof bd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*pd(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,i,r,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:r},l=h1(e);l!=null&&(i=l.gradFunc),i!=null&&(o.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],p=Yn(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),i(c.length>1?c:c[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=pa(e),s=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const a=this.state.activeScope.track[r];!a.kept&&!s.has(a.id)&&a.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(e,t,s,i=!1){if(E(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));E(r instanceof Ct,()=>"The result y returned by f() must be a tensor.");const a=l$(this.state.activeTape,t,r);if(!i&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[r.id]=s??y$(r.shape),c$(o,a,c=>this.tidy(c),b$);const l=t.map(c=>o[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return E(ao(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{E(t.every(o=>o instanceof Ct),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const i={};t.forEach((o,l)=>{i[l]=o});const r=(o,l)=>(s=e(...t,l),E(s.value instanceof Ct,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(ao(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(o,l)=>{const c=s.gradFunc(o,l),u=Array.isArray(c)?c:[c];E(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(u.every(d=>d instanceof Ct),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Zn(),s=await this.backend.time(e);return s.wallMs=Zn()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new VI;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Gc.nextTensorId=0;Gc.nextVariableId=0;function y$(n){const e=Fg(oe(n),"float32");return W.makeTensor(e,n,"float32")}function ZE(){const n=NE();if(n._tfengine==null){const e=new kE(n);n._tfengine=new Gc(e)}return WW(n._tfengine.ENV),d$(()=>n._tfengine),n._tfengine}const W=ZE();function b$(n,e){const t={a:n,b:e};return W.runKernel(Ll,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(){return typeof navigator<"u"&&navigator!=null}let x1;function v$(n){x1=n}function Ov(n){if(x1!==void 0)return x1;if(n||x$()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function zv(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const w$=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:zv,isMobile:Ov,mockIsMobile:v$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yi=q();yi.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});yi.registerFlag("IS_BROWSER",()=>zv());yi.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");yi.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));yi.registerFlag("PROD",()=>!1);yi.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>yi.getBool("DEBUG"));yi.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);yi.registerFlag("IS_TEST",()=>!1);yi.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);yi.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);yi.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);yi.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(n,e){let t=n;if(On(n))return e==="string"?[]:[n.length];if(typeof n=="object"){if("texture"in n){const i=n.channels||"RGBA";return[n.height,n.width*i.length]}else if("buffer"in n&&!(n.buffer instanceof ArrayBuffer))return[n.buffer.size/(e==null?4:pd(e))]}if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||On(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&KE(n,s,[]),s}function KE(n,e,t){if(t=t||[],!Array.isArray(n)&&!On(n)){E(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}E(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),E(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let i=0;i<n.length;++i)KE(n[i],s,t.concat(i))}function WI(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function k(n,e,t,s="numeric"){if(n instanceof Ct)return WI(s,n.dtype,e,t),n;let i=du(n);if(i!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),WI(s,i,e,t),n==null||!On(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const o=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${o}'`)}const r=Or(n,i);!On(n)&&!Array.isArray(n)&&(n=[n]);const a=i!=="string"?go(n,i):Fr(n,[],!0);return W.makeTensor(a,r,i)}function xd(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,r)=>k(i,`${e}[${r}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gv="__op";function $(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+Gv;const i=(...r)=>{W.startScope(t);try{const a=s(...r);return ha(a)&&console.error("Cannot return a Promise inside of tidy."),W.endScope(a),a}catch(a){throw W.endScope(null),a}};return Object.defineProperty(i,"name",{value:t,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(n,e){const t=k(n,"real","complex"),s=k(e,"imag","complex");Jn(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const i={real:t,imag:s};return W.runKernel(Ug,i)}const fa=$({complex_:S$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yo(n,e,t,s){if(s==null)s=du(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof n=="object"&&("texture"in n||"buffer"in n&&!(n.buffer instanceof ArrayBuffer))){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return W.backend.createTensorFromGPUData(n,e||t,s)}if(!On(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){ii(e);const i=oe(e),r=oe(t);E(i===r,()=>`Based on the provided shape, [${e}], the tensor should have ${i} values but has ${r}`);for(let a=0;a<t.length;++a){const o=t[a],l=a===t.length-1?o!==oe(e.slice(a)):!0;E(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!On(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?go(n,s):Fr(n,[],!0),W.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(n,e,t){const s=Or(n,t);return yo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v1={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ym=4;async function w1(n,e){const t=[],s=[],i=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<i.length;++a){const o=i[a],l=Array.isArray(n)?n[a].tensor:n[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const c={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((f,y)=>f+y.length,0)+Ym*d.length,m=new Uint8Array(p);let g=0;for(let f=0;f<d.length;f++){const y=d[f],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,g),g+=Ym,m.set(y,g),g+=y.length}h(m)});s.push(u)}else s.push(l.data());e!=null&&(c.group=e),t.push(c)}const r=await Promise.all(s);return{data:_$(r),specs:t}}function Vv(n,e){const t={};let s,i=0;for(const r of e){const a=r.name,o=r.dtype,l=r.shape,c=oe(l);let u;if("quantization"in r){const h=r.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${r.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=v1[h.dtype],p=n.slice(i,i+c*d),m=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(o==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(m.length);for(let g=0;g<m.length;g++){const f=m[g];u[g]=f*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=k$()),u=s(m);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(o==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(m.length);for(let g=0;g<m.length;g++){const f=m[g];u[g]=Math.round(f*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${o}`);i+=c*d}else if(o==="string"){const h=oe(r.shape);u=[];for(let d=0;d<h;d++){const p=new Uint32Array(n.slice(i,i+Ym))[0];i+=Ym;const m=new Uint8Array(n.slice(i,i+p));u.push(m),i+=p}}else{const h=v1[o],d=n.slice(i,i+c*h);if(o==="float32")u=new Float32Array(d);else if(o==="int32")u=new Int32Array(d);else if(o==="bool")u=new Uint8Array(d);else if(o==="complex64"){u=new Float32Array(d);const p=new Float32Array(u.length/2),m=new Float32Array(u.length/2);for(let y=0;y<p.length;y++)p[y]=u[y*2],m[y]=u[y*2+1];const g=Jt(p,l,"float32"),f=Jt(m,l,"float32");t[a]=fa(g,f),g.dispose(),f.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${o}`);i+=c*h}o!=="complex64"&&(t[a]=Jt(u,l,o))}return t}function _$(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(r=>{if(e+=r.byteLength,t.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let i=0;return t.forEach(r=>{s.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),s.buffer}const Wv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function $I(n){return Wv?Buffer.byteLength(n):new Blob([n]).size}function T$(n){if(Wv)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,i=e.length;s<i;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function I$(n){if(Wv){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function $0(n){if(n.length===1)return n[0];let e=0;n.forEach(i=>{e+=i.byteLength});const t=new Uint8Array(e);let s=0;return n.forEach(i=>{t.set(new Uint8Array(i),s),s+=i.byteLength}),t.buffer}function UI(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function YE(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function $v(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function Uv(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),$v(n,t,s)}function Kp(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:$I(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:$I(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function Bv(n){const e=[];for(const t of n)e.push(...t.weights);return e}function C$(){const n=t=>{let s=t<<13,i=0;for(;!(s&8388608);)i-=8388608,s<<=1;return s&=-8388609,i+=947912704,s|i},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function M$(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function E$(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function k$(){const n=C$(),e=M$(),t=E$();return s=>{const i=new ArrayBuffer(4*s.length),r=new Uint32Array(i);for(let a=0;a<s.length;a++){const o=s[a],l=n[t[o>>10]+(o&1023)]+e[o>>10];r[a]=l}return new Float32Array(i)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return tn.instance==null&&(tn.instance=new tn),tn.instance}static registerSaveRouter(e){tn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){tn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return tn.getHandlers(e,"save")}static getLoadHandlers(e,t){return tn.getHandlers(e,"load",t)}static getHandlers(e,t,s){const i=[];return(t==="load"?tn.getInstance().loadRouters:tn.getInstance().saveRouters).forEach(r=>{const a=r(e,s);a!==null&&i.push(a)}),i}}const N$=n=>tn.registerSaveRouter(n),R$=n=>tn.registerLoadRouter(n),jE=n=>tn.getSaveHandlers(n),QE=(n,e)=>tn.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S1="tensorflowjs",_1=1,jo="models_store",Wa="model_info_store";function JE(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function T1(n){const e=n.result;e.createObjectStore(jo,{keyPath:"modelPath"}),e.createObjectStore(Wa,{keyPath:"modelPath"})}class pl{constructor(e){if(this.indexedDB=JE(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,i)=>{const r=this.indexedDB.open(S1,_1);r.onupgradeneeded=()=>T1(r),r.onsuccess=()=>{const a=r.result;if(t==null){const o=a.transaction(jo,"readonly"),l=o.objectStore(jo).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=c=>(a.close(),i(l.error)),o.oncomplete=()=>a.close()}else{const o=Kp(t),l=a.transaction(Wa,"readwrite");let c=l.objectStore(Wa);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:o});let h;u.onsuccess=()=>{h=a.transaction(jo,"readwrite");const d=h.objectStore(jo).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});d.onsuccess=()=>s({modelArtifactsInfo:o}),d.onerror=p=>{c=l.objectStore(Wa);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),i(d.error)),m.onerror=g=>(a.close(),i(d.error))}},u.onerror=d=>(a.close(),i(u.error)),l.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},r.onerror=a=>i(r.error)})}}pl.URL_SCHEME="indexeddb://";const qE=n=>q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(pl.URL_SCHEME)?A$(n.slice(pl.URL_SCHEME.length)):null;tn.registerSaveRouter(qE);tn.registerLoadRouter(qE);function A$(n){return new pl(n)}function L$(n){return n.startsWith(pl.URL_SCHEME)?n.slice(pl.URL_SCHEME.length):n}class P${constructor(){this.indexedDB=JE()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(S1,_1);s.onupgradeneeded=()=>T1(s),s.onsuccess=()=>{const i=s.result,r=i.transaction(Wa,"readonly"),a=r.objectStore(Wa).getAll();a.onsuccess=()=>{const o={};for(const l of a.result)o[l.modelPath]=l.modelArtifactsInfo;e(o)},a.onerror=o=>(i.close(),t(a.error)),r.oncomplete=()=>i.close()},s.onerror=i=>t(s.error)})}async removeModel(e){return e=L$(e),new Promise((t,s)=>{const i=this.indexedDB.open(S1,_1);i.onupgradeneeded=()=>T1(i),i.onsuccess=()=>{const r=i.result,a=r.transaction(Wa,"readwrite"),o=a.objectStore(Wa),l=o.get(e);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=o.delete(e),h=()=>{c=r.transaction(jo,"readwrite");const d=c.objectStore(jo).delete(e);d.onsuccess=()=>t(l.result.modelArtifactsInfo),d.onerror=p=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),s(l.error))}},l.onerror=u=>(r.close(),s(l.error)),a.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},i.onerror=r=>s(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa="/",gc="tensorflowjs_models",ek="info",D$="model_topology",F$="weight_specs",O$="weight_data",z$="model_metadata";function tk(n){return{info:[gc,n,ek].join(aa),topology:[gc,n,D$].join(aa),weightSpecs:[gc,n,F$].join(aa),weightData:[gc,n,O$].join(aa),modelMetadata:[gc,n,z$].join(aa)}}function nk(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function G$(n){const e=n.split(aa);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(aa)}function V$(n){return n.startsWith(fl.URL_SCHEME)?n.slice(fl.URL_SCHEME.length):n}class fl{constructor(e){if(!q().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=tk(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),i=Kp(e);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,T$(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:i}}catch{throw nk(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(t.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=I$(a),t}}fl.URL_SCHEME="localstorage://";const sk=n=>q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(fl.URL_SCHEME)?W$(n.slice(fl.URL_SCHEME.length)):null;tn.registerSaveRouter(sk);tn.registerLoadRouter(sk);function W$(n){return new fl(n)}class $${constructor(){E(q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=gc+aa,s=aa+ek;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(t)&&r.endsWith(s)){const a=G$(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=V$(e);const t=tk(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return nk(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ic="://";class us{constructor(){this.managers={}}static getInstance(){return us.instance==null&&(us.instance=new us),us.instance}static registerManager(e,t){E(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ic)&&(e=e.slice(0,e.indexOf(Ic))),E(e.length>0,()=>"scheme must not be an empty string.");const s=us.getInstance();E(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=us.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(us.getInstance().managers)}}function Em(n){if(n.indexOf(Ic)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${us.getSchemes().join(",")}`);return{scheme:n.split(Ic)[0],path:n.split(Ic)[1]}}async function ik(n,e,t=!1){E(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=tn.getLoadHandlers(n);E(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),E(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const i=s[0],r=tn.getSaveHandlers(e);E(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),E(r.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const a=r[0],o=Em(n).scheme,l=Em(n).path,c=o===Em(n).scheme,u=await i.load();t&&c&&await us.getManager(o).removeModel(l);const h=await a.save(u);return t&&!c&&await us.getManager(o).removeModel(l),h.modelArtifactsInfo}async function U$(){const n=us.getSchemes(),e={};for(const t of n){const s=await us.getManager(t).listModels();for(const i in s){const r=t+Ic+i;e[r]=s[i]}}return e}async function B$(n){const e=Em(n);return us.getManager(e.scheme).removeModel(e.path)}async function X$(n,e){return ik(n,e,!1)}async function H$(n,e){return ik(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z${constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!q().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const i=this.functionRefs[s.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new Z$);try{us.registerManager(fl.URL_SCHEME,new $$)}catch{}try{us.registerManager(pl.URL_SCHEME,new P$)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$={importFetch:()=>require("node-fetch")};let lx;class Y${constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return q().global.fetch!=null?q().global.fetch(e,t):(lx==null&&(lx=K$.importFetch()),lx(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}q().get("IS_NODE")&&!q().get("IS_BROWSER")&&q().setPlatform("node",new Y$);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(n,e="float32",t){return e=e||"float32",ii(n),new Rn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,e){const t=k(n,"x","cast");if(!TE(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},i={dtype:e};return W.runKernel(vu,s,i)}const we=$({cast_:j$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n){const e={x:k(n,"x","clone","string_or_numeric")};return W.runKernel(Lu,e)}const Rr=$({clone_:Q$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xv(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ZE();const J$={buffer:ct,cast:we,clone:Rr,print:Xv};p$(J$);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(){q().set("PROD",!0)}function eU(){q().set("DEBUG",!0)}function tU(){q().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function nU(n){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function sU(){W.disposeVariables()}function Dt(){return W}function vd(){return W.memory()}function iU(n){return W.profile(n)}function Q(n,e){return W.tidy(n,e)}function nt(n){pa(n).forEach(e=>e.dispose())}function cn(n){return W.keep(n)}function rU(n){return W.time(n)}function aU(n){return W.setBackend(n)}function oU(){return W.ready()}function lU(){return W.backendName}function cU(n){W.removeBackend(n)}function uU(n){return W.findBackend(n)}function hU(n){return W.findBackendFactory(n)}function Hv(n,e,t=1){return W.registerBackend(n,e,t)}function la(){return W.backend}function dU(n,e){q().setPlatform(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(n,e){let t=k(n,"a","add"),s=k(e,"b","add");[t,s]=rn(t,s);const i={a:t,b:s};return W.runKernel(Ll,i)}const he=$({add_:pU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(n,e){let t=k(n,"a","floorDiv"),s=k(e,"b","floorDiv");[t,s]=rn(t,s);const i={a:t,b:s};return W.runKernel(Ru,i)}const U0=$({floorDiv_:fU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mU(n,e){let t=k(n,"a","div"),s=k(e,"b","div");if([t,s]=rn(t,s),t.dtype==="int32"&&s.dtype==="int32")return U0(t,s);const i={a:t,b:s},r={};return W.runKernel(Iu,i,r)}const We=$({div_:mU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gU(n,e){let t=k(n,"a","mul"),s=k(e,"b","mul");[t,s]=rn(t,s);const i={a:t,b:s};return W.runKernel($u,i)}const Z=$({mul_:gU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n){const e=k(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return W.runKernel(ep,t)}else{const t={x:e};return W.runKernel(Hd,t)}}const vn=$({abs_:yU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n){const e={x:k(n,"x","acos")};return W.runKernel(pu,e)}const Zv=$({acos_:bU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(n){const e={x:k(n,"x","acosh")};return W.runKernel(fu,e)}const Kv=$({acosh_:xU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(n,e=null,t=!1){const s={x:k(n,"x","all","bool")},i={axis:e,keepDims:t};return W.runKernel(Og,s,i)}const B0=$({all_:vU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n,e=null,t=!1){const s={x:k(n,"x","any","bool")},i={axis:e,keepDims:t};return W.runKernel(zg,s,i)}const wd=$({any_:wU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n,e=0){const t={x:k(n,"x","argMax")},s={axis:e};return W.runKernel(Kd,t,s)}const ml=$({argMax_:SU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _U(n,e=0){const t={x:k(n,"x","argMin")},s={axis:e};return W.runKernel(Yd,t,s)}const Yv=$({argMin_:_U});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(n){const e={x:k(n,"x","asin")};return W.runKernel(mu,e)}const jv=$({asin_:TU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(n){const e={x:k(n,"x","asinh")};return W.runKernel(gu,e)}const Qv=$({asinh_:IU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const e={x:k(n,"x","atan")};return W.runKernel(yu,e)}const Jv=$({atan_:CU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(n,e){let t=k(n,"a","atan2"),s=k(e,"b","atan2");[t,s]=rn(t,s);const i={a:t,b:s};return W.runKernel(xu,i)}const qv=$({atan2_:MU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(n){const e={x:k(n,"x","atanh")};return W.runKernel(bu,e)}const ew=$({atanh_:EU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yp(n,e,t,s,i="NHWC",r){const a=n[3],o=[...e,a],l=Ia(i);return $n(n,o,t,r,s,null,null,l)}function Ui(n,e,t,s,i,r,a="channelsLast"){const[o,l]=Sd(e);let c;if(a==="channelsLast")c=[o,l,n[3],n[3]];else if(a==="channelsFirst")c=[o,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return $n(n,c,t,s,i,r,!1,a)}function Ta(n,e,t,s,i,r,a="NDHWC"){const[o,l,c]=I1(e);let u,h;if(a==="NDHWC")h="channelsLast",u=[o,l,c,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",u=[o,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return bo(n,u,t,s,i,!1,h,r)}function $n(n,e,t,s,i,r,a=!1,o="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h]=n;else if(o==="channelsFirst")[l,h,c,u]=n;else throw new Error(`Unknown dataFormat ${o}`);const[d,p,,m]=e,[g,f]=Sd(t),[y,b]=Sd(s),x=Cc(d,y),v=Cc(p,b),{padInfo:w,outHeight:_,outWidth:T}=RU(i,c,u,g,f,x,v,r,o),C=a?m*h:m;let S;return o==="channelsFirst"?S=[l,C,_,T]:o==="channelsLast"&&(S=[l,_,T,C]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:u,inChannels:h,outHeight:_,outWidth:T,outChannels:C,padInfo:w,strideHeight:g,strideWidth:f,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:n,outShape:S,filterShape:e}}function bo(n,e,t,s,i,r=!1,a="channelsLast",o){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h,d]=n;else if(a==="channelsFirst")[l,d,c,u,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,m,g,,f]=e,[y,b,x]=I1(t),[v,w,_]=I1(s),T=Cc(p,v),C=Cc(m,w),S=Cc(g,_),{padInfo:M,outDepth:A,outHeight:P,outWidth:D}=AU(i,c,u,h,y,b,x,T,C,S,o),N=r?f*d:f;let L;return a==="channelsFirst"?L=[l,N,A,P,D]:a==="channelsLast"&&(L=[l,A,P,D,N]),{batchSize:l,dataFormat:a,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:A,outHeight:P,outWidth:D,outChannels:N,padInfo:M,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:m,filterWidth:g,effectiveFilterDepth:T,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:_,inShape:n,outShape:L,filterShape:e}}function kU(n,e,t,s,i){s==null&&(s=tw(n,e,t));const r=n[0],a=n[1],o=_d((r-e+2*s)/t+1,i),l=_d((a-e+2*s)/t+1,i);return[o,l]}function NU(n,e,t,s,i,r){i==null&&(i=tw(n,e[0],s[0]));const a=[0,0,0,t];for(let o=0;o<3;o++)n[o]+2*i>=e[o]&&(a[o]=_d((n[o]-e[o]+2*i)/s[o]+1,r));return a}function tw(n,e,t,s=1){const i=Cc(e,s);return Math.floor((n[0]*(t-1)-t+i)/2)}function Sd(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function I1(n){return typeof n=="number"?[n,n,n]:n}function Cc(n,e){return e<=1?n:n+(n-1)*(e-1)}function RU(n,e,t,s,i,r,a,o,l){let c,u,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const d=kU([e,t],r,s,n,o);u=d[0],h=d[1]}else if(n==="same"){u=Math.ceil(e/s),h=Math.ceil(t/i);const d=Math.max(0,(u-1)*s+r-e),p=Math.max(0,(h-1)*i+a-t),m=Math.floor(d/2),g=d-m,f=Math.floor(p/2),y=p-f;c={top:m,bottom:g,left:f,right:y,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-r+1)/s),h=Math.ceil((t-a+1)/i);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],m=l==="channelsLast"?n[2][0]:n[3][0],g=l==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:m,right:g,type:d===0&&p===0&&m===0&&g===0?"VALID":"EXPLICIT"},u=_d((e-r+d+p)/s+1,o),h=_d((t-a+m+g)/i+1,o)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:h}}function AU(n,e,t,s,i,r,a,o,l,c,u){let h,d,p,m;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=NU([e,t,s,1],[o,l,c],1,[i,r,a],n,u);d=g[0],p=g[1],m=g[2]}else if(n==="same"){d=Math.ceil(e/i),p=Math.ceil(t/r),m=Math.ceil(s/a);const g=(d-1)*i+o-e,f=(p-1)*r+l-t,y=(m-1)*a+c-s,b=Math.floor(g/2),x=g-b,v=Math.floor(f/2),w=f-v,_=Math.floor(y/2),T=y-_;h={top:v,bottom:w,left:_,right:T,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:m}}function _d(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function oo(n){const[e,t,s]=Sd(n);return e===1&&t===1&&s===1}function qn(n,e){return oo(n)||oo(e)}function gl(n){return Sd(n).every(e=>e>0)}function Ia(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function vs(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")E(dl(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(i=>{E(dl(i),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${i}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(n,e){const t={x:k(n,"x","reshape","string_or_numeric")},s={shape:e};return W.runKernel(Pp,t,s)}const K=$({reshape_:LU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(n,e,t,s,i){const r=k(n,"x","avgPool","float32"),a=1;E(qn(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let o=r,l=!1;r.rank===3&&(l=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]])),E(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),vs("avgPool",s,i);const c={x:o},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i};let h=W.runKernel(jd,c,u);return h=we(h,r.dtype),l?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const jp=$({avgPool_:PU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n,e,t,s,i,r="NDHWC"){const a=k(n,"x","avgPool3d","float32");let o=a,l=!1;a.rank===4&&(l=!0,o=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),E(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),E(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),vs("avgPool3d",s,i);const c={x:o},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i,dataFormat:r};let h=W.runKernel(Qd,c,u);return h=we(h,o.dtype),l?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const nw=$({avgPool3d_:DU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(n,e=0){E(n.length>=1,()=>"Pass at least one tensor to concat");const t=xd(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),t.length===1)return Rr(t[0]);const s=t,i={axis:e};return W.runKernel(tp,s,i)}const mn=$({concat_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(n,e,t=!1,s=!1){let i=k(n,"a","matMul"),r=k(e,"b","matMul");[i,r]=rn(i,r);const a={a:i,b:r},o={transposeA:t,transposeB:s};return W.runKernel(Jd,a,o)}const pt=$({matMul_:OU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n){const e={x:k(n,"x","sigmoid","float32")};return W.runKernel(qu,e)}const nr=$({sigmoid_:zU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(n,e,t){const s=k(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const i={x:s},r={begin:e,size:t};return W.runKernel(Gp,i,r)}const St=$({slice_:GU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(n){const e={x:k(n,"x","tanh","float32")};return W.runKernel(rh,e)}const yl=$({tanh_:VU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(n,e,t){const s=k(n,"x","batchToSpaceND"),i=e.reduce((o,l)=>o*l);E(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),E(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),E(s.shape[0]%i===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`);const r={x:s},a={blockShape:e,crops:t};return W.runKernel(qd,r,a)}const Qp=$({batchToSpaceND_:WU});function $U(n){let e;return n.rank===0||n.rank===1?e=K(n,[1,1,1,n.size]):n.rank===2?e=K(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(n,e,t,s,i,r){r==null&&(r=.001);const a=k(n,"x","batchNorm"),o=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm");let c;i!=null&&(c=k(i,"scale","batchNorm"));let u;s!=null&&(u=k(s,"offset","batchNorm")),E(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:$U(a),scale:c,offset:u,mean:o,variance:l},d={varianceEpsilon:r},p=W.runKernel(up,h,d);return K(p,a.shape)}const lh=$({batchNorm_:UU});function BU(n,e,t,s,i,r){const a=k(n,"x","batchNorm"),o=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm");let c;i!=null&&(c=k(i,"scale","batchNorm"));let u;return s!=null&&(u=k(s,"offset","batchNorm")),E(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),E(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),E(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&E(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),lh(a,o,l,u,c,r)}const sw=$({batchNorm2d_:BU});function XU(n,e,t,s,i,r){const a=k(n,"x","batchNorm"),o=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm");let c;i!=null&&(c=k(i,"scale","batchNorm"));let u;return s!=null&&(u=k(s,"offset","batchNorm")),E(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),E(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),E(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&E(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),lh(a,o,l,u,c,r)}const iw=$({batchNorm3d_:XU});function HU(n,e,t,s,i,r){const a=k(n,"x","batchNorm"),o=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm");let c;i!=null&&(c=k(i,"scale","batchNorm"));let u;return s!=null&&(u=k(s,"offset","batchNorm")),E(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),E(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),E(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&E(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),lh(a,o,l,u,c,r)}const rw=$({batchNorm4d_:HU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(n,e,t){const s=k(n,"x","bincount"),i=k(e,"weights","bincount");E(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),E(t>=0,()=>`size must be non-negative, but got ${t}.`),E(i.size===s.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${i.shape}.`);const r={x:s,weights:i},a={size:t};return W.runKernel(Wg,r,a)}const aw=$({bincount_:ZU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(n,e){let t=k(n,"broadcastTo","x");const s=t.shape;if(ii(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=K(t,l)}const i=t.shape,r=Array.from(e);for(let l=e.length-1;l>=0;l--)if(i[l]===e[l])r[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return Rr(t);const a={x:t},o={reps:r};return W.runKernel(ah,a,o)}const sl=$({broadcastTo_:KU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(n){const e={x:k(n,"x","ceil","float32")};return W.runKernel(wu,e)}const ow=$({ceil_:YU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dl(n,e,t){ii(n);const s={shape:n,value:e,dtype:t};return W.runKernel(s0,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(n,e,t){const s=k(n,"x","clipByValue");if(E(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Dl(s.shape,e,s.dtype);const i={x:s},r={clipValueMin:e,clipValueMax:t};return W.runKernel(Su,i,r)}const Ls=$({clipByValue_:jU});function QU(n){return mn(n,0)}const lw=$({concat1d_:QU});function JU(n,e){return mn(n,e)}const cw=$({concat2d_:JU});function qU(n,e){return mn(n,e)}const uw=$({concat3d_:qU});function eB(n,e){return mn(n,e)}const hw=$({concat4d_:eB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,e,t,s,i="NHWC",r=[1,1],a){const o=k(n,"x","conv2d","float32"),l=k(e,"filter","conv2d","float32");let c=o,u=!1;o.rank===3&&(u=!0,c=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),E(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),vs("conv2d",s,a);const h=i==="NHWC"?c.shape[3]:c.shape[1];E(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),E(qn(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),E(gl(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),E(gl(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:i,dilations:r,dimRoundingMode:a},m=W.runKernel(np,d,p);return u?K(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ma=$({conv2d_:tB});function nB(n,e,t,s,i="NWC",r=1,a){const o=k(n,"x","conv1d"),l=k(e,"filter","conv1d");let c=o,u=!1;o.rank===2&&(u=!0,c=K(o,[1,o.shape[0],o.shape[1]])),E(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),E(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),vs("conv1d",s,a),E(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),E(qn(t,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${r}'`),E(gl(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),E(gl(t),()=>"Error in conv1D: Stride should be larger than 0."),E(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=K(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=K(c,[c.shape[0],1,c.shape[1],c.shape[2]]),p=ma(d,h,[1,t],s,"NHWC",[1,r],a);return u?K(p,[p.shape[2],p.shape[3]]):K(p,[p.shape[0],p.shape[2],p.shape[3]])}const X0=$({conv1d_:nB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n,e,t,s,i,r="NHWC",a){E(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,l=e,c=!1;e.rank===3&&(c=!0,l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,n[0],n[1],n[2]]),E(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),E(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),E(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=r==="NHWC"?o[3]:o[1],h=r==="NHWC"?l.shape[3]:l.shape[1];E(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),E(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),vs("conv2dDerInput",i,a);const d={dy:l,filter:t},p={strides:s,pad:i,dataFormat:r,dimRoundingMode:a,inputShape:o},m=W.runKernel(sp,d,p);return c?K(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const dw=$({conv2DBackpropInput_:sB});function iB(n,e,t,s,i,r){const a=k(n,"x","conv2dTranspose"),o=k(e,"filter","conv2dTranspose");return dw(t,a,o,s,i,"NHWC",r)}const H0=$({conv2dTranspose_:iB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n,e,t,s,i="NDHWC",r=[1,1,1]){const a=k(n,"x","conv3d"),o=k(e,"filter","conv3d");let l=a,c=!1;a.rank===4&&(c=!0,l=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),E(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),E(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),E(qn(t,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),E(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`),E(gl(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),E(gl(t),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:l,filter:o},h={strides:t,pad:s,dataFormat:i,dilations:r},d=W.runKernel(ip,u,h);return c?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const pw=$({conv3d_:rB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n,e,t,s,i){E(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let r=n,a=e,o=!1;e.rank===4&&(o=!0,a=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const l=r[4],c=a.shape[4];E(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),E(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),E(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),E(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),E(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const u={dy:a,filter:t},h={pad:i,strides:s,inputShape:r},d=W.runKernel(Hg,u,h);return o?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const rk=$({conv3DBackpropInput_:aB});function oB(n,e,t,s,i){const r=k(n,"x","conv3dTranspose"),a=k(e,"filter","conv3dTranspose");return rk(t,r,a,s,i)}const fw=$({conv3dTranspose_:oB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n){const e={x:k(n,"x","cos","float32")};return W.runKernel(_u,e)}const Jp=$({cos_:lB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n){const e={x:k(n,"x","cosh","float32")};return W.runKernel(Tu,e)}const Z0=$({cosh_:cB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n,e=0,t=!1,s=!1){const i={x:k(n,"x","cumprod")},r={axis:e,exclusive:t,reverse:s};return W.runKernel(Zg,i,r)}const Td=$({cumprod_:uB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n,e=0,t=!1,s=!1){const i={x:k(n,"x","cumsum")},r={axis:e,exclusive:t,reverse:s};return W.runKernel(rp,i,r)}const K0=$({cumsum_:hB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n,e,t,s=!1){const i=k(n,"x","denseBincount"),r=k(e,"weights","denseBincount");E(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),E(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),E(t>=0,()=>`size must be non-negative, but got ${t}.`),E(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const a={x:i,weights:r},o={size:t,binaryOutput:s};return W.runKernel(Yg,a,o)}const jm=$({denseBincount_:dB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n,e,t="NHWC"){const s=k(n,"x","depthToSpace","float32"),i=t==="NHWC"?s.shape[1]:s.shape[2],r=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];E(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),E(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e}  for depthToSpace with input shape
    ${s.shape}`),E(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),E(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const o={x:s},l={blockSize:e,dataFormat:t};return W.runKernel(jg,o,l)}const mw=$({depthToSpace_:pB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n,e,t,s,i="NHWC",r=[1,1],a){const o=k(n,"x","depthwiseConv2d","float32"),l=k(e,"filter","depthwiseConv2d","float32");let c=o,u=!1;o.rank===3&&(u=!0,c=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),E(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?c.shape[3]:c.shape[1];E(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),vs("depthwiseConv2d",s,a);const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:i,dilations:r,dimRoundingMode:a},m=W.runKernel(ap,d,p);return u?K(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ch=$({depthwiseConv2d_:fB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n,e,t,s,i=[1,1],r="NHWC"){const a=k(n,"x","dilation2d"),o=k(e,"filter","dilation2d");E(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),E(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),E(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=a,c=!1;a.rank===3&&(l=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),E(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const u={x:l,filter:o},h={strides:t,pad:s,dilations:i},d=W.runKernel(op,u,h);return c?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const gw=$({dilation2d_:mB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bl(n,e){const t=n.length,s=[];for(let i=0;i<t;i++){const r=t-1-i,a=n[r]||1;(e[e.length-1-i]||1)>1&&a===1&&s.unshift(r)}return s}function Tn(n,e){const t=[];for(let s=0;s<e.length;s++){const i=n[n.length-s-1],r=e.length-s-1,a=e[r];(i==null||i===1&&a>1)&&t.unshift(r)}return t}function st(n,e){const t=[],s=Math.max(n.length,e.length);for(let i=0;i<s;i++){let r=n[n.length-i-1];r==null&&(r=1);let a=e[e.length-i-1];if(a==null&&(a=1),r===1)t.unshift(a);else if(a===1)t.unshift(r);else if(r!==a){const o=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(o)}else t.unshift(r)}return t}const gB=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:st,getBroadcastDims:bl,getReductionAxes:Tn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n,e){let t=k(n,"a","equal","string_or_numeric"),s=k(e,"b","equal","string_or_numeric");[t,s]=rn(t,s),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(lp,i)}const Js=$({equal_:yB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,e,t){const s=k(e,"a","where"),i=k(t,"b","where"),r=k(n,"condition","where","bool"),a=st(st(r.shape,s.shape),i.shape),o=sl(r,a),l=sl(s,a),c=sl(i,a),u={condition:o,t:l,e:c};return W.runKernel(zp,u)}const os=$({where_:bB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n){const e={x:k(n,"x","zerosLike")};return W.runKernel(Hp,e)}const _t=$({zerosLike_:xB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,e){let t=k(n,"a","div"),s=k(e,"b","div");[t,s]=rn(t,s);const i=We(t,s),r=_t(i),a=Js(s,r);return os(a,r,i)}const yw=$({divNoNan_:vB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n,e){const t=k(n,"t1","dot"),s=k(e,"t2","dot");E((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const i=t.rank===1?t.size:t.shape[1],r=s.rank===1?s.size:s.shape[0];if(E(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),t.rank===1&&s.rank===1){const a=K(t,[1,-1]),o=K(s,[-1,1]),l=pt(a,o);return K(l,[])}else if(t.rank===1&&s.rank===2){const a=K(t,[1,-1]),o=K(s,[s.shape[0],s.shape[1]]),l=pt(a,o);return K(l,[l.size])}else if(t.rank===2&&s.rank===1){const a=K(s,[-1,1]),o=pt(t,a);return K(o,[o.size])}else{const a=K(s,[s.shape[0],s.shape[1]]);return pt(t,a)}}const bw=$({dot_:wB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(n){const e={x:k(n,"x","elu","float32")};return W.runKernel(Cu,e)}const uh=$({elu_:SB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n){let e=k(n,"x","erf");E(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=we(e,"float32"));const t={x:e};return W.runKernel(Mu,t)}const xw=$({erf_:_B});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function ak(n,e,t){const s=n.length+e.length,i=[];let r=0,a=0;for(let o=0;o<s;o++)t.indexOf(o)===-1?i.push(n[r++]):i.push(e[a++]);return i}function Un(n,e){const t=[],s=n.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&t.push(n[r]);const i=e.map(r=>n[r]);return[t,i]}function gn(n,e){const t=e.map(s=>1);return ak(n,t,e)}function es(n,e,t){E(vw(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function an(n,e){if(vw(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function xo(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function yn(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n,e=null,t=!1){const s={x:k(n,"x","max")},i={reductionIndices:e,keepDims:t};return W.runKernel(vp,s,i)}const mi=$({max_:TB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n,e=null,t=!1){const s={x:k(n,"x","min")},i={axis:e,keepDims:t};return W.runKernel(Tp,s,i)}const Vc=$({min_:IB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n,e){let t=k(n,"base","pow"),s=k(e,"exp","pow");[t,s]=rn(t,s);const i={a:t,b:s};return W.runKernel(Uu,i)}const ga=$({pow_:CB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n,e){if((On(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&On(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return yo(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n){const e={x:k(n,"x","sqrt","float32")};return W.runKernel(th,e)}const jn=$({sqrt_:MB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(n){const e=k(n,"x","square"),t={};return W.runKernel("Square",{x:e},t)}const Pt=$({square_:EB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n,e=null,t=!1){let s=k(n,"x","sum");s.dtype==="bool"&&(s=we(s,"int32"));const i={x:s},r={axis:e,keepDims:t};return W.runKernel(Vp,i,r)}const Oe=$({sum_:kB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,e="euclidean",t=null,s=!1){n=k(n,"x","norm");const i=ok(n,e,t);let r=i.shape;if(s){const a=ft(t,n.shape);r=gn(i.shape,a)}return K(i,r)}function ok(n,e,t=null){if(n.rank===0)return vn(n);if(n.rank!==1&&t===null)return ok(K(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Oe(vn(n),t);if(e===1/0)return mi(vn(n),t);if(e===-1/0)return Vc(vn(n),t);if(e==="euclidean"||e===2)return jn(Oe(ga(vn(n),Ze(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return mi(Oe(vn(n),t[0]),t[1]-1);if(e===1/0)return mi(Oe(vn(n),t[1]),t[0]);if(e===-1/0)return Vc(Oe(vn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return jn(Oe(Pt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const hh=$({norm_:NB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n,e=null,t=!1){return hh(n,"euclidean",e,t)}const ww=$({euclideanNorm_:RB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const e={x:k(n,"x","exp")};return W.runKernel(Eu,e)}const qs=$({exp_:AB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n,e=0){const t=k(n,"x","expandDims","string_or_numeric");E(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},i={dim:e};return W.runKernel(cp,s,i)}const ss=$({expandDims_:LB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n){const e={x:k(n,"x","expm1")};return W.runKernel(ku,e)}const Sw=$({expm1_:PB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n,e){const t=k(n,"x","tile","string_or_numeric");E(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},i={reps:e};return W.runKernel(ah,s,i)}const di=$({tile_:DB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n,e,t,s="float32"){e==null&&(e=n);const i=ct([n,e],s),r=n<=e?n:e;for(let o=0;o<r;++o)i.set(1,o,o);const a=K(i.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return di(ss(a,0),[t[0],1,1]);if(t.length===2)return di(ss(ss(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return di(ss(ss(ss(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Y0=$({eye_:FB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){const e={x:k(n,"x","floor","float32")};return W.runKernel(Nu,e)}const dh=$({floor_:OB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n,e,t=0,s=0){const i=k(n,"x","gather"),r=k(e,"indices","gather","int32"),a={x:i,indices:r},o={axis:t,batchDims:s};return W.runKernel(hp,a,o)}const ph=$({gather_:zB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n,e){let t=k(n,"a","greater","string_or_numeric"),s=k(e,"b","greater","string_or_numeric");[t,s]=rn(t,s),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(dp,i)}const ws=$({greater_:GB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n,e){let t=k(n,"a","greaterEqual","string_or_numeric"),s=k(e,"b","greaterEqual","string_or_numeric");[t,s]=rn(t,s),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(Au,i)}const Ca=$({greaterEqual_:VB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const e={input:k(n,"input","imag")};return W.runKernel(o0,e)}const qp=$({imag_:WB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const e={x:k(n,"x","isFinite")};return W.runKernel(Pu,e)}const _w=$({isFinite_:$B});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n){const e={x:k(n,"x","isInf")};return W.runKernel(Du,e)}const Tw=$({isInf_:UB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const e={x:k(n,"x","isNaN")};return W.runKernel(Fu,e)}const Iw=$({isNaN_:BB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,e=.2){const t={x:k(n,"x","leakyRelu")},s={alpha:e};return W.runKernel(pp,t,s)}const ef=$({leakyRelu_:XB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n,e){let t=k(n,"a","less","string_or_numeric"),s=k(e,"b","less","string_or_numeric");[t,s]=rn(t,s),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(fp,i)}const j0=$({less_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,e){let t=k(n,"a","lessEqual","string_or_numeric"),s=k(e,"b","lessEqual","string_or_numeric");[t,s]=rn(t,s),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(mp,i)}const vo=$({lessEqual_:ZB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n,e=5,t=1,s=1,i=.5){const r=k(n,"x","localResponseNormalization");E(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),E(dl(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=r,o=!1;r.rank===3&&(o=!0,a=K(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:a},c={depthRadius:e,bias:t,alpha:s,beta:i},u=W.runKernel(xp,l,c);return o?K(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Cw=$({localResponseNormalization_:KB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const e={x:k(n,"x","log","float32")};return W.runKernel(Ou,e)}const ei=$({log_:YB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n){const e={x:k(n,"x","log1p")};return W.runKernel(zu,e)}const tf=$({log1p_:jB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n){return E(ao(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=k(e,"x","tf.grad","string_or_numeric"),i=t!=null?k(t,"dy","tf.grad"):null;return W.tidy(()=>{const{value:r,grads:a}=W.gradients(()=>n(s),[s],i);return i!=null&&Jn(r.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Q0(a),a[0]})}}function JB(n){return E(ao(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{E(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=xd(e,"args","tf.grads","string_or_numeric"),i=t!=null?k(t,"dy","tf.grads"):null;return W.tidy(()=>{const{value:r,grads:a}=W.gradients(()=>n(...s),s,i);return i!=null&&Jn(r.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Q0(a),a})}}function qB(n){return E(ao(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{E(e instanceof Ct,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),E(t==null||t instanceof Ct,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:i}=W.gradients(()=>n(e),[e],t);return Q0(s),{grad:s[0],value:i}}}function eX(n){return E(ao(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{E(Array.isArray(e)&&e.every(i=>i instanceof Ct),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),E(t==null||t instanceof Ct,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=W.gradients(()=>n(...e),e,t);return t!=null&&Jn(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Q0(s.grads),s}}function lk(n,e){E(ao(n),()=>"The f passed in variableGrads(f) must be a function"),E(e==null||Array.isArray(e)&&e.every(c=>c instanceof bd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in W.registeredVariables)e.push(W.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,i=e.length;e=e.filter(c=>c.trainable),E(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:a,grads:o}=W.gradients(n,e,null,r);E(o.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((c,u)=>{o[u]!=null&&(l[c.name]=o[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:a,grads:l}}function zr(n){return W.customGrad(n)}function Q0(n){if(n.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tX(n){const e={x:k(n,"x","neg")};return W.runKernel(Cp,e)}const Kt=$({neg_:tX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nX(n){const e={x:k(n,"x","softplus")};return W.runKernel(eh,e)}const Fl=$({softplus_:nX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sX(n){const e=k(n,"x","logSigmoid");return zr(t=>({value:Kt(Fl(Kt(t))),gradFunc:s=>Z(s,nr(Kt(t)))}))(e)}const Mw=$({logSigmoid_:sX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(n,e){let t=k(n,"a","sub"),s=k(e,"b","sub");[t,s]=rn(t,s);const i={a:t,b:s};return W.runKernel(sh,i)}const De=$({sub_:iX});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(n,e=-1){const t=k(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return zr((s,i)=>{const r=mi(s,e,!0),a=De(s,r),o=De(we(a,"float32"),ei(Oe(qs(a),e,!0)));return i([o]),{value:o,gradFunc:(l,c)=>{const[u]=c,h=!0,d=qs(u);return De(l,Z(Oe(l,e,h),d))}}})(t)}const J0=$({logSoftmax_:rX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aX(n,e=null,t=!1){const s=k(n,"x","logSumExp"),i=ft(e,s.shape),r=mi(s,i,!0),a=De(s,r),o=qs(a),l=Oe(o,i),c=ei(l),u=he(K(r,c.shape),c);if(t){const h=gn(u.shape,i);return K(u,h)}return u}const q0=$({logSumExp_:aX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n,e){const t=k(n,"a","logicalAnd","bool"),s=k(e,"b","logicalAnd","bool");st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(gp,i)}const Vi=$({logicalAnd_:oX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(n){const e={x:k(n,"x","logicalNot","bool")};return W.runKernel(yp,e)}const nf=$({logicalNot_:lX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cX(n,e){const t=k(n,"a","logicalOr","bool"),s=k(e,"b","logicalOr","bool");st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(bp,i)}const ey=$({logicalOr_:cX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(n,e){const t=k(n,"a","logicalXor","bool"),s=k(e,"b","logicalXor","bool");return st(t.shape,s.shape),Vi(ey(n,e),nf(Vi(n,e)))}const Ew=$({logicalXor_:uX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hX(n,e,t,s,i){const r=k(n,"x","maxPool"),a=1;let o=r,l=!1;r.rank===3&&(l=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]])),E(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),E(qn(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),vs("maxPool",s,i);const c={x:o},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i},h=W.runKernel(wp,c,u);return l?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const sf=$({maxPool_:hX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n,e=[1,1,1],t,s,i,r="NDHWC"){const a=k(n,"x","maxPool3d");let o=a,l=!1;a.rank===4&&(l=!0,o=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),E(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),vs("maxPool3d",s,i);const c={x:o},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i,dataFormat:r},h=W.runKernel(Sp,c,u);return l?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const kw=$({maxPool3d_:dX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n,e){let t=k(n,"a","maximum"),s=k(e,"b","maximum");[t,s]=rn(t,s),t.dtype==="bool"&&(t=we(t,"int32"),s=we(s,"int32")),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(Gu,i)}const Wr=$({maximum_:pX});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fX(n,e=null,t=!1){const s={x:k(n,"x","mean")},i={axis:e,keepDims:t};return W.runKernel(_p,s,i)}const nn=$({mean_:fX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(n,e="float32"){if(ii(n),e==="complex64"){const s=Sn(n,"float32"),i=Sn(n,"float32");return fa(s,i)}const t=Yn(oe(n),e);return W.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(n,e="float32"){if(ii(n),e==="complex64"){const s=Hs(n,"float32"),i=Sn(n,"float32");return fa(s,i)}const t=Fg(oe(n),e);return W.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mX(n,e){let t=k(n,"a","minimum"),s=k(e,"b","minimum");[t,s]=rn(t,s),t.dtype==="bool"&&(t=we(t,"int32"),s=we(s,"int32")),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(Vu,i)}const fh=$({minimum_:mX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gX(n,e,t){E(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=k(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const i=t==="reflect"?1:0;for(let o=0;o<s.rank;o++)E(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),E(e[o][0]>=0&&e[o][0]<=s.shape[o]-i&&e[o][1]>=0&&e[o][1]<=s.shape[o]-i,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-i} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:t},a={x:s};return W.runKernel(Ip,a,r)}const Nw=$({mirrorPad_:gX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yX(n,e){let t=k(n,"a","mod"),s=k(e,"b","mod");[t,s]=rn(t,s);const i={a:t,b:s};return W.runKernel(Wu,i)}const Rw=$({mod_:yX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bX(n,e=null,t=!1){n=k(n,"x","moments");const s=ft(e,n.shape),i=nn(n,s,t);let r=i.shape;t||(r=gn(i.shape,s));const a=Pt(De(we(n,"float32"),K(i,r))),o=nn(a,s,t);return{mean:i,variance:o}}const rf=$({moments_:bX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(n,e){let t=k(n,"a","notEqual","string_or_numeric"),s=k(e,"b","notEqual","string_or_numeric");[t,s]=rn(t,s),st(t.shape,s.shape);const i={a:t,b:s};return W.runKernel(Mp,i)}const xl=$({notEqual_:xX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n,e,t=1,s=0,i="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const r={indices:k(n,"indices","oneHot","int32")},a={dtype:i,depth:e,onValue:t,offValue:s};return W.runKernel(kp,r,a)}const Wc=$({oneHot_:vX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wX(n){const e={x:k(n,"x","onesLike")};return W.runKernel(Ep,e)}const ti=$({onesLike_:wX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SX(n,e,t=0){const s=k(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:t},r={x:s};return W.runKernel(Rp,r,i)}const Ma=$({pad_:SX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _X(n,e,t){const s=k(n,"x","spaceToBatchND");E(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),E(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),E(s.shape.reduce((a,o,l)=>l>0&&l<=e.length?a&&(o+t[l-1][0]+t[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const i={x:s},r={blockShape:e,paddings:t};return W.runKernel(Wp,i,r)}const af=$({spaceToBatchND_:_X});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TX(n,e,t,s,i,r,a){i==null&&(i=[1,1]),r==null&&(r=1),s===0&&(s="valid");const o=k(n,"x","maxPool");let l=o,c=!1;o.rank===3&&(c=!0,l=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(qn(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const u=Ui(l.shape,e,r,i,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=CX([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[m,g]=IX([u.inHeight,u.inWidth],h,d),f=p?s:"valid",y=p?l:af(l,h,m),b=(t==="avg"?()=>jp(y,e,r,f,a):()=>sf(y,e,r,f,a))(),x=p?b:Qp(b,h,g);return c?K(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function IX(n,e,t){const s=t.map(u=>u[0]),i=t.map(u=>u[1]),r=n.concat(s,i),a=e.map((u,h)=>(u-r[h]%u)%u),o=i.map((u,h)=>u+a[h]),l=e.map((u,h)=>[s[h],o[h]]),c=e.map((u,h)=>[0,a[h]]);return[l,c]}function CX(n,e){const t=n.map((r,a)=>r+(r-1)*(e[a]-1)).map(r=>r-1),s=t.map(r=>Math.floor(r/2)),i=t.map((r,a)=>r-s[a]);return t.map((r,a)=>[s[a],i[a]])}const Aw=$({pool_:TX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MX(n,e){const t=k(n,"x","prelu"),s=k(e,"alpha","prelu"),i={x:t,alpha:s};return W.runKernel(Ap,i)}const of=$({prelu_:MX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n,e=null,t=!1){let s=k(n,"x","prod");s.dtype==="bool"&&(s=we(s,"int32"));const i={x:s},r={axis:e,keepDims:t};return W.runKernel(Lp,i,r)}const Lw=$({prod_:EX});var ck={exports:{}};(function(n){(function(e,t,s){function i(l){var c=this,u=o();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function a(l,c){var u=new i(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function o(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.alea=a})(Nl,n,!1)})(ck);var kX=ck.exports,uk={exports:{}};(function(n){(function(e,t,s){function i(o){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},o===(o|0)?l.x=o:c+=o;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function a(o,l){var c=new i(o),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor128=a})(Nl,n,!1)})(uk);var NX=uk.exports,hk={exports:{}};(function(n){(function(e,t,s){function i(o){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:c+=o;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function a(o,l){var c=new i(o),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorwow=a})(Nl,n,!1)})(hk);var RX=hk.exports,dk={exports:{}};(function(n){(function(e,t,s){function i(o){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,o)}function r(o,l){return l.x=o.x.slice(),l.i=o.i,l}function a(o,l){o==null&&(o=+new Date);var c=new i(o),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorshift7=a})(Nl,n,!1)})(dk);var AX=dk.exports,pk={exports:{}};(function(n){(function(e,t,s){function i(o){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,m;return l.w=u=u+1640531527|0,m=h[d+34&127],p=h[d=d+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,m=h[d]=m^p,l.i=d,m+(u^u>>>16)|0};function c(u,h){var d,p,m,g,f,y=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),m=0,g=-32;g<b;++g)h&&(p^=h.charCodeAt((g+32)%h.length)),g===0&&(f=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,g>=0&&(f=f+1640531527|0,d=y[g&127]^=p+f,m=d==0?m+1:0);for(m>=128&&(y[(h&&h.length||0)&127]=-1),m=127,g=4*128;g>0;--g)p=y[m+34&127],d=y[m=m+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[m]=p^d;u.w=f,u.X=y,u.i=m}c(l,o)}function r(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function a(o,l){o==null&&(o=+new Date);var c=new i(o),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor4096=a})(Nl,n,!1)})(pk);var LX=pk.exports,fk={exports:{}};(function(n){(function(e,t,s){function i(o){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,m=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^m,m=m-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^m,l.a=m-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):c+=o;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function a(o,l){var c=new i(o),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.tychei=a})(Nl,n,!1)})(fk);var PX=fk.exports,mk={exports:{}};const DX={},FX=Object.freeze(Object.defineProperty({__proto__:null,default:DX},Symbol.toStringTag,{value:"Module"})),OX=SW(FX);(function(n){(function(e,t,s){var i=256,r=6,a=52,o="random",l=s.pow(i,r),c=s.pow(2,a),u=c*2,h=i-1,d;function p(v,w,_){var T=[];w=w==!0?{entropy:!0}:w||{};var C=y(f(w.entropy?[v,x(t)]:v??b(),3),T),S=new m(T),M=function(){for(var A=S.g(r),P=l,D=0;A<c;)A=(A+D)*i,P*=i,D=S.g(1);for(;A>=u;)A/=2,P/=2,D>>>=1;return(A+D)/P};return M.int32=function(){return S.g(4)|0},M.quick=function(){return S.g(4)/4294967296},M.double=M,y(x(S.S),t),(w.pass||_||function(A,P,D,N){return N&&(N.S&&g(N,S),A.state=function(){return g(S,{})}),D?(s[o]=A,P):A})(M,C,"global"in w?w.global:this==s,w.state)}function m(v){var w,_=v.length,T=this,C=0,S=T.i=T.j=0,M=T.S=[];for(_||(v=[_++]);C<i;)M[C]=C++;for(C=0;C<i;C++)M[C]=M[S=h&S+v[C%_]+(w=M[C])],M[S]=w;(T.g=function(A){for(var P,D=0,N=T.i,L=T.j,G=T.S;A--;)P=G[N=h&N+1],D=D*i+G[h&(G[N]=G[L=h&L+P])+(G[L]=P)];return T.i=N,T.j=L,D})(i)}function g(v,w){return w.i=v.i,w.j=v.j,w.S=v.S.slice(),w}function f(v,w){var _=[],T=typeof v,C;if(w&&T=="object")for(C in v)try{_.push(f(v[C],w-1))}catch{}return _.length?_:T=="string"?v:v+"\0"}function y(v,w){for(var _=v+"",T,C=0;C<_.length;)w[h&C]=h&(T^=w[h&C]*19)+_.charCodeAt(C++);return x(w)}function b(){try{var v;return d&&(v=d.randomBytes)?v=v(i):(v=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(v)),x(v)}catch{var w=e.navigator,_=w&&w.plugins;return[+new Date,e,_,e.screen,x(t)]}}function x(v){return String.fromCharCode.apply(0,v)}if(y(s.random(),t),n.exports){n.exports=p;try{d=OX}catch{}}else s["seed"+o]=p})(typeof self<"u"?self:Nl,[],Math)})(mk);var zX=mk.exports,GX=kX,VX=NX,WX=RX,$X=AX,UX=LX,BX=PX,Ol=zX;Ol.alea=GX;Ol.xor128=VX;Ol.xorwow=WX;Ol.xorshift7=$X;Ol.xor4096=UX;Ol.tychei=BX;var mh=Ol;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pw{constructor(e,t,s,i,r){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=r||Math.random();this.random=mh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let e,t,s=!1;for(;!s;){let i,r,a;do i=2*this.random()-1,r=2*this.random()-1,a=i*i+r*r;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*i*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class XX{constructor(e,t,s,i){this.alpha=e,this.beta=1/t,this.dtype=s;const r=i||Math.random();this.randu=mh.alea(r.toString()),this.randn=new Pw(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,i,r,a;for(;;){do i=this.randn.nextValue(),a=1+this.c*i;while(a<=0);if(a*=a*a,e=i*i,t=1-.331*e*e,s=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class HX{constructor(e=0,t=1,s,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=mh.alea(i)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZX(n,e=0,t=1,s,i){if(ii(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new Pw(e,t,s,!1,i),a=ct(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=r.nextValue();return a.toTensor()}const ty=$({randomNormal_:ZX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KX(n,e=0,t=1,s="float32",i){ii(n);const r=ct(n,s),a=new HX(e,t,null,i);for(let o=0;o<r.values.length;o++)r.values[o]=a.nextValue();return r.toTensor()}const gh=$({randomUniform_:KX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vl(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const i={start:n,stop:e,step:t,dtype:s};return W.runKernel(v0,{},i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(n){const e={input:k(n,"input","real")};return W.runKernel(w0,e)}const $c=$({real_:YX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jX(n){const e={x:k(n,"x","reciprocal")};return W.runKernel(Bu,e)}const Dw=$({reciprocal_:jX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(n){const e={x:k(n,"x","relu")};return W.runKernel(Xu,e)}const hr=$({relu_:QX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JX(n){const e={x:k(n,"x","relu6")};return W.runKernel(Hu,e)}const ny=$({relu6_:JX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qX(n,e){const t={x:k(n,"x","reverse")},s={dims:e};return W.runKernel(Op,t,s)}const bi=$({reverse_:qX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n){const e={x:k(n,"x","round")};return W.runKernel(Zu,e)}const sy=$({round_:eH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(n){const e={x:k(n,"x","rsqrt","float32")};return W.runKernel(Ku,e)}const iy=$({rsqrt_:tH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(n){const e={x:k(n,"x","selu")};return W.runKernel(Yu,e)}const ry=$({selu_:nH});function sH(n,e,t,s,i,r=[1,1],a="NHWC"){const o=k(n,"x","separableConv2d"),l=k(e,"depthwiseFilter","separableConv2d"),c=k(t,"pointwiseFilter","separableConv2d");let u=o,h=!1;if(o.rank===3&&(h=!0,u=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),E(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),E(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),E(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),E(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],p=l.shape[3];E(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const m=ch(u,l,s,i,a,r),g=ma(m,c,1,"valid",a);return h?K(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const ay=$({separableConv2d_:sH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(n){const e={x:k(n,"x","sign")};return W.runKernel(Ju,e)}const Fw=$({sign_:iH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n){const e={x:k(n,"x","sin","float32")};return W.runKernel(ju,e)}const oy=$({sin_:rH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(n){const e={x:k(n,"x","sinh")};return W.runKernel(Qu,e)}const ly=$({sinh_:aH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(n,e,t){const s=k(n,"x","slice1d");return E(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),St(s,[e],[t])}const lf=$({slice1d_:oH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(n,e,t){const s=k(n,"x","slice2d");return E(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),St(s,e,t)}const cy=$({slice2d_:lH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(n,e,t){const s=k(n,"x","slice3d");return E(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),St(s,e,t)}const cf=$({slice3d_:cH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(n,e,t){const s=k(n,"x","slice4d");return E(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),St(s,e,t)}const Uc=$({slice4d_:uH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(n,e=-1){const t=k(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},i={dim:e};return W.runKernel(Up,s,i)}const uf=$({softmax_:hH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(n){E(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return W.runKernel(n0,e)}const hf=$({fft_:dH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(n){E(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return W.runKernel(a0,e)}const Bc=$({ifft_:pH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const i=K(n,[t,e]);s=Bc(i)}else{const i=[t,2*(e-1)],r=K($c(n),[t,e]),a=K(qp(n),[t,e]),o=bi(St(r,[0,1],[t,e-2]),1),l=Z(bi(St(a,[0,1],[t,e-2]),1),Ze(-1)),c=mn([r,o],1),u=mn([a,l],1),h=K(fa(c,u),[i[0],i[1]]);s=Bc(h)}if(s=$c(s),n.rank===3&&n.shape[0]!==0){const i=s,r=n.shape[0];s=K(s,[r,s.shape[0]/r,s.shape[1]]),i.dispose()}return s}const uy=$({irfft_:fH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(n,e,t=0){const s={x:k(n,"x","split")},i={numOrSizeSplits:e,axis:t};return W.runKernel($p,s,i)}const Rs=$({split_:mH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(n,e){E(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let i;if(e!=null&&e<t){const m=n.shape.map(f=>0),g=n.shape.map(f=>f);g[n.shape.length-1]=e,i=St(n,m,g),t=e}else if(e!=null&&e>t){const m=n.shape.map(g=>g);m[n.shape.length-1]=e-t,i=mn([n,Sn(m)],n.shape.length-1),t=e}else i=n;const r=_t(i),a=K(fa(i,r),[s,t]),o=hf(a),l=Math.floor(t/2)+1,c=$c(o),u=qp(o),h=Rs(c,[l,t-l],c.shape.length-1),d=Rs(u,[l,t-l],u.shape.length-1),p=i.shape.slice();return p[i.shape.length-1]=l,K(fa(h[0],d[0]),p)}const df=$({rfft_:gH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(n,e){let t=k(n,"a","squaredDifference"),s=k(e,"b","squaredDifference");[t,s]=rn(t,s),st(t.shape,s.shape);const i={a:t,b:s},r={};return W.runKernel(nh,i,r)}const hy=$({squaredDifference_:yH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(n,e){const t=k(n,"x","squeeze","string_or_numeric");return K(t,Sa(t.shape,e).newShape)}const wo=$({squeeze_:bH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(n,e=0){const t=xd(n,"tensors","stack","string_or_numeric");E(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&E(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,i={axis:e};return W.runKernel(Np,s,i)}const bs=$({stack_:xH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n,e=0){const t={x:k(n,"x","step")},s={alpha:e};return W.runKernel(oh,t,s)}const zl=$({step_:vH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n,e,t,s,i=0,r=0,a=0,o=0,l=0){const c={x:k(n,"x","stridedSlice","string_or_numeric")},u={begin:e,end:t,strides:s,beginMask:i,endMask:r,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return W.runKernel(A0,c,u)}const Ow=$({stridedSlice_:wH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(n){const e={x:k(n,"x","tan","float32")};return W.runKernel(ih,e)}const zw=$({tan_:SH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(n,e){Rl(n);const t=Or(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return yo(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qa(n,e,t){if(Rl(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Or(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return yo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(n,e,t){if(Rl(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Or(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return yo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(n,e=1,t=!0){const s=k(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const r={x:s},a={k:e,sorted:t},[o,l]=W.runKernel(F0,r,a);return{values:o,indices:l}}const Vw=$({topk_:_H});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(n,e=0,t=1,s,i){if(ii(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Pw(e,t,s,!0,i),a=ct(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=r.nextValue();return a.toTensor()}const dy=$({truncatedNormal_:TH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n,e=0){const t=k(n,"x","unique","string_or_numeric");E(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},i={axis:e},[r,a]=W.runKernel(z0,s,i);return{values:r,indices:a}}const Ww=$({unique_:IH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(n,e,t){const s=k(n,"x","unsortedSegmentSum"),i=k(e,"segmentIds","unsortedSegmentSum","int32");E(dl(t),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:i},a={numSegments:t};return W.runKernel(Xp,r,a)}const py=$({unsortedSegmentSum_:CH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(n,e=0){const t=k(n,"x","unstack","string_or_numeric");E(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},i={axis:e};return W.runKernel(Bp,s,i)}const xi=$({unstack_:MH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $w(n,e=!0,t,s){return W.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fy(n,e){const t=[];for(let r=0;r<e.length;r++)e[r]&&t.push(r);const s=ct(n,"int32"),i=ct([t.length,n.length],"int32");for(let r=0;r<t.length;r++){const a=s.indexToLoc(t[r]),o=r*n.length;i.values.set(a,o)}return i.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n,e,t){const s=k(n,"x","transpose");if(e==null&&(e=s.shape.map((a,o)=>o).reverse()),E(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{E(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const i={x:s},r={perm:e};return s.dtype==="complex64"?Q(()=>{let a=$c(s),o=qp(s);return a=W.runKernel(nl,{x:a},r),o=W.runKernel(nl,{x:o},r),t&&(o=Kt(o)),fa(a,o)}):W.runKernel(nl,i,r)}const bt=$({transpose_:EH});function Uw(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${i}.`;if(t.rank<i)throw new Error(r+` update.rank < ${i}. `);if(n.length<s+(t.rank-i))throw new Error(r+` Output shape length < ${s+(t.rank-i)}`);if(t.rank!==i+n.length-s)throw new Error(r+` update.rank != ${i+n.length-s}`);for(let a=0;a<i;++a)if(t.shape[a]!==e.shape[a])throw new Error(r+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-i;++a)if(t.shape[a+i]!==n[a+s])throw new Error(r+` updates.shape[${a+i}] (${t.shape[a+i]}) != shape[${a+i}] (${n[a+i]})`)}function Bw(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Uw(t,e,n)}function yh(n,e,t){const s=e.shape.length,i=s>1?e.shape[s-1]:1,r=t.length;let a=1;for(let h=i;h<r;++h)a*=t[h];const o=i<1?1:i,l=oe(e.shape)/o,c=[...Xe(t.slice(0,i)),1],u=oe(t);return{sliceRank:i,numUpdates:l,sliceSize:a,strides:c,outputSize:u}}const kH=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:yh,validateInput:Bw,validateUpdateShape:Uw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n,e){if(e==null)return n.shape.slice();if(vt(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(n,e,t,s){const i=k(n,"x","dropout");if(E(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),E(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Ct?i.clone():i;const r=NH(i,t),a=1-e,o=We(dh(he(gh(r,0,1,"float32",s),a)),a);return Z(i,o)}const Xw=$({dropout_:RH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function my(n,e,t){const s=1-n%2,i=new Float32Array(n);for(let r=0;r<n;++r){const a=2*Math.PI*r/(n+s-1);i[r]=e-t*Math.cos(a)}return as(i,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(n,e,t,s,i,r="NHWC",a){let o=n;n.rank===3&&(o=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]])),E(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),E(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),E(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=r==="NHWC"?o.shape[3]:o.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];E(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),E(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),vs("conv2dDerFilter",i,a);const h={x:o,dy:l},d={strides:s,pad:i,dataFormat:r,dimRoundingMode:a,filterShape:t};return W.runKernel(Bg,h,d)}const Zw=$({conv2DBackpropFilter_:AH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gy(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Z(n,zl(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function yy(n,e){let t=e;const s=Tn(n.shape,e.shape);return s.length>0&&(t=Oe(t,s)),K(t,n.shape)}function by(n,e,t,s){if(e==="linear")return n;if(e==="relu")return hr(n);if(e==="elu")return uh(n);if(e==="relu6")return ny(n);if(e==="prelu")return of(n,t);if(e==="leakyrelu")return ef(n,s);if(e==="sigmoid")return nr(n);throw new Error(`Unknown fused activation ${e}.`)}const xy=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH({x:n,filter:e,strides:t,pad:s,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",xy(W.state.gradientDepth,l)===!1){E(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=ma(n,e,t,s,i,r,a);return o!=null&&(_=he(_,o)),by(_,l,c,u)}const h=k(n,"x","conv2d","float32"),d=k(e,"filter","conv2d","float32");let p=h,m=!1;h.rank===3&&(m=!0,p=K(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),E(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),vs("fused conv2d",s,a);const g=i==="NHWC"?p.shape[3]:p.shape[1];E(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),E(qn(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const f=$n(p.shape,d.shape,t,r,s,a);let y;o!=null&&(y=k(o,"bias","fused conv2d"),[y]=rn(y,h),i==="NHWC"?st(f.outShape,y.shape):(E(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),E(y.shape.length===0||y.shape[0]===f.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${f.outChannels})`)));let b;if(c!=null){const _=c.shape;if(E(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)E(_[0]===1||_[0]===f.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${f.outChannels}).`);else if(_.length===3)try{st(_,f.outShape)}catch{const T=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${f.outShape}).`;throw Error(T)}b=k(c,"prelu weights","fused conv2d")}const x=(_,T)=>{E(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[C,S,M,A]=T,P=gy(_,M,l);E(oo(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const D=dw(S.shape,P,C,t,s),N=Zw(S,P,C.shape,t,s),L=[D,N];if(A!=null){const G=yy(A,P);L.push(G)}return L},v={x:p,filter:d,bias:y,preluActivationWeights:b},w={strides:t,pad:s,dataFormat:i,dilations:r,dimRoundingMode:a,activation:l,leakyreluAlpha:u};return o==null?zr((_,T,C)=>{let S=W.runKernel(md,v,w);return C([T,_,S]),m&&(S=K(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:x}})(p,d):zr((_,T,C,S)=>{let M=W.runKernel(md,v,w);return S([T,_,M,C]),m&&(M=K(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:x}})(p,d,y)}const gk=$({fusedConv2d_:LH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(n,e,t,s,i,r=[1,1],a){let o=n;n.rank===3&&(o=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:o,dy:l},u={strides:s,pad:i,dimRoundingMode:a,dilations:r,filterShape:t};return W.runKernel(Qg,c,u)}const yk=$({depthwiseConv2dNativeBackpropFilter_:PH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(n,e,t,s,i,r=[1,1],a){let o=e,l=!1;e.rank===3&&(l=!0,o=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:o,filter:t},u={strides:s,pad:i,dimRoundingMode:a,dilations:r,inputShape:n},h=W.runKernel(Jg,c,u);return l?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const bk=$({depthwiseConv2dNativeBackpropInput_:DH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:i,activation:r="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(xy(W.state.gradientDepth,r)===!1){let M=pt(n,e,t,s);return i!=null&&(M=he(M,i)),by(M,r,a,o)}let l=k(n,"a","fused matMul"),c=k(e,"b","fused matMul");[l,c]=rn(l,c);const u=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],m=l.shape.slice(0,-2),g=c.shape.slice(0,-2),f=oe(m),y=oe(g);E(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const b=st(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),x=t?K(l,[f,u,d]):K(l,[f,d,u]),v=s?K(c,[y,p,h]):K(c,[y,h,p]);let w;i!=null&&(w=k(i,"bias","fused matMul"),[w]=rn(w,l),st(b,w.shape));let _;a!=null&&(_=k(a,"prelu weights","fused matMul"));const T=(M,A)=>{const[P,D,N,L]=A,G=gy(K(M,N.shape),N,r);let V,U;if(!t&&!s?(V=pt(G,D,!1,!0),U=pt(P,G,!0,!1)):!t&&s?(V=pt(G,D,!1,!1),U=pt(G,P,!0,!1)):t&&!s?(V=pt(D,G,!1,!0),U=pt(P,G,!1,!1)):(V=pt(D,G,!0,!0),U=pt(G,P,!0,!0)),i!=null){const H=yy(L,G);return[V,U,H]}else return[V,U]},C={a:x,b:v,bias:w,preluActivationWeights:_},S={transposeA:t,transposeB:s,activation:r,leakyreluAlpha:o};return i==null?zr((M,A,P)=>{const D=W.runKernel(fd,C,S);return P([M,A,D]),{value:K(D,b),gradFunc:T}})(x,v):zr((M,A,P,D)=>{const N=W.runKernel(fd,C,S);return D([M,A,N,P]),{value:K(N,b),gradFunc:T}})(x,v,w)}const C1=$({fusedMatMul_:FH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(n){return my(n,.54,.46)}const zH=$({hammingWindow_:OH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(n){return my(n,.5,.5)}const xk=$({hannWindow_:GH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(n,e,t,s=!1,i=0){let r=0;const a=[];for(;r+e<=n.size;)a.push(St(n,r,e)),r+=t;if(s)for(;r<n.size;){const o=r+e-n.size,l=mn([St(n,r,e-o),Dl([o],i)]);a.push(l),r+=t}return a.length===0?qa([],[0,e]):K(mn(a),[a.length,e])}const vk=$({frame_:VH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(n,e,t,s,i=xk){s==null&&(s=Hw(e));const r=vk(n,e,t),a=Z(r,i(e));return df(a,s)}const $H=$({stft_:WH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(n,e,t,s,i="bilinear",r=0){const a=k(n,"image","cropAndResize"),o=k(e,"boxes","cropAndResize","float32"),l=k(t,"boxInd","cropAndResize","int32"),c=o.shape[0];E(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),E(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),E(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),E(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),E(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),E(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:a,boxes:o,boxInd:l},h={method:i,extrapolationValue:r,cropSize:s};return W.runKernel(Kg,u,h)}const BH=$({cropAndResize_:UH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n){const e=k(n,"image","flipLeftRight","float32");E(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return W.runKernel(i0,t,{})}const HH=$({flipLeftRight_:XH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n){const e=k(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];E(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),E(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const i=new Array(e.rank);return i.fill(1,0,t),i[t]=3,di(e,i)}const KH=$({grayscaleToRGB_:ZH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH(n,e,t=0,s=.5){const i=k(n,"image","rotateWithOffset","float32");E(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},a={radians:e,fillValue:t,center:s};return W.runKernel(G0,r,a)}const jH=$({rotateWithOffset_:YH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bh(n,e,t,s,i,r){s==null&&(s=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const a=n.shape[0];return t=Math.min(t,a),E(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),E(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),E(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),E(e.rank===1,()=>"scores must be a 1D tensor"),E(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),E(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY){const r=k(n,"boxes","nonMaxSuppression","float32"),a=k(e,"scores","nonMaxSuppression","float32"),o=bh(r,a,t,s,i);t=o.maxOutputSize,s=o.iouThreshold,i=o.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:i};return W.runKernel(f0,{boxes:r,scores:a},l)}const JH=$({nonMaxSuppression_:QH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n,e,t){const s=eZ(n,e,t),i=s<0?-(s+1):s;n.splice(i,0,e)}function eZ(n,e,t){return nZ(n,e,t||tZ)}function tZ(n,e){return n>e?1:n<e?-1:0}function nZ(n,e,t){let s=0,i=n.length,r=0,a=!1;for(;s<i;){r=s+(i-s>>>1);const o=t(e,n[r]);o>0?s=r+1:(i=r,a=!o)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vy(n,e,t,s,i){return Kw(n,e,t,s,i,0)}function wy(n,e,t,s,i,r){return Kw(n,e,t,s,i,0,!1,r,!0)}function Sy(n,e,t,s,i,r){return Kw(n,e,t,s,i,r,!0)}function Kw(n,e,t,s,i,r,a=!1,o=!1,l=!1){const c=[];for(let f=0;f<e.length;f++)e[f]>i&&c.push({score:e[f],boxIndex:f,suppressBeginIndex:0});c.sort(BI);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<t&&c.length>0;){const f=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=f;if(y<i)break;let v=!1;for(let w=h.length-1;w>=x;--w){const _=sZ(n,b,h[w]);if(_>=s){v=!0;break}if(f.score=f.score*iZ(s,u,_),f.score<=i)break}f.suppressBeginIndex=h.length,v||(f.score===y?(h.push(b),d.push(f.score)):f.score>i&&qH(c,f,BI))}const p=h.length,m=t-p;o&&m>0&&(h.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function sZ(n,e,t){const s=n.subarray(e*4,e*4+4),i=n.subarray(t*4,t*4+4),r=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),p=(o-r)*(l-a),m=(h-c)*(d-u);if(p<=0||m<=0)return 0;const g=Math.max(r,c),f=Math.max(a,u),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-g,0)*Math.max(b-f,0);return x/(p+m-x)}function iZ(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function BI(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rZ(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY){const r=k(n,"boxes","nonMaxSuppressionAsync"),a=k(e,"scores","nonMaxSuppressionAsync"),o=bh(r,a,t,s,i);t=o.maxOutputSize,s=o.iouThreshold,i=o.scoreThreshold;const l=await Promise.all([r.data(),a.data()]),c=l[0],u=l[1],{selectedIndices:h}=vy(c,u,t,s,i);return r!==n&&r.dispose(),a!==e&&a.dispose(),as(h,"int32")}const aZ=rZ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oZ(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=0){const a=k(n,"boxes","nonMaxSuppression"),o=k(e,"scores","nonMaxSuppression"),l=bh(a,o,t,s,i,r);t=l.maxOutputSize,s=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:a,scores:o},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:i,softNmsSigma:r},h=W.runKernel(g0,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const lZ=$({nonMaxSuppressionWithScore_:oZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cZ(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=0){const a=k(n,"boxes","nonMaxSuppressionAsync"),o=k(e,"scores","nonMaxSuppressionAsync"),l=bh(a,o,t,s,i,r);t=l.maxOutputSize,s=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([a.data(),o.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=Sy(u,h,t,s,i,r);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:as(d,"int32"),selectedScores:as(p)}}const uZ=cZ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hZ(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=!1){const a=k(n,"boxes","nonMaxSuppression"),o=k(e,"scores","nonMaxSuppression"),l=bh(a,o,t,s,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:o},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},m=W.runKernel(m0,d,p);return{selectedIndices:m[0],validOutputs:m[1]}}const dZ=$({nonMaxSuppressionPadded_:hZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pZ(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=!1){const a=k(n,"boxes","nonMaxSuppressionAsync"),o=k(e,"scores","nonMaxSuppressionAsync"),l=bh(a,o,t,s,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:m,validOutputs:g}=wy(d,p,c,u,h,r);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:as(m,"int32"),validOutputs:Ze(g,"int32")}}const fZ=pZ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(n,e,t=!1,s=!1){const i=k(n,"images","resizeBilinear");E(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),E(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),E(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,a=!1;i.rank===3&&(a=!0,r=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const o={images:r},l={alignCorners:t,halfPixelCenters:s,size:e},c=W.runKernel(Fp,o,l);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const wk=$({resizeBilinear_:mZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gZ(n,e,t=!1,s=!1){const i=k(n,"images","resizeNearestNeighbor");E(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),E(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),E(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),E(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,a=!1;i.rank===3&&(a=!0,r=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const o={images:r},l={alignCorners:t,halfPixelCenters:s,size:e},c=W.runKernel(Dp,o,l);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Sk=$({resizeNearestNeighbor_:gZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yZ(n,e="binary",t=!1,s=.5){const i=k(n,"image","threshold"),r=.2989,a=.587,o=.114,l=i.shape[0]*i.shape[1];let c=Z(as([s]),255),u,h,d,p;if(E(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),E(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),E(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),E(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),i.shape[2]===3){[u,h,d]=Rs(i,[1,1,1],-1);const g=Z(u,r),f=Z(h,a),y=Z(d,o);p=he(he(g,f),y)}else p=n;if(e==="otsu"){const g=aw(we(sy(p),"int32"),Jt([]),256);c=bZ(g,l)}const m=t?vo(p,c):ws(p,c);return we(Z(m,255),"int32")}function bZ(n,e){let t=as([-1]),s=as([0]),i=as([0]),r,a,o,l,c,u;for(let h=0;h<n.size-1;h++){r=St(n,0,h+1),a=St(n,h+1),c=We(Oe(r),e),u=We(Oe(a),e);const d=Oe(Z(r,vl(0,r.size)));o=We(d,Oe(r));const p=Dl(a.shape,r.size),m=he(vl(0,a.size),p),g=Z(a,m);l=We(Oe(g),Oe(a));const f=De(o,l),y=De(o,l),b=Z(c,u);i=Z(Z(b,f),y);const x=ws(i,s);s=os(x,i,s),t=os(x,as([h]),t)}return t}const xZ=$({threshold_:yZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(n,e,t="nearest",s="constant",i=0,r){const a=k(n,"image","transform","float32"),o=k(e,"transforms","transform","float32");E(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),E(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:a,transforms:o},c={interpolation:t,fillMode:s,fillValue:i,outputShape:r};return W.runKernel(O0,l,c)}const wZ=$({transform_:vZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SZ(n,e,t){E(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),E(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=k(n,"a","bandPart");E(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const i=s.shape,[r,a]=s.shape.slice(-2);if(!(e<=r))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=r),t<0&&(t=a);const o=K(vl(0,r,1,"int32"),[-1,1]),l=vl(0,a,1,"int32"),c=De(o,l),u=Vi(vo(c,Ze(+e,"int32")),Ca(c,Ze(-t,"int32"))),h=Sn([r,a],s.dtype);return K(bs(xi(K(s,[-1,r,a])).map(d=>os(u,d,h))),i)}const _Z=$({bandPart_:SZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(n){let e;if(Array.isArray(n)){e=!1,E(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=n[0].shape[0];for(let r=1;r<n.length;++r)E(n[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${i})`)}else e=!0,n=Rs(n,n.shape[0],0).map(i=>wo(i,[0]));E(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let i=0;i<n.length;++i)t.push(W.tidy(()=>{let r=s[i];if(i>0)for(let a=0;a<i;++a){const o=Z(Oe(Z(t[a],r)),t[a]);r=De(r,o)}return We(r,hh(r,"euclidean"))}));return e?bs(t,0):t}const IZ=$({gramSchmidt_:TZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CZ(n,e=!1){if(E(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return XI(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=xi(K(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),i=[],r=[];s.forEach(l=>{const[c,u]=XI(l,e);i.push(c),r.push(u)});const a=K(bs(i,0),n.shape),o=K(bs(r,0),n.shape);return[a,o]}}function XI(n,e=!1){return W.tidy(()=>{E(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let i=Y0(t),r=Rr(n);const a=qa([[1]],[1,1]);let o=Rr(a);const l=t>=s?s:t;for(let c=0;c<l;++c){const u=r,h=o,d=i;[o,r,i]=W.tidy(()=>{const p=St(r,[c,c],[t-c,1]),m=hh(p),g=St(r,[c,c],[1,1]),f=os(ws(g,0),qa([[-1]]),qa([[1]])),y=De(g,Z(f,m)),b=We(p,y);b.shape[0]===1?o=Rr(a):o=mn([a,St(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const x=Kt(We(pt(f,y),m)),v=St(r,[c,0],[t-c,s]),w=Z(x,o),_=bt(o);if(c===0)r=De(v,pt(w,pt(_,v)));else{const S=De(v,pt(w,pt(_,v)));r=mn([St(r,[0,0],[c,s]),S],0)}const T=bt(w),C=St(i,[0,c],[t,i.shape[1]-c]);if(c===0)i=De(C,pt(pt(C,o),T));else{const S=De(C,pt(pt(C,o),T));i=mn([St(i,[0,0],[t,c]),S],1)}return[o,r,i]}),nt([u,h,d])}return!e&&t>s&&(i=St(i,[0,0],[t,s]),r=St(r,[0,0],[s,s])),[i,r]})}const MZ=$({qr_:CZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ds;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ds||(ds={}));function EZ(n,e,t=ds.SUM_BY_NONZERO_WEIGHTS){const s=k(n,"losses","computeWeightedLoss");let i=null;e!=null&&(i=k(e,"weights","computeWeightedLoss"));const r=i==null?s:Z(s,i);if(t===ds.NONE)return r;if(t===ds.SUM)return Oe(r);if(t===ds.MEAN){if(i==null)return nn(r);{const a=s.size/i.size,o=We(Oe(r),Oe(i));return a>1?We(o,Ze(a)):o}}if(t===ds.SUM_BY_NONZERO_WEIGHTS){if(i==null)return We(Oe(r),Ze(s.size));{const a=Z(i,Hs(s.shape)),o=we(Oe(xl(a,Ze(0))),"float32");return We(Oe(r),o)}}throw Error(`Unknown reduction: ${t}`)}const Ea=$({computeWeightedLoss_:EZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kZ(n,e,t,s=ds.SUM_BY_NONZERO_WEIGHTS){const i=k(n,"labels","absoluteDifference"),r=k(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=k(t,"weights","absoluteDifference")),Jn(i.shape,r.shape,"Error in absoluteDifference: ");const o=vn(De(i,r));return Ea(o,a,s)}const NZ=$({absoluteDifference_:kZ});function RZ(n,e,t,s,i=ds.SUM_BY_NONZERO_WEIGHTS){const r=k(n,"labels","cosineDistance"),a=k(e,"predictions","cosineDistance");let o=null;s!=null&&(o=k(s,"weights","cosineDistance")),Jn(r.shape,a.shape,"Error in cosineDistance: ");const l=Ze(1),c=De(l,Oe(Z(r,a),t,!0));return Ea(c,o,i)}const AZ=$({cosineDistance_:RZ});function LZ(n,e,t,s=ds.SUM_BY_NONZERO_WEIGHTS){let i=k(n,"labels","hingeLoss");const r=k(e,"predictions","hingeLoss");let a=null;t!=null&&(a=k(t,"weights","hingeLoss")),Jn(i.shape,r.shape,"Error in hingeLoss: ");const o=Ze(1);i=De(Z(Ze(2),i),o);const l=hr(De(o,Z(i,r)));return Ea(l,a,s)}const PZ=$({hingeLoss_:LZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DZ(n,e,t,s=1,i=ds.SUM_BY_NONZERO_WEIGHTS){const r=k(n,"labels","huberLoss"),a=k(e,"predictions","huberLoss");let o=null;t!=null&&(o=k(t,"weights","huberLoss")),Jn(r.shape,a.shape,"Error in huberLoss: ");const l=Ze(s),c=vn(De(a,r)),u=fh(c,l),h=De(c,u),d=he(Z(Ze(.5),Pt(u)),Z(l,h));return Ea(d,o,i)}const FZ=$({huberLoss_:DZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OZ(n,e,t,s=1e-7,i=ds.SUM_BY_NONZERO_WEIGHTS){const r=k(n,"labels","logLoss"),a=k(e,"predictions","logLoss");let o=null;t!=null&&(o=k(t,"weights","logLoss")),Jn(r.shape,a.shape,"Error in logLoss: ");const l=Ze(1),c=Ze(s),u=Kt(Z(r,ei(he(a,c)))),h=Z(De(l,r),ei(he(De(l,a),c))),d=De(u,h);return Ea(d,o,i)}const zZ=$({logLoss_:OZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GZ(n,e,t,s=ds.SUM_BY_NONZERO_WEIGHTS){const i=k(n,"labels","meanSquaredError"),r=k(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=k(t,"weights","meanSquaredError")),Jn(i.shape,r.shape,"Error in meanSquaredError: ");const o=hy(i,r);return Ea(o,a,s)}const VZ=$({meanSquaredError_:GZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WZ(n,e){const t=k(n,"labels","sigmoidCrossEntropyWithLogits"),s=k(e,"logits","sigmoidCrossEntropyWithLogits");Jn(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=hr(s),r=Z(s,t),a=tf(qs(Kt(vn(s))));return he(De(i,r),a)}function $Z(n,e,t,s=0,i=ds.SUM_BY_NONZERO_WEIGHTS){let r=k(n,"multiClassLabels","sigmoidCrossEntropy");const a=k(e,"logits","sigmoidCrossEntropy");let o=null;if(t!=null&&(o=k(t,"weights","sigmoidCrossEntropy")),Jn(r.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=Ze(s),u=Ze(1),h=Ze(.5);r=he(Z(r,De(u,c)),Z(h,c))}const l=WZ(r,a);return Ea(l,o,i)}const UZ=$({sigmoidCrossEntropy_:$Z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BZ(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return zr((s,i,r)=>{const a=q0(i,[t],!0),o=De(we(i,"float32"),a);r([s,o]);const l=Kt(Z(o,s));return{value:Oe(l,[t]),gradFunc:(c,u)=>{const[h,d]=u,p=gn(c.shape,[t]);return[Z(K(c,p),De(we(h,"float32"),qs(d))),Z(K(c,p),De(qs(d),we(h,"float32")))]}}})(n,e)}function XZ(n,e,t,s=0,i=ds.SUM_BY_NONZERO_WEIGHTS){let r=k(n,"onehotLabels","softmaxCrossEntropy");const a=k(e,"logits","softmaxCrossEntropy");let o=null;if(t!=null&&(o=k(t,"weights","softmaxCrossEntropy")),Jn(r.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const c=Ze(s),u=Ze(1),h=Ze(r.shape[1]);r=he(Z(r,De(u,c)),We(c,h))}const l=BZ(r,a);return Ea(l,o,i)}const HZ=$({softmaxCrossEntropy_:XZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZZ(n,e,t,s){const i=k(n,"indices","sparseFillEmptyRows","int32"),r=k(e,"values","sparseFillEmptyRows"),a=k(t,"denseShape","sparseFillEmptyRows","int32"),o=k(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:i,values:r,denseShape:a,defaultValue:o},c=W.runKernel(C0,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const KZ=$({sparseFillEmptyRows_:ZZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YZ(n,e,t){const s=k(n,"inputIndices","sparseReshape","int32"),i=k(e,"inputShape","sparseReshape","int32"),r=k(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const a={inputIndices:s,inputShape:i,newShape:r},o=W.runKernel(M0,a);return{outputIndices:o[0],outputShape:o[1]}}const jZ=$({sparseReshape_:YZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QZ(n,e,t){const s=k(n,"data","sparseSegmentMean"),i=k(e,"indices","sparseSegmentMean","int32"),r=k(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const a={data:s,indices:i,segmentIds:r};return W.runKernel(E0,a)}const JZ=$({sparseSegmentMean_:QZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n,e,t){const s=k(n,"data","sparseSegmentSum"),i=k(e,"indices","sparseSegmentSum","int32"),r=k(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const a={data:s,indices:i,segmentIds:r};return W.runKernel(k0,a)}const eK=$({sparseSegmentSum_:qZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(n,e,t,s,i,r,a,o){const l=k(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=k(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:t,nGramWidths:s,leftPad:i,rightPad:r,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:c},d=W.runKernel(L0,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const nK=$({stringNGrams_:tK});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(n,e,t=!0){const s=k(n,"input","stringSplit","string"),i=k(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:t},a={input:s,delimiter:i},o=W.runKernel(P0,a,r);return{indices:o[0],values:o[1],shape:o[2]}}const iK=$({stringSplit_:sK});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rK(n,e){const t=k(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const i={input:t};return W.runKernel(D0,i,s)}const aK=$({stringToHashBucketFast_:rK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _k={fft:hf,ifft:Bc,rfft:df,irfft:uy},Tk={hammingWindow:zH,hannWindow:xk,frame:vk,stft:$H},Ir={flipLeftRight:HH,grayscaleToRGB:KH,resizeNearestNeighbor:Sk,resizeBilinear:wk,rotateWithOffset:jH,cropAndResize:BH,nonMaxSuppression:JH,nonMaxSuppressionAsync:aZ,nonMaxSuppressionWithScore:lZ,nonMaxSuppressionWithScoreAsync:uZ,nonMaxSuppressionPadded:dZ,nonMaxSuppressionPaddedAsync:fZ,threshold:xZ,transform:wZ},Yw={bandPart:_Z,gramSchmidt:IZ,qr:MZ},Ik={absoluteDifference:NZ,computeWeightedLoss:Ea,cosineDistance:AZ,hingeLoss:PZ,huberLoss:FZ,logLoss:zZ,meanSquaredError:VZ,sigmoidCrossEntropy:UZ,softmaxCrossEntropy:HZ},Ck={sparseFillEmptyRows:KZ,sparseReshape:jZ,sparseSegmentMean:JZ,sparseSegmentSum:eK},Mk={stringNGrams:nK,stringSplit:iK,stringToHashBucketFast:aK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gl{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}let Vl=class yc{constructor(){this.classNameMap={}}static getMap(){return yc.instance==null&&(yc.instance=new yc),yc.instance}static register(e){yc.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function de(n){E(n.className!=null,()=>"Class being registered does not have the static className property defined."),E(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),E(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Vl.register(n)}const oK=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Gl,SerializationMap:Vl,registerClass:de},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ka extends Gl{minimize(e,t=!1,s){const{value:i,grads:r}=this.computeGradients(e,s);if(s!=null){const a=s.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return nt(r),t?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return lk(e,t)}dispose(){this.iterations_!=null&&nt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ze(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ka,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jw extends ka{constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=W.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=W.registeredVariables[t],r=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${t}/accum_grad`,variable:Q(()=>_t(i).variable(r))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${t}/accum_var`,variable:Q(()=>_t(i).variable(r))});const a=Array.isArray(e)?e[s].tensor:e[t];if(a==null)return;const o=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;Q(()=>{const c=he(Z(o,this.rho),Z(Pt(a),1-this.rho)),u=Z(We(jn(he(l,this.epsilon)),jn(he(o,this.epsilon))),a),h=he(Z(l,this.rho),Z(Pt(u),1-this.rho));o.assign(c),l.assign(h);const d=he(Z(u,-this.learningRate),i);i.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(nt(this.accumulatedGrads.map(e=>e.variable)),nt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qw extends ka{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=W.registeredVariables[t];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${t}/accumulator`,variable:Q(()=>Dl(i.shape,this.initialAccumulatorValue).variable(!1))});const r=Array.isArray(e)?e[s].tensor:e[t];if(r==null)return;const a=this.accumulatedGrads[s].variable;Q(()=>{const o=he(a,Pt(r));a.assign(o);const l=he(Z(We(r,jn(he(o,W.backend.epsilon()))),-this.learningRate),i);i.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&nt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jw extends ka{constructor(e,t,s,i=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Q(()=>{this.accBeta1=Ze(t).variable(),this.accBeta2=Ze(s).variable()}),i==null&&(this.epsilon=W.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=De(1,this.accBeta1),i=De(1,this.accBeta2);t.forEach((r,a)=>{const o=W.registeredVariables[r],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Q(()=>_t(o).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:Q(()=>_t(o).variable(l))});const c=Array.isArray(e)?e[a].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=he(Z(u,this.beta1),Z(c,1-this.beta1)),p=he(Z(h,this.beta2),Z(Pt(c),1-this.beta2)),m=We(d,s),g=We(p,i);u.assign(d),h.assign(p);const f=he(Z(We(m,he(jn(g),this.epsilon)),-this.learningRate),o);o.assign(f)}),this.accBeta1.assign(Z(this.accBeta1,this.beta1)),this.accBeta2.assign(Z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&nt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&nt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Q(()=>{this.accBeta1.assign(ga(this.beta1,this.iterations_+1)),this.accBeta2.assign(ga(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qw extends ka{constructor(e,t,s,i=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Q(()=>{this.iteration=Ze(0).variable(),this.accBeta1=Ze(t).variable()}),i==null&&(this.epsilon=W.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=De(1,this.accBeta1),i=We(-this.learningRate,he(Z(this.iteration,this.decay),1));t.forEach((r,a)=>{const o=W.registeredVariables[r],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:_t(o).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:_t(o).variable(l)});const c=Array.isArray(e)?e[a].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=he(Z(u,this.beta1),Z(c,1-this.beta1)),p=Z(h,this.beta2),m=vn(c),g=Wr(p,m);u.assign(d),h.assign(g);const f=he(Z(We(i,s),We(d,he(g,this.epsilon))),o);o.assign(f)}),this.iteration.assign(he(this.iteration,1)),this.accBeta1.assign(Z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&nt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&nt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _y extends ka{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=Array.isArray(e)?e[s].tensor:e[t];if(i==null)return;const r=W.registeredVariables[t];Q(()=>{const a=he(Z(this.c,i),r);r.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=cn(Ze(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eS extends _y{constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Ze(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=W.registeredVariables[t];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${t}/momentum`,variable:Q(()=>_t(i).variable(!1))});const r=this.accumulations[s].variable,a=Array.isArray(e)?e[s].tensor:e[t];a!=null&&Q(()=>{let o;const l=he(Z(this.m,r),a);this.useNesterov?o=he(Z(this.c,he(a,Z(l,this.m))),i):o=he(Z(this.c,l),i),r.assign(l),i.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&nt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tS extends ka{constructor(e,t=.9,s=0,i=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=W.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=W.registeredVariables[t],r=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${t}/rms`,variable:Q(()=>_t(i).variable(r))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${t}/momentum`,variable:Q(()=>_t(i).variable(r))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${t}/mg`,variable:Q(()=>_t(i).variable(r))});const a=Array.isArray(e)?e[s].tensor:e[t];if(a==null)return;const o=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;Q(()=>{const c=he(Z(o,this.decay),Z(Pt(a),1-this.decay));if(this.centered){const u=this.accumulatedMeanGrads[s].variable,h=he(Z(u,this.decay),Z(a,1-this.decay)),d=We(Z(a,this.learningRate),jn(De(c,he(Pt(h),this.epsilon)))),p=he(Z(l,this.momentum),d);o.assign(c),u.assign(h),l.assign(p);const m=De(i,p);i.assign(m)}else{const u=he(Z(o,this.decay),Z(Pt(a),1-this.decay)),h=he(Z(l,this.momentum),We(Z(a,this.learningRate),jn(he(u,this.epsilon))));o.assign(u),l.assign(h);const d=De(i,h);i.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&nt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&nt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&nt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK=[jw,Qw,Jw,qw,eS,tS,_y];function cK(){for(const n of lK)de(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(n,e,t,s){a(n),t=t??0,s=s??1,o(t,s);let i=0;const r=l=>(l.then(c=>{const u=t+ ++i/n.length*(s-t);return e(u),c}),l);function a(l){E(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,c){E(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),E(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),E(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ek(n,e){e==null&&(e={});const t=e.fetchFunc==null?q().platform.fetch:e.fetchFunc,s=n.map(c=>t(c,e.requestInit,{isBinary:!0})),i=0,r=.5,a=(e.onProgress==null?await Promise.all(s):await HI(s,e.onProgress,i,r)).map(c=>c.arrayBuffer()),o=.5,l=1;return e.onProgress==null?await Promise.all(a):await HI(a,e.onProgress,o,l)}async function kk(n,e="",t,s){return Nk(i=>Ek(i,{requestInit:s}))(n,e,t)}function Nk(n){return async(e,t="",s)=>{const i=e.map(()=>!1),r={},a=s!=null?s.map(()=>!1):[],o=[];if(e.forEach((p,m)=>{let g=0;p.weights.forEach(f=>{const y="quantization"in f?f.quantization.dtype:f.dtype,b=v1[y]*oe(f.shape),x=()=>{i[m]=!0,r[m]==null&&(r[m]=[]),r[m].push({manifestEntry:f,groupOffset:g,sizeBytes:b})};s!=null?s.forEach((v,w)=>{v===f.name&&(x(),a[w]=!0)}):x(),o.push(f.name),g+=b})}),!a.every(p=>p)){const p=s.filter((m,g)=>!a[g]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=i.reduce((p,m,g)=>(m&&p.push(g),p),[]),c=[];l.forEach(p=>{e[p].paths.forEach(m=>{const g=t+(t.endsWith("/")?"":"/")+m;c.push(g)})});const u=await n(c),h={};let d=0;return l.forEach(p=>{const m=e[p].paths.length;let g=0;for(let x=0;x<m;x++)g+=u[d+x].byteLength;const f=new ArrayBuffer(g),y=new Uint8Array(f);let b=0;for(let x=0;x<m;x++){const v=new Uint8Array(u[d+x]);y.set(v,b),b+=v.byteLength}r[p].forEach(x=>{const v=f.slice(x.groupOffset,x.groupOffset+x.sizeBytes),w=Vv(v,[x.manifestEntry]);for(const _ in w)h[_]=w[_]}),d+=m}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK="application/octet-stream",hK="application/json";class nS{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(E(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=q().platform.fetch,E(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&E(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],i=YE(e,s);t.body.append("model.json",new Blob([JSON.stringify(i)],{type:hK}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:uK}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Kp(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let r=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?r+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":r+=" Please make sure the server is serving valid JSON for this request.",new Error(r)}const s=t.modelTopology,i=t.weightsManifest;if(s==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Uv(t,r=>this.loadWeights(r))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,i]=dK(t),r=this.weightPathPrefix||s,a=Bv(e),o=[],l=[];for(const u of e)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):o.push(r+h+i);this.weightUrlConverter&&o.push(...await Promise.all(l));const c=await Ek(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,$0(c)]}}nS.URL_SCHEME_REGEX=/^https?:\/\//;function dK(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),i=t>e?n.substring(t):"";return[s+"/",i]}function M1(n){return n.match(nS.URL_SCHEME_REGEX)!=null}const Rk=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>M1(s)):t=M1(n),t)return sS(n,e)}return null};tn.registerSaveRouter(Rk);tn.registerLoadRouter(Rk);function sS(n,e){return new nS(n,e)}function Ak(n,e){return sS(n,e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Po;function Lk(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,i=!1,r=!1,a=!1,o=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)i=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)r=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Hm(Xm,W.backendName)!=null){const d={pixels:n},p={numChannels:e};return W.runKernel(Xm,d,p)}const[l,c]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height];let u;if(a)u=n.getContext("2d").getImageData(0,0,l,c).data;else if(s||t)u=n.data;else if(r||i||o){if(Po==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Po=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Po=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Po.canvas.width=l,Po.canvas.height=c,Po.drawImage(n,0,0,l,c),u=Po.getImageData(0,0,l,c).data}let h;if(e===4)h=new Int32Array(u);else{const d=l*c;h=new Int32Array(d*e);for(let p=0;p<d;p++)for(let m=0;m<e;++m)h[p*e+m]=u[p*4+m]}return Gw(h,[c,l,e],"int32")}function pK(n){return n!=null&&n.data instanceof Uint8Array}function fK(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function mK(n){return n!=null&&n.width!==0&&n.height!==0}function gK(n){return fK()&&!(n instanceof ImageBitmap)&&mK(n)&&!pK(n)}async function yK(n,e=3){let t=null;if(q().getBool("WRAP_TO_IMAGEBITMAP")&&gK(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?t=s:t=n}else t=n;return Lk(t,e)}async function bK(n,e){let t=k(n,"img","toPixels");if(!(n instanceof Ct)){const c=t;t=we(c,"int32"),c.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const[s,i]=t.shape.slice(0,2),r=t.rank===2?1:t.shape[2];if(r>4||r===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${r}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);const a=await t.data(),o=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(i*s*4);for(let c=0;c<s*i;++c){const u=[0,0,0,255];for(let d=0;d<r;d++){const p=a[c*r+d];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);r===1?(u[0]=p*o,u[1]=p*o,u[2]=p*o):u[d]=p*o}const h=c*4;l[h+0]=Math.round(u[0]),l[h+1]=Math.round(u[1]),l[h+2]=Math.round(u[2]),l[h+3]=Math.round(u[3])}if(e!=null){e.width=i,e.height=s;const c=e.getContext("2d"),u=new ImageData(l,i,s);c.putImageData(u,0,0)}return t!==n&&t.dispose(),l}const iS=$({fromPixels_:Lk}),xK=Object.freeze(Object.defineProperty({__proto__:null,fromPixels:iS,fromPixelsAsync:yK,toPixels:bK},Symbol.toStringTag,{value:"Module"}));function Ty(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(oe(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const i=e.shape,r=i[i.length-1];let a=1;for(let h=0;h<i.length-1;++h)a*=i[h];const o=n.shape,l=i.slice();l.pop();let c=1;for(let h=r;h<t;++h)c*=o[h],l.push(o[h]);const u=[...Xe(n.shape).map(h=>h/c),1].slice(0,r);return[l,a,c,u]}const vK=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Ty},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E1=-2,wK=-1;function rS(n,e,t){const s=n.shape.length;E(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),E(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let i=0;i<s;++i)E(e[i]+t[i]<=n.shape[i],()=>`Error in slice${s}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${n.shape[i]})`)}function SK(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function aS(n,e,t){const s=[];for(let i=0;i<n.length;i++)s[i]=Math.ceil((e[i]-n[i])/t[i]);return s}function Pk(n,e,t,s){const i=[...n];for(let r=i.length;r<s.length;r++)i.push(1);for(let r=0;r<t;r++)r===0?i[e]=1:(i.splice(e,0,1),i.pop());return i}function Dk(n,e,t){return t<=n?t:t-(e-1)}function Fk(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function _K(n,e,t,s,i,r,a,o,l){const c=n.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const p=e[0],m=t+1;u=Ok(a,p,m,s,n),h=zk(o,p,m,i,n),d=Pk(r,p,m,n)}else for(let p=0;p<c;p++)u[p]=Vk(a,s,r,n,p,l),h[p]=Wk(o,i,r,n,p,l),d[p]=Gk(r,p,l);return{begin:u,end:h,strides:d}}function Ok(n,e,t,s,i){const r=[...i],a=Fk(t,e);for(let o=0;o<r.length;o++)if(a.indexOf(o)>-1)r[o]=0;else{const l=Dk(e,t,o);let c=s[l];n&1<<l&&(c=0),r[o]=c}return r}function zk(n,e,t,s,i){const r=[...i],a=Fk(t,e);for(let o=0;o<r.length;o++)if(a.indexOf(o)>-1)r[o]=Number.MAX_SAFE_INTEGER;else{const l=Dk(e,t,o);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[o]=c}for(let o=0;o<r.length;o++){const l=i[o];r[o]<0&&(r[o]+=l),r[o]=ro(0,r[o],i[o])}return r}function Gk(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function Vk(n,e,t,s,i,r){let a=e[i];const o=t[i]||1;(n&1<<i||r&1<<i||a==null)&&(o>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=s[i];return a<0&&(a+=l),a=ro(0,a,l-1),a}function Wk(n,e,t,s,i,r){let a=e[i];const o=t[i]||1;(n&1<<i||r&1<<i||a==null)&&(o>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=s[i];return a<0&&(a+=l),o>0?a=ro(0,a,l):a=ro(-1,a,l-1),a}function oS(n,e,t){let s=t.length;for(let i=0;i<t.length;i++)if(t[i]>1){s=i;break}for(let i=s+1;i<t.length;i++)if(e[i]>0||t[i]!==n[i])return!1;return!0}function lS(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Iy(n,e,t){let s;const i=n.shape.length;typeof e=="number"?s=[e,...new Array(i-1).fill(0)]:e.length<i?s=e.concat(new Array(i-e.length).fill(0)):s=e.slice(),s.forEach(a=>{E(a!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(i).fill(-1):typeof t=="number"?r=[t,...new Array(i-1).fill(-1)]:t.length<i?r=t.concat(new Array(i-t.length).fill(-1)):r=t,r=r.map((a,o)=>a>=0?a:(E(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),n.shape[o]-s[o])),[s,r]}function cS(n,e,t,s,i,r,a,o,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:i,endMask:r,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)u&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&a&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};TK(h,d);let p=!0,m=!0,g=!0;const f=[],y=[];for(let b=0;b<n.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const x=!!(d.shrinkAxisMask&1<<b),v=n[b];if(v===-1){f.push(x?1:-1);continue}const w=[d.beginMask&1<<b,d.endMask&1<<b],_=[d.strides[b]>0?0:-1,d.strides[b]>0?v:v-1];if(x&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[b]===1;const T=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(x){const A=d.begin[b]<0?v+d.begin[b]:d.begin[b];if(d.begin[b]=A,d.end[b]=d.begin[b]+1,A<0||A>=v)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=ZI(d.begin[b],0,d.strides[b],v,w,_),d.end[b]=ZI(d.end[b],1,d.strides[b],v,w,_);const M=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===v;p=p&&M,m=m&&(b===0&&d.strides[b]===1||M)}else p=p&&d.strides[b]===1&&T,m=m&&(b===0&&d.strides[b]===1||T);let C,S=!1;if(d.beginValid&&d.endValid?(C=d.end[b]-d.begin[b],S=!0):x?(C=1,S=!0):T&&v>=0&&(d.strides[b]<0?C=-v:C=v,S=!0),S){let M;C===0||C<0!=d.strides[b]<0?M=0:M=Math.trunc(C/d.strides[b])+(C%d.strides[b]!==0?1:0),f.push(M)}else f.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const x=d.finalShapeGatherIndices[b];x>=0?y.push(f[x]):x===E1&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>d.finalShapeGatherIndices[x]!==E1),finalShape:y,isIdentity:p,sliceDim0:m,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function TK(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const i=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<i;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(E1),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(wK),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function ZI(n,e,t,s,i,r){if(i[e])return t>0?r[e]:r[e+1&1];{const a=n<0?s+n:n;return a<r[0]?r[0]:a>r[1]?r[1]:a}}const $k=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:rS,computeFlatOffset:lS,computeOutShape:aS,getNormalizedAxes:_K,isSliceContinous:oS,maskToAxes:SK,parseSliceParams:Iy,sliceInfo:cS,startForAxis:Vk,startIndicesWithElidedDims:Ok,stopForAxis:Wk,stopIndicesWithElidedDims:zk,stridesForAxis:Gk,stridesWithElidedDims:Pk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uk{static sgd(e){return new _y(e)}static momentum(e,t,s=!1){return new eS(e,t,s)}static rmsprop(e,t=.9,s=0,i=null,r=!1){return new tS(e,t,s,i,r)}static adam(e=.001,t=.9,s=.999,i=null){return new Jw(e,t,s,i)}static adadelta(e=.001,t=.95,s=null){return new jw(e,t,s)}static adamax(e=.002,t=.9,s=.999,i=null,r=0){return new qw(e,t,s,i,r)}static adagrad(e,t=.1){return new Qw(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wo=Uk;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function pf(){return new Promise(n=>IK(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,e){const t=n[0].length;n.forEach((i,r)=>{E(i.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),E(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((i,r)=>{for(let a=0;a<t;a++)E(a===e||i[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Ar(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qi;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Qi||(Qi={}));function Bk(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let i=1;i<t.length;++i){const r=t[i],a=s[s.length-t.length+i],o=s[a];if(r>=0)if(o>=0){if(o!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${i+n}] = ${r} but shape[${i+n}] = ${o}`)}else s[a]=r}return s}function Xk(n){const e={FIRST_DIM_SIZE:Qi.FIRST_DIM_SIZE,VALUE_ROWIDS:Qi.VALUE_ROWIDS,ROW_LENGTHS:Qi.ROW_LENGTHS,ROW_SPLITS:Qi.ROW_SPLITS,ROW_LIMITS:Qi.ROW_LIMITS,ROW_STARTS:Qi.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function Hk(n){return n.length===0?0:n[0]===Qi.FIRST_DIM_SIZE?n.length-1:n.length}function Zk(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let i=0;i<Math.min(t,s-1);++i){const r=n[i],a=e[i+1];if(r>=0&&a>=0&&r!==1&&r!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${i-n.length}] = ${r} but ragged tensor input.flatValues.shape[${i-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hS=30;function Cy(n){return n<=hS?n:$m(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n,e,t){const s=t*(typeof n=="number"?n:n[0]),i=e*(typeof n=="number"?n:n[1]);return[s,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ff(n,e,t,s=!0){let i=[];if(s)i=i.concat(e.slice(0)),i.push(n[0]/t),i=i.concat(n.slice(1));else{i=i.concat(n[0]);const r=e.length;for(let a=0;a<r;++a)i=i.concat([n[a+1]/e[a],e[a]]);i=i.concat(n.slice(r+1))}return i}function mf(n,e,t=!0){const s=[];if(t){s.push(e);for(let i=e+1;i<n;++i)i<=2*e?(s.push(i),s.push(i-(e+1))):s.push(i)}else{const i=[],r=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?r.push(a):i.push(a);s.push(...i),s.push(0),s.push(...r)}return s}function gf(n,e,t,s=!0){const i=[];s?i.push(n[0]/t):i.push(n[0]*t);for(let r=1;r<n.length;++r)r<=e.length?s?i.push(e[r-1]*n[r]):i.push(n[r]/e[r-1]):i.push(n[r]);return i}function pS(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function fS(n,e,t){const s=n.slice(0,1);for(let i=0;i<t;++i)s.push(n[i+1]-e[i][0]-e[i][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const My=1.7580993408473768,Ey=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS=.3275911,gS=.254829592,yS=-.284496736,bS=1.421413741,xS=-1.453152027,vS=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ya(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function Kk(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function Yk(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let i=0;i<n.length;i+=4)t[Math.floor(i/4)]=n[i],s[Math.floor(i/4)]=n[i+1];return{real:t,imag:s}}function jk(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let i=2;i<n.length;i+=4)t[Math.floor(i/4)]=n[i],s[Math.floor(i/4)]=n[i+1];return{real:t,imag:s}}function wS(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function Qk(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function Jk(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let i=0;i<Math.ceil(n/2);i++){const r=(e?2:-2)*Math.PI*(i/n);t[i]=Math.cos(r),s[i]=Math.sin(r)}return{real:t,imag:s}}function qk(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),i=Math.cos(s),r=Math.sin(s);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cx="->",CK=/->/g,KI=",",YI="...";function SS(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(CK,"").length)/cx.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${cx}").`);const[s,i]=n.split(cx);E(s.indexOf(YI)===-1,()=>`The ellipsis notation ("${YI}") is not supported yet.`);const r=s.split(KI),a=r.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<i.length;++d){const p=i[d];if(!r.some(m=>m.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);o.indexOf(p)===-1&&o.push(p)}for(let d=0;d<s.length;++d){const p=s[d];o.indexOf(p)===-1&&p!==KI&&o.push(p)}const l=new Array(r.length);for(let d=0;d<a;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<r[d].length;++p)l[d].push(o.indexOf(r[d][p]))}const c=o.length,u=i.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function _S(n,e){let t=new Array(n);t.fill(-1);for(let i=0;i<e.length;++i)t[e[i]]=i;const s=[];for(let i=0;i<n;++i)t[i]===-1&&s.push(i);return t=t.filter(i=>i!==-1),{permutationIndices:t,expandDims:s}}function TS(n,e,t){const s=new Array(n);for(let i=0;i<t.length;++i){const r=t[i].shape;for(let a=0;a<e[i].length;++a)s[e[i][a]]===void 0?s[e[i][a]]=r[a]:E(s[e[i][a]]===r[a],()=>`Expected dimension ${s[e[i][a]]} at axis ${a} of input shaped ${JSON.stringify(r)}, but got dimension ${r[a]}`)}}function IS(n,e){const t=n,s=[];let i=0;n.length===0&&t.push(-1),i=n.length+1;for(let a=0;a<i;++a)s.push([]);const r=[];for(let a=0;a<t.length;++a){const o=t[a],l=MK(e,o);for(const c of l)r.indexOf(c)===-1&&(s[a].push(c),r.push(c))}return{path:t,steps:s}}function CS(n){return n.every((e,t)=>e===t)}function MK(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function MS(n,e,t=0){let s=[];if(typeof e=="number")E(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const i=e.reduce((a,o)=>(o===-1&&(a+=1),a),0);E(i<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const a=e.reduce((o,l)=>l>0?o+l:o);e[r]=n.shape[t]-a}E(n.shape[t]===e.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function tN(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function nN(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function iN(n,e){return`size ${n} must be non-negative, not ${e}`}function rN(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function aN(n,e){const t=oe(n),s=oe(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function oN(n,e){const t=oe(n),s=oe(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k1(){return"segment ids must be >= 0"}function lN(){return"segment ids are not increasing"}function cN(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function uN(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,e){let t=!1,s;for(n<=hS?(s=n,t=!0):s=$m(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=$m(n,s+1);return s}function dN(n,e,t){const s=[],i=n.length;for(let r=0;r<i;r++)r!==e?s.push(n[r]):s.push(t);return s}function ES(n,e,t,s){const i=e.shape.length,r=n.shape.length;if(s!==0&&(s<-i||s>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${s}`);if(s<0&&(s+=i),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],o=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)o.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)o.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<i;h++)o.push(e.shape[h]);for(let h=t+1;h<r;h++)o.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:a,outputShape:o}}const EK=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:ES,computeOutShape:dN,segOpComputeOptimalWindowSize:hN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(n){try{return n.map(e=>da(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function pN(n){return n.map(e=>Nr(e))}const fN=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:gS,ERF_A2:yS,ERF_A3:bS,ERF_A4:xS,ERF_A5:vS,ERF_P:mS,PARALLELIZE_THRESHOLD:hS,get RowPartitionType(){return Qi},SELU_SCALE:Ey,SELU_SCALEALPHA:My,applyActivation:by,assertAndGetBroadcastShape:st,assertAxesAreInnerMostDims:es,assertParamsConsistent:uS,assignToTypedArray:Qk,axesAreInnerMostDims:vw,calculateShapes:yh,checkEinsumDimSizes:TS,checkPadOnDimRoundingMode:vs,combineLocations:ak,combineRaggedTensorToTensorShapes:Bk,complexWithEvenIndex:Yk,complexWithOddIndex:jk,computeConv2DInfo:$n,computeConv3DInfo:bo,computeDefaultPad:tw,computeDilation2DInfo:Yp,computeOptimalWindowSize:Cy,computeOutAndReduceShapes:Un,computeOutShape:Ar,computePool2DInfo:Ui,computePool3DInfo:Ta,convertConv2DDataFormat:Ia,decodeEinsumEquation:SS,eitherStridesOrDilationsAreOne:qn,expandShapeToKeepDim:gn,exponent:qk,exponents:Jk,fromStringArrayToUint8:pN,fromUint8ToStringArray:wl,getAxesPermutation:an,getBroadcastDims:bl,getComplexWithIndex:wS,getEinsumComputePath:IS,getEinsumPermutation:_S,getFusedBiasGradient:yy,getFusedDyActivation:gy,getImageCenter:dS,getInnerMostAxes:yn,getPermuted:mf,getRaggedRank:Hk,getReductionAxes:Tn,getReshaped:ff,getReshapedPermuted:gf,getRowPartitionTypesHelper:Xk,getSliceBeginCoords:pS,getSliceSize:fS,getSparseFillEmptyRowsIndicesDenseShapeMismatch:eN,getSparseFillEmptyRowsNegativeIndexErrorMessage:tN,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:nN,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:rN,getSparseReshapeInputOutputMismatchErrorMessage:oN,getSparseReshapeInputOutputMultipleErrorMessage:aN,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:sN,getSparseReshapeNegativeOutputDimErrorMessage:iN,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:uN,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:k1,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:lN,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:cN,getUndoAxesPermutation:xo,isIdentityPermutation:CS,log:ZW,mergeRealAndImagArrays:ya,prepareAndValidate:Ty,prepareSplitSize:MS,segment_util:EK,shouldFuse:xy,slice_util:$k,splitRealAndImagArrays:Kk,stridesOrDilationsArePositive:gl,tupleValuesAreOne:oo,upcastType:As,validateDefaultValueShape:Zk,validateInput:Bw,validateUpdateShape:Uw,warn:ui},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */cK();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mN={kernelName:Hd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,zl(we(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK={kernelName:pu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Pt(we(t,"float32")),i=jn(De(Ze(1),s));return Kt(We(n,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK={kernelName:fu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=jn(De(Pt(we(t,"float32")),1));return We(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK={kernelName:Ll,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=st(t.shape,s.shape);return{a:()=>{let r=n;const a=Tn(t.shape,i);return a.length>0&&(r=Oe(r,a)),K(r,t.shape)},b:()=>{let r=n;const a=Tn(s.shape,i);return a.length>0&&(r=Oe(r,a)),K(r,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK={kernelName:Zd,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,i)=>{t[i]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LK={kernelName:Kd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_t(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PK={kernelName:Yd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_t(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK={kernelName:mu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,jn(De(Ze(1),Pt(we(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FK={kernelName:gu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=jn(he(Ze(1),Pt(we(t,"float32"))));return We(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK={kernelName:xu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=st(t.shape,s.shape);return{a:()=>{const r=he(Pt(t),Pt(s));let a=Z(n,We(s,r));const o=Tn(t.shape,i);return o.length>0&&(a=Oe(a,o)),K(a,t.shape)},b:()=>{const r=he(Pt(t),Pt(s));let a=Kt(Z(n,We(t,r)));const o=Tn(s.shape,i);return o.length>0&&(a=Oe(a,o)),K(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK={kernelName:yu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,he(Pt(we(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK={kernelName:bu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,De(Ze(1),Pt(we(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n,e,t,s,i,r){const a=k(n,"dy","avgPool3dGrad"),o=k(e,"input","avgPool3dGrad");let l=a,c=o,u=!1;o.rank===4&&(u=!0,l=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=K(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),E(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),E(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),vs("avgPool3dGrad",i,r);const h={dy:l,input:c},d={filterSize:t,strides:s,pad:i,dimRoundingMode:r},p=W.runKernel(Vg,h,d);return u?K(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const WK=$({avgPool3dGrad_:VK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K={kernelName:Qd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:i,strides:r,pad:a,dimRoundingMode:o}=t;return{x:()=>WK(n,s,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n,e,t,s,i){const r=k(n,"dy","avgPoolGrad"),a=k(e,"input","avgPoolGrad");E(a.rank===r.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${r.rank})`);let o=a,l=r,c=!1;a.rank===3&&(c=!0,o=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=K(r,[1,r.shape[0],r.shape[1],r.shape[2]])),E(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),E(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const u={dy:l,input:o},h={filterSize:t,strides:s,pad:i},d=W.runKernel(Gg,u,h);return c?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const BK=$({avgPoolGrad_:UK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK={kernelName:jd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:i,strides:r,pad:a}=t;return{x:()=>BK(n,s,i,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK={kernelName:Jd,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,i]=e,{transposeA:r,transposeB:a}=t;return!r&&!a?{a:()=>pt(n,i,!1,!0),b:()=>pt(s,n,!0,!1)}:!r&&a?{a:()=>pt(n,i,!1,!1),b:()=>pt(n,s,!0,!1)}:r&&!a?{a:()=>pt(i,n,!1,!0),b:()=>pt(s,n,!1,!1)}:{a:()=>pt(i,n,!0,!0),b:()=>pt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZK={kernelName:qd,gradFunc:(n,e,t)=>{const{blockShape:s,crops:i}=t;return{x:()=>af(n,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK={kernelName:RE,gradFunc:(n,e,t)=>{const s=t,i=s.inputShape,r=s.shape,a=Array.from(r);for(let l=i.length-1;l>=0;l--)if(i[l]===r[l])a[l]=1;else if(i[l]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${r}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Oe(n,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK={kernelName:vu,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK={kernelName:wu,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK={kernelName:Su,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:i,clipValueMax:r}=t;return{x:()=>os(Vi(Ca(s,i),vo(s,r)),n,_t(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK={kernelName:ep,inputsToSave:["x"],gradFunc:mN.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qK={kernelName:tp,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(o=>o.shape),{axis:i}=t,r=ft(i,e[0].shape)[0],a=s.map(o=>o[r]);return Rs(n,a,r).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5={kernelName:np,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,i]=e,{dilations:r,strides:a,pad:o,dataFormat:l}=t;return E(oo(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>dw(s.shape,n,i,a,o,l),filter:()=>Zw(s,n,i.shape,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5={kernelName:sp,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,i]=e,{strides:r,pad:a,dataFormat:o,dimRoundingMode:l}=t;return{dy:()=>ma(n,i,r,a,o,1,l),filter:()=>Zw(n,s,i.shape,r,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n,e,t,s,i){let r=n;n.rank===4&&(r=K(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),E(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),E(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),E(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),E(r.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${t[3]}.`),E(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const o={x:r,dy:a},l={strides:s,pad:i,filterShape:t};return W.runKernel(Xg,o,l)}const s5=$({conv3DBackpropFilter_:n5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5={kernelName:ip,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:i,pad:r}=t;E(oo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,o]=e;return{x:()=>rk(a.shape,n,o,i,r),filter:()=>s5(a,n,o.shape,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5={kernelName:_u,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Kt(oy(we(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5={kernelName:Tu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(ly(we(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5={kernelName:rp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:i,exclusive:r,reverse:a}=t;return{x:()=>{const o=an([i],s.rank);let l=K0(n,i,r,!a);return o!=null&&(l=bt(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5={kernelName:ap,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:i,pad:r,dimRoundingMode:a}=t,o=s??[1,1];E(oo(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,c]=e;return E(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),E(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),E(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),E(qn(i,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${o}'.`),vs("depthwiseConv2d",r,a),{x:()=>bk(l.shape,n,c,i,r,o,a),filter:()=>yk(l,n,c.shape,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5={kernelName:op,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,i]=e,r={x:s,filter:i,dy:n},a={x:s,filter:i,dy:n};return{x:()=>W.runKernel(Um,r,t),filter:()=>W.runKernel(Bm,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:Cu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>W.runKernel(t0,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=Z(qs(Kt(Pt(t))),2/Math.sqrt(Math.PI));return{x:()=>Z(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5={kernelName:Eu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:cp,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5={kernelName:ku,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,qs(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5={kernelName:Nu,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5={kernelName:Ru,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=st(t.shape,s.shape);return{a:()=>{const r=We(n,we(s,"float32")),a=Tn(t.shape,i);return a.length>0?K(Oe(r,a),t.shape):r},b:()=>{let r=Z(n,we(t,"float32"));const a=Tn(s.shape,i);a.length>0&&(r=K(Oe(r,a),s.shape));const o=Pt(s);return Kt(We(r,we(o,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5={kernelName:up,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[i,r,a,o]=e,l=o??Ze(1),c=Tn(r.shape,i.shape),u=[];if(r.rank===1){for(let g=0;g<i.shape.length-1;++g)u.push(i.shape[g]);u.push(1)}const h=De(i,r),d=Z(n,l),p=iy(he(a,Ze(s))),m=Z(Z(Z(p,p),p),Ze(-.5));return{x:()=>r.rank===1?K(Z(Z(n,di(K(p,[1,1,1,r.shape[0]]),u)),l),i.shape):K(Z(Z(n,p),l),i.shape),mean:()=>{let g=Z(Z(p,Ze(-1)),d);return r.rank===1&&(g=Oe(g,c)),K(g,r.shape)},variance:()=>{let g=Z(Z(m,h),d);return r.rank===1&&(g=Oe(g,c)),K(g,r.shape)},scale:()=>{const g=Z(h,p);let f=Z(n,g);return r.rank===1&&(f=Oe(f,c)),K(f,r.shape)},offset:()=>{let g=n;return r.rank===1&&(g=Oe(g,c)),K(g,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5={kernelName:hp,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,i]=e,{axis:r}=t,a=ft(r,s.shape)[0];return{x:()=>{const o=s.shape,l=i.size,c=o.slice(0,a),u=c.length,h=o.slice(r,o.length).slice(1),d=h.length,p=jI(0,u),m=jI(u+1,u+1+d),g=QI([c,[l],h]),f=K(n,g),y=K(i,[l]),b=QI([[u],p,m]),x=bt(f,b);let v=py(x,y,s.shape[a]);const w=xo(b);return v=bt(v,w),v},indices:()=>i}}};function jI(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function QI(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5={kernelName:Au,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>_t(t),b:()=>_t(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5={kernelName:Lu,gradFunc:n=>({x:()=>we(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5={kernelName:Pu,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5={kernelName:Du,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:Fu,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:pp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:i}=t,r=ws(s,0);return{x:()=>os(r,n,Z(n,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5={kernelName:zu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,he(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5={kernelName:Ou,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,we(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:AE,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:i}=t;return{logits:()=>{const r=qs(s);return De(n,Z(Oe(n,i,!0),r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(n,e,t,s=5,i=1,r=1,a=.5){const o={x:n,y:e,dy:t},l={depthRadius:s,bias:i,alpha:r,beta:a};return W.runKernel(c0,o,l)}const k5=$({localResponseNormalizationBackprop_:E5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5={kernelName:xp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,i]=e,{depthRadius:r,bias:a,alpha:o,beta:l}=t;return{x:()=>k5(s,i,n,r,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,e,t,s){return e.rank<t.rank&&(e=K(e,gn(e.shape,s))),n.rank<t.rank&&(n=K(n,gn(n.shape,s))),{x:()=>Z(n,we(Js(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI={kernelName:vp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:i}=s,r=e[0],a=e[1],o=ft(i,r.shape),l=gN(n,a,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5={kernelName:Gu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Z(n,we(Ca(t,s),"float32")),b:()=>Z(n,we(j0(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(n,e,t,s,i,r,a){const o=k(n,"dy","maxPool3dGrad"),l=k(e,"input","maxPool3dGrad"),c=k(t,"output","maxPool3dGrad");let u=o,h=l,d=c,p=!1;l.rank===4&&(p=!0,u=K(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=K(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=K(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),E(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),E(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),E(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),vs("maxPool3dGrad",r,a);const m={dy:u,input:h,output:d},g={filterSize:s,strides:i,pad:r,dimRoundingMode:a},f=W.runKernel(h0,m,g);return p?K(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const L5=$({maxPool3dGrad_:A5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5={kernelName:Sp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,i]=e,{filterSize:r,strides:a,pad:o,dimRoundingMode:l}=t;return{x:()=>L5(n,s,i,r,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(n,e,t,s,i,r,a){const o=k(n,"dy","maxPoolGrad"),l=k(e,"input","maxPoolGrad"),c=k(t,"output","maxPoolGrad");E(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),E(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),E(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),vs("maxPoolGrad",r,a);const u={dy:o,input:l,output:c},h={filterSize:s,strides:i,pad:r,dimRoundingMode:a};return W.runKernel(u0,u,h)}const F5=$({maxPoolGrad_:D5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5={kernelName:wp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,i]=e,{filterSize:r,strides:a,pad:o}=t;return{x:()=>F5(n,s,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5={kernelName:_p,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:i}=t,r=ft(i,s.shape),a=Un(s.shape,r)[1],o=oe(a);return{x:()=>{const l=s.shape.slice();r.forEach(u=>{l[u]=1});const c=K(n,l);return We(Z(c,Hs(s.shape,"float32")),o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5={kernelName:Tp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:i}=s,[r,a]=e,o=ft(i,r.shape),l=gN(n,a,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5={kernelName:Vu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Z(n,we(vo(t,s),"float32")),b:()=>Z(n,we(ws(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5={kernelName:Ip,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:i}=t,r=i.map(a=>a[0]);return{x:()=>St(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5={kernelName:Wu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=st(t.shape,s.shape);return{a:()=>{const r=Tn(t.shape,i);return r.length>0?K(Oe(n,r),t.shape):n},b:()=>{const r=Z(n,Kt(dh(We(t,s)))),a=Tn(s.shape,i);return a.length>0?K(Oe(r,a),s.shape):r}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5={kernelName:$u,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=st(t.shape,s.shape);return{a:()=>{const r=Z(n,we(s,"float32")),a=Tn(t.shape,i);return a.length>0?K(Oe(r,a),t.shape):r},b:()=>{const r=Z(n,we(t,"float32")),a=Tn(s.shape,i);return a.length>0?K(Oe(r,a),s.shape):r}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:Cp,gradFunc:n=>({x:()=>Kt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:kp,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Sn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5={kernelName:Ep,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5={kernelName:Np,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return xi(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI={kernelName:Rp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:i}=t,r=i.map(a=>a[0]);return{x:()=>St(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5={kernelName:Uu,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,i]=e,r=t,a=s,o=st(r.shape,a.shape);return{a:()=>{const l=we(a,"float32");let c=Z(n,Z(l,ga(r,De(l,Ze(1)))));const u=Tn(r.shape,o);return u.length>0&&(c=Oe(c,u)),K(c,r.shape)},b:()=>{const l=ws(r,0),c=os(l,ei(r),_t(r));let u=Z(n,Z(i,c));const h=Tn(a.shape,o);return h.length>0&&(u=Oe(u,h)),K(u,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5={kernelName:Ap,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,i=ws(t,0);return{x:()=>os(i,n,Z(n,s)),alpha:()=>{let r=os(i,_t(n),Z(n,t));const a=Tn(s.shape,n.shape);return a.length>0&&(r=Oe(r,a)),K(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(n,e,t){const s=n.shape.slice();s[t]=1;const i=K(e,s),r=Td(n,t,!0,!1),a=Td(n,t,!0,!0),o=Z(r,a);return Z(i,o)}function Q5(n,e,t){const s=n.shape.length,i=s-t.length,r=an(t,s);let a=n;r!=null&&(a=bt(n,r));const o=a.shape.slice(),l=o.splice(s-t.length,t.length).reduce((h,d)=>h*d,1);o.push(l);const c=a.reshape(o);let u=j5(c,e,i);if(u=u.reshape(a.shape),r!=null){const h=xo(r);u=bt(u,h)}return u}const J5={kernelName:Lp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:i}=t;let r=[];return i==null?r=s.shape.map((a,o)=>o):typeof i=="number"?r=[i]:r=i,{x:()=>Q5(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5={kernelName:Iu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=st(t.shape,s.shape);return{a:()=>{const r=We(n,we(s,"float32")),a=Tn(t.shape,i);return a.length>0?K(Oe(r,a),t.shape):r},b:()=>{let r=Z(n,we(t,"float32"));const a=Tn(s.shape,i);a.length>0&&(r=K(Oe(r,a),s.shape));const o=Pt(s);return Kt(We(r,we(o,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e4={kernelName:Bu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,Kt(Pt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t4={kernelName:Hu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=Z(vo(t,6),zl(t));return{x:()=>Z(n,we(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4={kernelName:Xu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,we(zl(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s4={kernelName:Pp,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4={kernelName:Fp,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,i={dy:n,images:s};return{images:()=>W.runKernel(_0,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r4={kernelName:Dp,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,i={dy:n,images:s};return{images:()=>W.runKernel(S0,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a4={kernelName:Op,gradFunc:(n,e,t)=>{const{dims:s}=t,i=ft(s,n.shape);return{x:()=>bi(n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4={kernelName:Zu,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l4={kernelName:Ku,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Kt(We(n,Z(ga(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4={kernelName:zp,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>we(_t(t),"float32"),t:()=>Z(n,we(t,n.dtype)),e:()=>Z(n,we(nf(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u4={kernelName:Yu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=ws(t,Ze(0)),i=Ze(My),r=Ze(Ey),a=Z(n,r),o=Z(Z(n,i),qs(we(t,"float32")));return os(s,a,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h4={kernelName:qu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,Z(t,De(Ze(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d4={kernelName:Ju,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p4={kernelName:ju,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Jp(we(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f4={kernelName:Qu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Z0(we(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m4={kernelName:Gp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:i,size:r}=t,a=s.shape,[o,l]=Iy(s,i,r),c=[];for(let u=0;u<n.rank;u++)c.push([o[u],a[u]-o[u]-l[u]]);return{x:()=>Ma(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4={kernelName:Up,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:i}=t,r=!0,a=Z(n,s);return{logits:()=>De(a,Z(Oe(a,[i],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4={kernelName:eh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,nr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eC={kernelName:Wp,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:i}=t;return{x:()=>Qp(n,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tC={kernelName:$p,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>mn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4={kernelName:th,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,Z(jn(we(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4={kernelName:R0,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,Z(we(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4={kernelName:nh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=Ze(2);return{a:()=>Z(n,Z(i,De(t,s))),b:()=>Z(n,Z(i,De(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4={kernelName:oh,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4={kernelName:sh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=st(t.shape,s.shape);return{a:()=>{let r=n;const a=Tn(t.shape,i);return a.length>0&&(r=Oe(r,a)),K(r,t.shape)},b:()=>{let r=n;const a=Tn(s.shape,i);return a.length>0&&(r=Oe(r,a)),K(Kt(r),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4={kernelName:Vp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,i=s.shape.slice(),{axis:r}=t;ft(r,s.shape).forEach(l=>{i[l]=1});const a=K(n,i),o=Z(a,Hs(s.shape,"float32"));return{x:()=>o}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T4={kernelName:ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(n,Pt(Jp(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I4={kernelName:rh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(De(Ze(1),Pt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4={kernelName:ah,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:i}=t;return{x:()=>{let r=_t(s);if(s.rank===1)for(let a=0;a<i[0];++a)r=he(r,St(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<i[0];++a)for(let o=0;o<i[1];++o)r=he(r,St(n,[a*s.shape[0],o*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<i[0];++a)for(let o=0;o<i[1];++o)for(let l=0;l<i[2];++l)r=he(r,St(n,[a*s.shape[0],o*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<i[0];++a)for(let o=0;o<i[1];++o)for(let l=0;l<i[2];++l)for(let c=0;c<i[3];++c)r=he(r,St(n,[a*s.shape[0],o*s.shape[1],l*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return r}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4={kernelName:nl,gradFunc:(n,e,t)=>{const s=t,{perm:i}=s,r=xo(i);return{x:()=>bt(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4={kernelName:Bp,gradFunc:(n,e,t)=>{const s=t,{axis:i}=s;return{value:()=>bs(n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k4={kernelName:Xp,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>N4(n,t)}}};function N4(n,e){const t=Wr(e,_t(e)),s=ph(n,t);let i=Ca(e,Ze(0,"int32"));const r=s.rank-i.rank;for(let o=0;o<r;++o)i=ss(i,o+1);i=Vi(i,Hs(s.shape,"bool"));const a=_t(s);return os(i,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4={kernelName:Hp,gradFunc:n=>({x:()=>_t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4=[mN,kK,NK,RK,AK,LK,PK,DK,FK,OK,zK,GK,$K,XK,HK,ZK,KK,YK,jK,QK,JK,qK,t5,e5,i5,r5,a5,o5,l5,c5,q5,u5,h5,d5,p5,f5,g5,m5,y5,b5,x5,v5,w5,S5,_5,T5,I5,C5,M5,N5,JI,JI,R5,P5,O5,z5,G5,V5,W5,$5,U5,B5,X5,H5,Z5,qI,qI,K5,Y5,J5,e4,t4,n4,s4,i4,r4,a4,o4,l4,c4,u4,h4,d4,p4,f4,m4,g4,y4,eC,eC,tC,tC,b4,v4,x4,w4,S4,_4,T4,I4,C4,M4,E4,k4,R4];for(const n of A4)LE(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.abs=function(){return this.throwIfDisposed(),vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.acos=function(){return this.throwIfDisposed(),Zv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.acosh=function(){return this.throwIfDisposed(),Kv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.add=function(n){return this.throwIfDisposed(),he(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.all=function(n,e){return this.throwIfDisposed(),B0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.any=function(n,e){return this.throwIfDisposed(),wd(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.argMax=function(n){return this.throwIfDisposed(),ml(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.argMin=function(n){return this.throwIfDisposed(),Yv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.asScalar=function(){return this.throwIfDisposed(),E(this.size===1,()=>"The array must have only 1 element."),K(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.asType=function(n){return this.throwIfDisposed(),we(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.as1D=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.as2D=function(n,e){return this.throwIfDisposed(),K(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),K(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),K(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.as5D=function(n,e,t,s,i){return this.throwIfDisposed(),K(this,[n,e,t,s,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.asin=function(){return this.throwIfDisposed(),jv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.asinh=function(){return this.throwIfDisposed(),Qv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.atan=function(){return this.throwIfDisposed(),Jv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.atan2=function(n){return this.throwIfDisposed(),qv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.atanh=function(){return this.throwIfDisposed(),ew(this)};le().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),jp(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Qp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.batchNorm=function(n,e,t,s,i){return this.throwIfDisposed(),lh(this,n,e,t,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.broadcastTo=function(n){return this.throwIfDisposed(),sl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.cast=function(n){return this.throwIfDisposed(),we(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.ceil=function(){return this.throwIfDisposed(),ow(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Ls(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Ct&&(n=[n]),mn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.conv1d=function(n,e,t,s,i,r){return this.throwIfDisposed(),X0(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.conv2dTranspose=function(n,e,t,s,i){return this.throwIfDisposed(),H0(this,n,e,t,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.conv2d=function(n,e,t,s,i,r){return this.throwIfDisposed(),ma(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.cos=function(){return this.throwIfDisposed(),Jp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.cosh=function(){return this.throwIfDisposed(),Z0(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),Td(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),K0(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),mw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.depthwiseConv2d=function(n,e,t,s,i,r){return this.throwIfDisposed(),ch(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.dilation2d=function(n,e,t,s,i){return this.throwIfDisposed(),gw(this,n,e,t,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.divNoNan=function(n){return this.throwIfDisposed(),yw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.div=function(n){return this.throwIfDisposed(),We(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.dot=function(n){return this.throwIfDisposed(),bw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.elu=function(){return this.throwIfDisposed(),uh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.equal=function(n){return this.throwIfDisposed(),Js(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.erf=function(){return this.throwIfDisposed(),xw(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),ww(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.exp=function(){return this.throwIfDisposed(),qs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.expandDims=function(n){return this.throwIfDisposed(),ss(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.expm1=function(){return this.throwIfDisposed(),Sw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.fft=function(){return this.throwIfDisposed(),hf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.flatten=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.floor=function(){return this.throwIfDisposed(),dh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.floorDiv=function(n){return this.throwIfDisposed(),U0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.gather=function(n,e){return this.throwIfDisposed(),ph(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Ca(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.greater=function(n){return this.throwIfDisposed(),ws(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.ifft=function(){return this.throwIfDisposed(),Bc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.irfft=function(){return this.throwIfDisposed(),uy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.isFinite=function(){return this.throwIfDisposed(),_w(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.isInf=function(){return this.throwIfDisposed(),Tw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.isNaN=function(){return this.throwIfDisposed(),Iw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.leakyRelu=function(n){return this.throwIfDisposed(),ef(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.lessEqual=function(n){return this.throwIfDisposed(),vo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.less=function(n){return this.throwIfDisposed(),j0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),Cw(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.logSigmoid=function(){return this.throwIfDisposed(),Mw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.logSoftmax=function(n){return this.throwIfDisposed(),J0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),q0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.log=function(){return this.throwIfDisposed(),ei(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.log1p=function(){return this.throwIfDisposed(),tf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Vi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.logicalNot=function(){return this.throwIfDisposed(),nf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.logicalOr=function(n){return this.throwIfDisposed(),ey(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.logicalXor=function(n){return this.throwIfDisposed(),Ew(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),pt(this,n,e,t)};le().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),sf(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.max=function(n,e){return this.throwIfDisposed(),mi(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.maximum=function(n){return this.throwIfDisposed(),Wr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.mean=function(n,e){return this.throwIfDisposed(),nn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.min=function(n,e){return this.throwIfDisposed(),Vc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.minimum=function(n){return this.throwIfDisposed(),fh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),Nw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.mod=function(n){return this.throwIfDisposed(),Rw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.mul=function(n){return this.throwIfDisposed(),Z(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.neg=function(){return this.throwIfDisposed(),Kt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.norm=function(n,e,t){return this.throwIfDisposed(),hh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.notEqual=function(n){return this.throwIfDisposed(),xl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Wc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.onesLike=function(){return this.throwIfDisposed(),ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.pad=function(n,e){return this.throwIfDisposed(),Ma(this,n,e)};le().prototype.pool=function(n,e,t,s,i,r){return this.throwIfDisposed(),Aw(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.pow=function(n){return this.throwIfDisposed(),ga(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.prelu=function(n){return this.throwIfDisposed(),of(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.prod=function(n,e){return this.throwIfDisposed(),Lw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.reciprocal=function(){return this.throwIfDisposed(),Dw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.relu=function(){return this.throwIfDisposed(),hr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.relu6=function(){return this.throwIfDisposed(),ny(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.reshapeAs=function(n){return this.throwIfDisposed(),K(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.reshape=function(n){return this.throwIfDisposed(),K(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),wk(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),Sk(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.reverse=function(n){return this.throwIfDisposed(),bi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.rfft=function(){return this.throwIfDisposed(),df(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.round=function(){return this.throwIfDisposed(),sy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.rsqrt=function(){return this.throwIfDisposed(),iy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.selu=function(){return this.throwIfDisposed(),ry(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.separableConv2d=function(n,e,t,s,i,r){return this.throwIfDisposed(),ay(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.sigmoid=function(){return this.throwIfDisposed(),nr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.sign=function(){return this.throwIfDisposed(),Fw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.sin=function(){return this.throwIfDisposed(),oy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.sinh=function(){return this.throwIfDisposed(),ly(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.slice=function(n,e){return this.throwIfDisposed(),St(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.softmax=function(n){return this.throwIfDisposed(),uf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.softplus=function(){return this.throwIfDisposed(),Fl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),af(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.split=function(n,e){return this.throwIfDisposed(),Rs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.sqrt=function(){return this.throwIfDisposed(),jn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.square=function(){return this.throwIfDisposed(),Pt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.squaredDifference=function(n){return this.throwIfDisposed(),hy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.squeeze=function(n){return this.throwIfDisposed(),wo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Ct?[this,n]:[this,...n];return bs(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.step=function(n){return this.throwIfDisposed(),zl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.stridedSlice=function(n,e,t,s,i,r,a,o){return this.throwIfDisposed(),Ow(this,n,e,t,s,i,r,a,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.sub=function(n){return this.throwIfDisposed(),De(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.sum=function(n,e){return this.throwIfDisposed(),Oe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.tan=function(){return this.throwIfDisposed(),zw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.tanh=function(){return this.throwIfDisposed(),yl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.tile=function(n){return this.throwIfDisposed(),di(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.toBool=function(){return this.throwIfDisposed(),we(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.toFloat=function(){return this.throwIfDisposed(),we(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.toInt=function(){return this.throwIfDisposed(),we(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.topk=function(n,e){return this.throwIfDisposed(),Vw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.transpose=function(n){return this.throwIfDisposed(),bt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.unique=function(n){return this.throwIfDisposed(),Ww(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),py(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.unstack=function(n){return this.throwIfDisposed(),xi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.where=function(n,e){return this.throwIfDisposed(),os(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */le().prototype.zerosLike=function(){return this.throwIfDisposed(),_t(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Oa=class yN extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yN.prototype)}},Cr=class bN extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bN.prototype)}};class Y extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Y.prototype)}}let lt=class xN extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xN.prototype)}},L4=class vN extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vN.prototype)}};/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wN{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sl(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function wr(n,e){if(!n)throw new L4(e)}function nC(n,e){let t=0;for(const s of n)s===e&&t++;return t}function ks(n){return n.length===1?n[0]:n}function Xt(n){return Array.isArray(n)?n:[n]}function ea(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Xo(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Ti={};function kS(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function N1(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>N1(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:N1(s))}}}function yf(n,e={},t={},s="object",i=!1){if(typeof n=="string"){const r=n;let a;if(r in t)a=t[r];else if(r in Ti)a=Ti[r];else if(a=e[r],a==null)throw new Y(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const r=n;if(r.className==null||r.config==null)throw new Y(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const a=r.className;let o,l;if(a in t?[o,l]=t[a]:a in Ti?[o,l]=Ti.className:a in e&&([o,l]=e[a]),o==null)throw new Y(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(Ti))c[p]=Ti[p];for(const p of Object.keys(t))c[p]=t[p];const u=r.config;u.customObjects=c;const h=Object.assign({},Ti);for(const p of Object.keys(t))Ti[p]=t[p];N1(r.config);const d=l(o,r.config,t,i);return Ti=Object.assign({},h),d}else{const c=Object.assign({},Ti);for(const h of Object.keys(t))Ti[h]=t[h];const u=new o(r.config);return Ti=Object.assign({},c),u}}}function P4(n,e){return n<e?-1:n>e?1:0}function am(n,e){return-1*P4(n,e)}function eo(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function D4(n){if(n==null)throw new Y(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Wl(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new Y(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function NS(n,e,t=0,s=1/0){return wr(t>=0),wr(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(i=>typeof i===e)}function zn(n,e){Array.isArray(n)?(E(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>zn(t,`element ${s+1} of ${e}`))):E(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${SN(n)}.`)}function SN(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>SN(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function F4(n,e,t){let s=t!=null?t():Zn(),i;return(...r)=>{const a=t!=null?t():Zn();return a-s<e||(s=a,i=n(...r)),i}}function _N(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let O4=0;function TN(){return O4++}const om={};function ky(n=""){return n in om||(om[n]=0),om[n]+=1,n+om[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const z4=["channelsFirst","channelsLast"],G4=["nearest","bilinear"],V4=["valid","same","causal"],W4=["max","avg"],$4=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const uc=new Map;function bn(n){Wl(z4,"DataFormat",n)}function U4(n){Wl(G4,"InterpolationFormat",n)}function wi(n){Wl(V4,"PaddingMode",n)}function IN(n){Wl(W4,"PoolMode",n)}const rd=[],sC="/";function il(n,e){rd.push(n);try{const t=e();return rd.pop(),t}catch(t){throw rd.pop(),t}}function B4(){return rd.length===0?"":rd.join(sC)+sC}function CN(n){if(!EN(n))throw new Error("Not a valid tensor name: '"+n+"'");return B4()+n}function MN(n){if(!EN(n))throw new Error("Not a valid tensor name: '"+n+"'");uc.has(n)||uc.set(n,0);const e=uc.get(n);if(uc.set(n,uc.get(n)+1),e>0){const t=`${n}_${e}`;return uc.set(t,1),t}else return n}const X4=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function EN(n){return!!n.match(X4)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function H4(n){return n===parseInt(n.toString(),10)}function to(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let i=e;i<t;++i)s*=n[i];return s}function Xc(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function lo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function ar(n,e){if(e<n)throw new Y(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let ux;function Nn(){return ux==null&&(ux=la().epsilon()),ux}function or(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ba(n,e){return we(n,e)}function bf(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),K(n,t)}function Z4(n,e){return Q(()=>{if(n.shape.length!==2)throw new Y(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=bf(n,1);return R1(t,[1,e,1])})}function K4(n){const e=[to(n.shape)];return K(n,e)}function Y4(n){if(n.rank<=1)throw new Y(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],to(n.shape,1)];return K(n,e)}function rl(n,e,t){return Q(()=>{switch(n.rank){case 1:return lf(n,e,t);case 2:return cy(n,[e,0],[t,n.shape[1]]);case 3:return cf(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Uc(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return St(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return St(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new Y(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function hx(n,e,t){return Q(()=>{switch(n.rank){case 1:return lf(n,e,t);case 2:return cy(n,[0,e],[n.shape[0],t]);case 3:return cf(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Uc(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function lm(n,e,t,s){return Q(()=>{switch(n.rank){case 1:return lf(n,e,t);case 2:switch(s){case 1:return rl(n,e,t);case 2:return hx(n,e,t);default:throw new Y(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return rl(n,e,t);case 2:return cf(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return hx(n,e,t);default:throw new Y(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return rl(n,e,t);case 2:return Uc(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Uc(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return hx(n,e,t);default:throw new Y(`The axis is not within the rank of the tensor ${s}`)}default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function RS(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),mn(n,e)}function iC(n,e){switch(n.rank){case 1:return lw([n,e]);case 2:return cw([n,e],0);case 3:return uw([n,e],0);case 4:return hw([n,e],0);default:throw new Y(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function R1(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new Y(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return di(n,e)}function Ny(n,e=0,t=1,s,i){return ty(n,e,t,s,i)}function Lr(n,e,t,s){if(n.rank<2||e.rank<2)throw new lt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const i=n.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(i!==r)throw new lt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return C1({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?A1(n.rank,s,or()):null,activation:t});{const i=n.shape.slice(),r=i.pop();n=K(n,[-1,r]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),c=[...a,o],u=Array.from({length:e.rank},(d,p)=>p===0?e.rank-2:p<=e.rank-2?p-1:p);e=K(bt(e,u),[l,-1]);const h=[...i,...c];return K(C1({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?A1(n.rank,s,or()):null,activation:t}),h)}}function kN(n,e,t){return Q(()=>(Array.isArray(e)?e=as(e,"int32"):e=we(e,"int32"),ph(n,e,t)))}function xf(n){return Z(n,n)}function A1(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new Y(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1,1,1]):K(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,1,1,s[0]]):K(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1,1]):K(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,1,s[0]]):K(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1]):K(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,s[0]]):K(e,[1].concat(s))}else if(n<3)return e;throw new Y(`Unsupported input rank by biasAdd: ${e.rank}`)}function dr(n,e,t){return Q(()=>(t==null&&(t=or()),bn(t),he(n,A1(n.rank,e,t))))}function j4(n,e=1){if(e!==1)throw new lt(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return uh(n)}function Q4(n){return Q(()=>We(n,he(vn(n),1)))}function NN(n,e,t,s){return Q(()=>Xw(n,e,t,s))}function J4(n){return Q(()=>{const e=he(.5,Z(.2,n));return Ls(e,0,1)})}function vf(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const q4=["fanIn","fanOut","fanAvg"],e9=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function t9(n){Wl(q4,"FanMode",n)}function n9(n){Wl(e9,"Distribution",n)}let Bi=class extends Gl{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}};class AS extends Bi{apply(e,t){return Sn(e,t)}}AS.className="Zeros";de(AS);let Ry=class extends Bi{apply(e,t){return Hs(e,t)}};Ry.className="Ones";de(Ry);class LS extends Bi{constructor(e){if(super(),typeof e!="object")throw new Y(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new Y(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Q(()=>Z(Ze(this.value),Hs(e,t)))}getConfig(){return{value:this.value}}}LS.className="Constant";de(LS);class PS extends Bi{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return gh(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}PS.className="RandomUniform";de(PS);class DS extends Bi{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new lt(`randomNormal does not support dType ${t}.`);return Ny(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}DS.className="RandomNormal";de(DS);class FS extends Bi{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new lt(`truncatedNormal does not support dType ${t}.`);return dy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}FS.className="TruncatedNormal";de(FS);class OS extends Bi{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Q(()=>{if(e.length!==2||e[0]!==e[1])throw new Y("Identity matrix initializer can only be used for 2D square matrices.");return Z(this.gain,Y0(e[0]))})}getConfig(){return{gain:this.gain}}}OS.className="Identity";de(OS);function s9(n,e="channelsLast"){let t,s;if(bn(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const i=to(n,2);t=n[1]*i,s=n[0]*i}else if(e==="channelsLast"){const i=to(n,0,n.length-2);t=n[n.length-2]*i,s=n[n.length-1]*i}}else{const i=to(n);t=Math.sqrt(i),s=Math.sqrt(i)}return[t,s]}let Ps=class extends Bi{constructor(e){if(super(),e.scale<0)throw new Y(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,t9(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,n9(this.distribution),this.seed=e.seed}apply(e,t){const s=s9(e),i=s[0],r=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,i):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(i+r)/2),this.distribution==="normal"){const o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new lt(`${this.getClassName()} does not support dType ${t}.`);return dy(e,0,o,t,this.seed)}else{const o=Math.sqrt(3*a);return gh(e,-o,o,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Ps.className="VarianceScaling";de(Ps);let Ay=class extends Ps{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ps.className}};Ay.className="GlorotUniform";de(Ay);let Ly=class extends Ps{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ps.className}};Ly.className="GlorotNormal";de(Ly);let Py=class extends Ps{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ps.className}};Py.className="HeNormal";de(Py);let Dy=class extends Ps{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ps.className}};Dy.className="HeUniform";de(Dy);let Fy=class extends Ps{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ps.className}};Fy.className="LeCunNormal";de(Fy);let Oy=class extends Ps{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ps.className}};Oy.className="LeCunUniform";de(Oy);class zS extends Bi{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new lt("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Q(()=>{if(e.length<2)throw new lt("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,i=Ny(s,0,1,"float32");let r=Yw.gramSchmidt(i);return e[0]>e[1]&&(r=bt(r)),Z(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}zS.className="Orthogonal";de(zS);const rC={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function aC(n,e={}){return yf(n,Vl.getMap().classNameMap,e,"initializer")}function sn(n){return kS(n)}function qt(n){if(typeof n=="string"){const e=n in rC?rC[n]:n;if(e==="GlorotNormal")return new Ly;if(e==="GlorotUniform")return new Ay;if(e==="HeNormal")return new Py;if(e==="HeUniform")return new Dy;if(e==="LeCunNormal")return new Fy;if(e==="LeCunUniform")return new Oy;{const t={};return t.className=e,t.config={},aC(t)}}else return n instanceof Bi?n:aC(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function L1(n){return Array.isArray(n)&&Array.isArray(n[0])}function Qm(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Je(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new Y(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function kt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new Y(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jm(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,i)=>s*i);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const oC="Variable";class RN{constructor(e,t="float32",s=oC,i=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=TN(),s=s??oC,this.originalName=CN(s),this.name=MN(this.originalName),this.trainable_=i,this.constraint=r,this.val=$w(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),i9(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function i9(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function P1(n){return n.map(e=>e.read())}function GS(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _n{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}let er=class{constructor(e,t,s,i,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=i,this.callArgs=r,this.outputTensorIndex=o,this.id=TN(),a!=null&&(this.originalName=CN(a),this.name=MN(this.originalName)),this.rank=t.length}},r9=0;class zy{constructor(e,t){this.callArgs=t,this.id=r9++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let a9=0,yt=class extends Gl{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=a9++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=ea(s)+"_"+ky(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let i=e.dtype;i==null&&(i=e.inputDType),i==null&&(i="float32"),this.dtype=i}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Cr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Y(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ks(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ks(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Oa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Oa(`Layer ${this.name} is not connected, no input to return.`);return ks(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Oa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Oa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ks(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Xt(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=Xt(this.inputSpec);if(e.length!==t.length)throw new Y(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const i=e[s],r=t[s];if(r==null)continue;const a=i.rank;if(r.ndim!=null&&a!==r.ndim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&i.dtype!==r.dtype)throw new Y(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${i.dtype}.`);if(r.axes){const o=i.shape;for(const l in r.axes){const c=Number(l),u=r.axes[l],h=c>=0?o[c]:o[o.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){const l=r.shape[o],c=i.shape[o];if(l!=null&&c!=null&&l!==c)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Xt(e);let i=!0;for(const a of s)if(!(a instanceof er)){i=!1;break}let r=!0;for(const a of s)if(a instanceof er){r=!1;break}if(i===r)throw new Y("Arguments to apply() must be all SymbolicTensors or all Tensors");return il(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const o of Xt(e))a.push(o.shape);this.build(ks(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);const o=Xt(a),l=[];for(let c of o)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(a=ks(l),this.activityRegularizer!=null)throw new lt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=o9(e),o=this.computeOutputShape(a);let l;const c=l9(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((u,h)=>new er(c,u,this,Xt(e),t,this.name,h)):l=new er(c,o,this,Xt(e),t,this.name),this.addInboundNode(e,l,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new lt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,i)=>{s!=null&&e[i]!=null&&e[i]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Oa(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Oa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Cr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Jm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return P1(e?this.trainableWeights:this.weights)}setWeights(e){Q(()=>{const t=this.weights;if(t.length!==e.length)throw new Y(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],i=P1(t);for(let r=0;r<i.length;++r){const a=i[r],o=t[r],l=e[r];if(!vt(a.shape,l.shape))throw new Y(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}GS(s)})}addWeight(e,t,s,i,r,a,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new Y(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(i=l!=null?l():qt("zeros"));const c=i.apply(t,s),u=new RN(c,s,e,a,o);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Xt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,i,r,a,o=null){const l=Xt(e);t=Xt(t),s=Xt(s),i=Xt(i),r=Qm(r),a=Qm(a);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new zy({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:i,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function o9(n){n=Xt(n);const e=[];for(const t of n)e.push(t.shape);return ks(e)}function l9(n){return"float32"}function AN(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const i=[];for(let r=0;r<s.inboundLayers.length;r++){const a=s.inputTensors[r],o=s.inboundLayers[r],l=s.nodeIndices[r],c=AN(a,o,l);for(const u of c)i.indexOf(u)===-1&&i.push(u)}return i}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xh extends yt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:ky("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new Y("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new Y("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new Y("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const i=new er(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new zy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Y(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}xh.className="InputLayer";de(xh);function LN(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new Y("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new xh({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function c9(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return we(e,n.dtype)}catch{throw new Y(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class $a{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof $a)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=c9(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new Y(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof er){if(this.id2Value[e.id]==null)throw new Y(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new Y(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof er){if(this.id2Value[e.id]==null)throw new Y(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new Y(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&nt(this.id2Mask)}}const qm=new wN,eg=new wN;function u9(n){qm!=null&&qm.setMaxEntries(n),eg!=null&&eg.setMaxEntries(n)}function Jh(n,e,t,s){const i=t==null?!1:t.training,r=Array.isArray(n),a=r?n:[n],o=a.map(m=>m.name),l=[],c=e.names();for(const m of o)c.indexOf(m)!==-1?l.push(e.getValue(m)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const u=o.join(",")+"|"+e.names().sort().join(",");let h=qm.get(u),d;if(h==null){const m=h9(a,e);h=m.sorted,d=m.recipientCounts,qm.put(u,h),eg.put(u,d)}d={},i||Object.assign(d,eg.get(u));const p=new $a(e);for(let m=0;m<h.length;++m){if(s!=null){const S=vd().numTensors;S>s.maxNumTensors&&(s.maxNumTensors=S),S<s.minNumTensors&&(s.minNumTensors=S)}const g=h[m],f=g.sourceLayer;if(f instanceof xh)continue;const y=[],b=[],x=[];let v=!1;for(const S of g.inputs){const M=p.getValue(S),A=p.getMask(S);y.push(M),b.push(A),A!=null&&(v=!0),i||(d[S.name]--,d[S.name]===0&&!e.hasKey(S)&&o.indexOf(S.name)===-1&&!M.isDisposed&&S.sourceLayer.stateful!==!0&&x.push(M))}v&&(t=t||{},t.mask=b[0]);const w=Xt(f.apply(y,t));let _=null;f.supportsMasking&&(_=f.computeMask(y,b));const T=p9(g),C=Array.isArray(T)?T:[T];for(let S=0;S<C.length;++S){p.hasKey(C[S])||p.add(C[S],w[S],Array.isArray(_)?_[0]:_);const M=o.indexOf(C[S].name);M!==-1&&(l[M]=w[S])}i||nt(x)}return p.disposeMasks(),r?l:l[0]}function h9(n,e){E(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const i=lC(n[0],e);t=i.sorted,s=i.recipientMap}else{const i=new Set;for(const r of n){const{sorted:a,recipientMap:o}=lC(r,e);for(const l of a)i.has(l.name)||(t.push(l),i.add(l.name));for(const l in o)s[l]==null&&(s[l]=new Set),o[l].forEach(c=>s[l].add(c))}}return{sorted:t,recipientCounts:d9(s)}}function d9(n){const e={};for(const t in n)e[t]=n[t].size;return e}function lC(n,e){const t=new Set,s=[],i={};for(const o of e.names())t.add(o);const r=[],a=[];for(r.push(n);r.length>0;){const o=r[r.length-1];if(t.has(o.name)){r.pop();continue}const l=a[a.length-1]===r.length-1;if(o.inputs.length===0||l)r.pop(),s.push(o),t.add(o.name),l&&a.pop();else{a.push(r.length-1);for(const c of o.inputs)i[c.name]==null&&(i[c.name]=new Set),i[c.name].add(o.name),!t.has(c.name)&&r.push(c)}}return{sorted:s,recipientMap:i}}function p9(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const i of n.sourceLayer.inboundNodes[s].outputTensors)if(i.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f9=q();f9.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,u9);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function VS(n,e){return Q(()=>jn(Oe(Z(n,n),e,!0)))}class wf extends Gl{getConfig(){return{}}}class WS extends wf{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=VS(e,this.axis),s=Ls(t,0,this.maxValue);return Z(e,We(s,he(Nn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}WS.className="MaxNorm";de(WS);class $S extends wf{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>We(e,he(Nn(),VS(e,this.axis))))}getConfig(){return{axis:this.axis}}}$S.className="UnitNorm";de($S);class US extends wf{apply(e){return hr(e)}}US.className="NonNeg";de(US);class BS extends wf{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=VS(e,this.axis),s=he(Z(this.rate,Ls(t,this.minValue,this.maxValue)),Z(1-this.rate,t));return Z(e,We(s,he(Nn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}BS.className="MinMaxNorm";de(BS);const cC={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function An(n){return kS(n)}function uC(n,e={}){return yf(n,Vl.getMap().classNameMap,e,"constraint")}function Ln(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in cC?cC[n]:n,config:{}};return uC(e)}else return n instanceof wf?n:uC(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Fa(n){if(n==null)return;const e=[],t=[],s=[];for(const i in n){const r=n[i];if(typeof r!="number"){const a=r;e.push(a.data()),t.push(i),s.push(a)}}if(e.length>0){const i=await Promise.all(e);for(let r=0;r<i.length;++r)n[t[r]]=i[r][0];nt(s)}}function PN(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var hC;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(hC||(hC={}));const m9=125;let Hc=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}};class DN{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class g9 extends Hc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const i in t){const r=t[i];if(typeof r=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+r*s;else{let a;i in this.totals?a=this.totals[i]:this.totals[i]=0;const o=Q(()=>he(this.totals[i],Z(r,s)));this.totals[i]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:Q(()=>{const i=Z(We(1,this.seen),this.totals[s]);t[s]=i,this.totals[s].dispose(),cn(t[s])}))}}class FN extends Hc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const r in this.history){const a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){const l=a[o];e.push(l.data()),t.push(r),s.push(o)}}const i=await Promise.all(e);for(let r=0;r<i.length;++r)this.history[t[r]][s[r]].dispose(),this.history[t[r]][s[r]]=i[r][0]}}class ON extends Hc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||pf,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=m9),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Wm(this.yieldEvery)&&(this.maybeWait=F4(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const i=[];this.yield!=null&&(await Fa(s),i.push(this.yield(e,t,s))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Fa(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Fa(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Fa(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Fa(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Wm(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Fa(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Fa(e),await this.trainEnd(e))}}function zN(n,e){return n==null&&(n={}),n instanceof Hc?[n]:Array.isArray(n)&&n[0]instanceof Hc?n:Xt(n).map(t=>new ON(t,e))}let XS=class yr{constructor(){}static registerCallbackConstructor(e,t){E(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),yr.checkForDuplicate(t),yr.constructors[e]==null&&(yr.constructors[e]=[]),yr.constructors[e].push(t)}static checkForDuplicate(e){for(const t in yr.constructors)yr.constructors[+t].forEach(s=>{if(s===e)throw new Y("Duplicate callback constructor.")})}static clear(){yr.constructors={}}static createCallbacks(e){const t=[];for(const s in yr.constructors){const i=+s;e>=i&&t.push(...yr.constructors[i])}return t.map(s=>new s)}};XS.constructors={};function GN(n,e,t,s,i,r,a,o,l){const c=new FN,u=[new g9,...XS.createCallbacks(e)];n!=null&&u.push(...n),u.push(c);const h=new DN(u);return h.setParams({epochs:t,initialEpoch:s,samples:i,steps:r,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sr(n,e={},t=!1){return yf(n,Vl.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tg(n,e){return Q(()=>{n.dtype!=="float32"&&(n=we(n,"float32"));const t=Oe(xf(n),e,!0),s=Dl(t.shape,Nn()),i=jn(Wr(t,s));return We(n,i)})}function $l(n,e){return Q(()=>nn(xf(De(e,n)),-1))}function Gy(n,e){return Q(()=>nn(vn(De(e,n)),-1))}function vh(n,e){return Q(()=>{const t=De(n,e),s=Ls(vn(n),Nn(),Number.MAX_VALUE),i=vn(We(t,s));return Z(100,nn(i,-1))})}function y9(n,e){return Q(()=>{const t=Ls(e,Nn(),Number.MAX_VALUE),s=ei(he(1,t)),i=Ls(n,Nn(),Number.MAX_VALUE),r=ei(he(1,i));return nn(xf(De(s,r)),-1)})}function b9(n,e){return Q(()=>{const t=Wr(0,De(1,Z(n,e)));return nn(xf(t),-1)})}function x9(n,e){return Q(()=>{const t=Wr(0,De(1,Z(n,e)));return nn(t,-1)})}function v9(n,e){return Q(()=>{const t=Oe(Z(n,e),-1),s=mi(Z(De(1,n),e),-1);return Wr(0,he(1,De(s,t)))})}function w9(n,e){return Q(()=>{const t=Math.log(2),s=De(e,n),i=De(he(s,Fl(Z(-2,s))),t);return nn(i,-1)})}function Id(n,e,t=!1){return Q(()=>{if(t)e=uf(e);else{const s=Oe(e,e.shape.length-1,!0);e=We(e,s)}return e=Ls(e,Nn(),1-Nn()),Kt(Oe(Z(we(n,"float32"),ei(e)),e.shape.length-1))})}function ng(n,e,t=!1){return Q(()=>{const s=we(dh(K4(n)),"int32");e=Ls(e,Nn(),1-Nn());const i=e.shape,r=K(Wc(s,i[i.length-1]),i);return Id(r,e,t)})}function S9(n,e){if(!vt(n.shape,e.shape))throw new Y(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return Q(()=>{const t=hr(e),s=Kt(vn(e));return he(De(t,Z(e,n)),tf(qs(s)))})}function Vy(n,e){return Q(()=>{let t;return t=Ls(e,Nn(),1-Nn()),t=ei(We(t,De(1,t))),nn(S9(n,t),-1)})}function _9(n,e){return Q(()=>{const t=Ls(n,Nn(),1),s=Ls(e,Nn(),1);return Oe(Z(n,ei(We(t,s))),-1)})}function T9(n,e){return Q(()=>{const t=ei(he(Nn(),e));return nn(De(e,Z(n,t)),-1)})}function HS(n,e){return Q(()=>{const t=tg(n,-1),s=tg(e,-1),i=Z(t,s);return Kt(Oe(i,-1))})}const sg={meanSquaredError:$l,meanAbsoluteError:Gy,meanAbsolutePercentageError:vh,meanSquaredLogarithmicError:y9,squaredHinge:b9,hinge:x9,categoricalHinge:v9,logcosh:w9,categoricalCrossentropy:Id,sparseCategoricalCrossentropy:ng,binaryCrossentropy:Vy,kullbackLeiblerDivergence:_9,poisson:T9,cosineProximity:HS};function dx(n){if(typeof n=="string"){if(n in sg)return sg[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Y(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZS(n,e){return Q(()=>{const t=Z(.5,ti(e)),s=ba(ws(e,t),n.dtype);return nn(Js(n,s),-1)})}function KS(n,e){return Q(()=>ba(Js(ml(n,-1),ml(e,-1)),"float32"))}function VN(n,e){return Q(()=>we(Oe(Vi(Js(n,1),Js(e,1))),"float32"))}function I9(n,e){return Q(()=>we(Oe(Vi(Js(n,1),Js(e,0))),"float32"))}function C9(n,e){return Q(()=>we(Oe(Vi(Js(n,0),Js(e,1))),"float32"))}function WN(n,e){return Q(()=>{const t=VN(n,e),s=C9(n,e),i=he(t,s);return we(os(ws(i,0),We(t,i),0),"float32")})}function M9(n,e){return Q(()=>{const t=VN(n,e),s=I9(n,e),i=he(t,s);return we(os(ws(i,0),We(t,i),0),"float32")})}function $N(n,e){return Vy(n,e)}function UN(n,e){return n.rank===e.rank&&(n=wo(n,[n.rank-1])),e=ml(e,-1),e.dtype!==n.dtype&&(e=we(e,n.dtype)),we(Js(n,e),"float32")}const E9=$l,k9=$l,N9=Gy,R9=Gy,A9=vh,L9=vh,YS=Id,P9=HS,BN=ng,ig={binaryAccuracy:ZS,categoricalAccuracy:KS,precision:WN,categoricalCrossentropy:YS,sparseCategoricalCrossentropy:BN,mse:E9,MSE:k9,mae:N9,MAE:R9,mape:A9,MAPE:L9,cosine:P9};function D9(n){if(typeof n=="string"&&n in ig)return ig[n];if(typeof n!="string"&&n!=null)return n;throw new Y(`Unknown metric ${n}`)}function cm(n){if(wr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(sg))if(sg[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(ig))if(ig[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function F9(n){const e={Adagrad:()=>Wo.adagrad(.01),Adadelta:()=>Wo.adadelta(1,.95,Nn()),Adam:()=>Wo.adam(.001,.9,.999,Nn()),Adamax:()=>Wo.adamax(.002,.9,.999,Nn(),0),RMSProp:()=>Wo.rmsprop(.001,.9,0,Nn()),SGD:()=>Wo.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new Y(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const dC=1*1024*1024;function pC(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!D1(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>dC&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${dC}.`)}}function D1(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!D1(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!D1(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function O9(n,e,t,s=console.log){const i=G9(n),r=["Layer (type)","Input Shape","Output shape","Param #"];i?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(u=>Math.floor(e*u)));let a;if(!i){r.push("Receives inputs"),a=[];for(const u in n.nodesByDepth)a.push(...n.nodesByDepth[u])}s("_".repeat(e)),rg(r,t,s),s("=".repeat(e));const o=n.layers;for(let u=0;u<o.length;++u)i?V9(o[u],t,s):W9(o[u],t,a,s),s((u===o.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=z9(n),c=Jm(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function z9(n){let e;return n.collectedTrainableWeights!=null?e=Jm(n.collectedTrainableWeights):e=Jm(n.trainableWeights),e}function G9(n){let e=!0;const t=[],s=[];for(const i in n.nodesByDepth)t.push(n.nodesByDepth[i]);for(const i of t){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){e=!1;break}s.push(...i)}if(e)for(const i of n.layers){let r=!1;for(const a of i.inboundNodes)if(s.indexOf(a)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function rg(n,e,t=console.log){let s="";for(let i=0;i<n.length;++i)i>0&&(s=s.slice(0,s.length-1)+" "),s+=n[i],s=s.slice(0,e[i]),s+=" ".repeat(e[i]-s.length);t(s)}function V9(n,e,t){let s,i;try{i=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{i="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,a=n.getClassName(),o=[`${r} (${a})`,i,s,n.countParams().toString()];rg(o,e,t)}function W9(n,e,t,s){let i,r;try{r=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{i=JSON.stringify(n.outputShape)}catch{i="multiple"}const a=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,m=h.nodeIndices[d],g=h.tensorIndices[d];a.push(`${p}[${m}][${g}]`)}const o=n.name,l=n.getClassName(),c=a.length===0?"":a[0],u=[`${o} (${l})`,r,i,n.countParams().toString(),c];rg(u,e,s);for(let h=1;h<a.length;++h)rg(["","","","",a[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XN(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Cd(n,e){if(n===null)return null;if(typeof n=="string")return Xo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let i=0;i<s;++i){const r=n[i];XN(e,i,r)?t.push(r):t.push(Cd(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const i=n[s];if(s==="name"&&typeof i=="string")t[s]=i;else{const r=Xo(s);t[r]=Cd(i,r)}}return t}}function F1(n,e){if(n==null)return null;if(typeof n=="string")return ea(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let i=0;i<s;++i){const r=n[i];XN(e,i,r)?t.push(r):t.push(F1(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const i=n[s],r=ea(s);(s==="name"||s==="className")&&typeof i=="string"?t[r]=i:t[r]=F1(i,s)}return t}}/** @license See the LICENSE file. */const Wy="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let $9=class br extends yt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=ky(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],eo(this.inputs).length!==this.inputs.length)throw new Y(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);eo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const x=b.sourceLayer,v=b.nodeIndex,w=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(w)}for(const b of this.inputs){const x=b.sourceLayer,v=b.nodeIndex,w=b.tensorIndex;wr(v===0,"input layer has >1 nodes"),wr(w===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const x=this.inputLayers[b];if(!(x instanceof xh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const t={},s={},i={},r={},a={},o=[],l=(b,x,v,w,_,T)=>{(w==null||_==null||T==null)&&(w=b.sourceLayer,_=b.nodeIndex,T=b.tensorIndex);const C=w.inboundNodes[_];if(v.indexOf(C)!==-1)throw new Cr(`The tensor ${b.name} at layer "${w.name}" is part of a cycle.`);if(x.indexOf(C)!==-1)return;this.containerNodes.add(br.nodeKey(w,_)),w.id in a||(a[w.id]=Object.keys(a).length),v.indexOf(C)===-1&&v.push(C);const S=C.inboundLayers.length;for(let M=0;M<S;M++){const A=C.inputTensors[M],P=C.inboundLayers[M],D=C.nodeIndices[M],N=C.tensorIndices[M];l(A,x,v,P,D,N)}for(x.push(C);v.indexOf(C)>=0;)v.splice(v.indexOf(C),1);o.push(C)},c=[],u=[];for(const b of this.outputs)l(b,c,u);const h=o.slice().reverse();for(const b of h){s[b.id]=b,b.id in t||(t[b.id]=0);let x=t[b.id];const v=i[b.outboundLayer.id]==null?0:i[b.outboundLayer.id];x=Math.max(x,v),i[b.outboundLayer.id]=x,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=x;for(let w=0;w<b.inboundLayers.length;w++){const _=b.inboundLayers[w],T=b.nodeIndices[w],C=_.inboundNodes[T],S=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(x+1,S),s[C.id]=C}}const d={};for(const b in t){const x=t[b];x in d||(d[x]=[]),d[x].push(s[b])}const p={};for(const b in i){const x=i[b];x in p||(p[x]=[]),p[x].push(r[b])}let m=Object.keys(p).map(b=>parseInt(b,10)).sort(am);this.layers=[];for(const b of m){const x=p[b];x.sort((v,w)=>{const _=a[v.id],T=a[w.id];return _<T?-1:_>T?1:0});for(const v of x)v instanceof br&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,m=Object.keys(d).map(b=>parseInt(b,10)).sort(am);const g=this.inputs.slice(),f=[];for(const b of m)for(const x of d[b]){const v=x.outboundLayer;if(v!=null){for(const w of x.inputTensors)if(g.indexOf(w)===-1)throw new Cr(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${v.name}". The following previous layers were accessed without issue: ${f}`);for(const w of x.outputTensors)g.push(w);f.push(v.name)}}this.nodesByDepth=d;const y=this.layers.map(b=>b.name);for(const b of y){const x=y.filter(v=>v===b).length;if(x!==1)throw new Cr(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new zy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Y("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let i=0;for(const a of this.layers)for(const o of a.weights){if(s[o.originalName]!=null)throw new Y(`Duplicate weight name: ${o.originalName}`);s[o.originalName]=o,i++}const r=[];for(const a in e){let o=a;if(s[a]==null){const l=a.split("/");o=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[o]!=null)r.push([s[o],e[a]]);else if(t)throw new Y(`Provided weight data has no target variable: ${a}`);delete s[o]}if(t){const a=[];for(const o in s)a.push(o);if(a.length>0)throw new Y(`${a.length} of ${i} weights are not set: ${a}`)}GS(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Wy}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=F1(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return Q(()=>{e=Xt(e);const s=new $a;for(let i=0;i<this.inputs.length;++i)s.add(this.inputs[i],e[i]);return Jh(this.outputs,s,t)})}computeMask(e,t){return Q(()=>{e=Xt(e);let s;return t==null?s=Sl(null,e.length):s=Xt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=Qm(e);if(t.length!==this.inputLayers.length)throw new Y(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let o=0;o<t.length;o++){const l=this.inputLayers[o],c=t[o],u=l.name+"_0_0";s[u]=c}const i=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(am);if(i.length>1)for(const o of i){const l=this.nodesByDepth[o];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(u.id)!==-1)continue;const h=[];for(let g=0;g<c.inboundLayers.length;g++){const f=c.inboundLayers[g],y=c.nodeIndices[g],b=c.tensorIndices[g],x=`${f.name}_${y}_${b}`,v=s[x];h.push(v)}const d=u.computeOutputShape(ks(h)),p=Qm(d),m=u.inboundNodes.indexOf(c);for(let g=0;g<p.length;g++){const f=`${u.name}_${m}_${g}`;s[f]=p[g]}}}const r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],c=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],h=`${l.name}_${c}_${u}`;a.push(h)}for(let o=0;o<a.length;o++){const l=a[o];wr(l in s),r.push(s[l])}return ks(r)}runInternalGraph(e,t){t==null&&(t=Sl(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=e[l],h=t[l];s[c.id]=[u,h]}const i=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(am);for(const l of i){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,m=new Array;for(const g of d)g.id in s&&m.push(s[g.id]);if(m.length===d.length){let g={},f,y,b,x;if(u.callArgs!=null&&(g=u.callArgs),m.length===1){const[v,w]=m[0];g.mask==null&&(g.mask=w),b=Xt(h.call(v,g)),x=Xt(h.computeMask(v,w)),f=[v],y=[w]}else f=m.map(v=>v[0]),y=m.map(v=>v[1]),g.mask==null&&(g.mask=y),b=Xt(h.call(f,g)),x=Xt(h.computeMask(f,y));if(h.activityRegularizer)throw new lt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){const w=p[v],_=b[v],T=x[v];s[w.id]=[_,T]}}}}const r=[],a=[],o=[];for(const l of this.outputs){wr(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];o.push(c.shape),r.push(c),a.push(u)}return[r,a,o]}buildNodeConversionMap(e){const t={};let s;for(const i of this.layers){s=i instanceof br?1:0;for(let r=0;r<i.inboundNodes.length;r++){const a=br.nodeKey(i,r);this.containerNodes.has(a)&&(t[a]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new Y(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new Y("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new Y(`No such layer: ${e}`)}calculateLosses(){return Q(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const i=br.nodeKey(t,s);this.containerNodes.has(i)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const o=a.getClassName(),l=a.getConfig(),c=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],p=br.nodeKey(a,h);let m={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),m=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(d.inboundLayers.length>0){const g=[];for(let f=0;f<d.inboundLayers.length;f++){const y=d.inboundLayers[f],b=d.nodeIndices[f],x=d.tensorIndices[f],v=br.nodeKey(y,b);let w=t[v];w==null&&(w=0),g.push([y.name,w,x,m])}c.push(g)}}}const u={};u.name=a.name,u.className=o,u.config=l,u.inboundNodes=c,s.push(u)}e.layers=s;const i=[];for(let a=0;a<this.inputLayers.length;a++){const o=this.inputLayers[a],l=this.inputLayersNodeIndices[a],c=br.nodeKey(o,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[a];i.push([o.name,u,h])}e.inputLayers=i;const r=[];for(let a=0;a<this.outputLayers.length;a++){const o=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=br.nodeKey(o,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[a];r.push([o.name,u,h])}return e.outputLayers=r,e}static fromConfig(e,t,s={},i=!1){const r={},a={};function o(f,y){f.name in a?a[f.name].push(y):a[f.name]=[y]}function l(f,y){const b=[];let x;for(const v of y){const w=v[0],_=v[1],T=v[2];if(x=v[3]==null?{}:v[3],!(w in r)){o(f,y);return}const C=r[w];if(C.inboundNodes.length<=_){o(f,y);return}const S=C.inboundNodes[_];b.push(S.outputTensors[T])}b.length>0&&f.apply(ks(b),x)}function c(f){const y=f.name,b=sr(f,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(i),r[y]=b,f.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new Y(`Corrupted configuration, expected array for nodeData: ${x}`);o(b,x)})}const u=t.name,h=t.layers;for(const f of h)c(f);for(;!D4(a);)for(const f of h){const y=r[f.name];if(y.name in a){const b=a[y.name];delete a[y.name];for(const x of b)l(y,x)}}const d=[],p=[],m=t.inputLayers;for(const f of m){const y=f[0],b=f[1],x=f[2];wr(y in r);const v=r[y].inboundNodes[b].outputTensors;d.push(v[x])}const g=t.outputLayers;for(const f of g){const y=f[0],b=f[1],x=f[2];wr(y in r);const v=r[y].inboundNodes[b].outputTensors;p.push(v[x])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Y("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Q(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function U9(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(i=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const i=[];return e.forEach(r=>{r in n?i.push(n[r]):i.push(null)}),i}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function HN(n,e){return U9(n,e,"classWeight")}async function ZN(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const i=Q(()=>{if(n.shape.length===1)return Rr(n);if(n.shape.length===2){if(n.shape[1]>1)return ml(n,1);if(n.shape[1]===1)return K(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await i.data());nt(i);const a=[];return r.forEach(o=>{if(t[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);a.push(t[o])}),as(a,"float32")}else return null}function B9(n,e){return Z(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const X9=32;function KN(n,e){let t,s;const i=e;t=i.xs,s=i.ys,E(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=fC("input",n.inputNames,t),a=fC("output",n.outputNames,s),o=r[0].shape[0];E(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),E(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<r.length;l++)E(r[l].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${r[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)E(a[l].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:r,ys:a}}function fC(n,e,t){if(t instanceof Ct)return[t];if(Array.isArray(t))return E(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const i of e){if(t[i]==null)throw new Y(`The feature data generated by the dataset lacks the required ${n} key '${i}'.`);s.push(t[i])}return s}}function H9(n){if(n.length===3)throw new lt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function Z9(n,e,t){const s=t.batchesPerEpoch!=null;if(E(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),E(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),E(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),E(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),E(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const i=t.validationData!=null;let r,a;if(i)if(mC(t.validationData))E(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const f=H9(t.validationData);r=f.xs,a=f.ys}const o=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;i?c=l.slice().concat(l.map(f=>"val_"+f)):c=l.slice();const u=zN(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=GN(u,h,t.epochs,null,null,K9(e,t),null,i,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let m=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;m<t.epochs;){const f={};await d.onEpochBegin(m);let y=0,b=0;for(s||(g=await e.iterator());!s||y<t.batchesPerEpoch;){const x=await g.next();if(s&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){const{xs:v,ys:w}=KN(n,x.value),_={};_.batch=b,_.size=v[0].shape[0],await d.onBatchBegin(b,_);const T=[];if(t.classWeight!=null){const M=HN(t.classWeight,n.outputNames);for(let A=0;A<M.length;++A)T.push(await ZN(w[A],null,M[A]))}const C=v.concat(w).concat(T),S=o(C);nt(C);for(let M=0;M<l.length;++M){const A=l[M],P=S[M];_[A]=P,cn(P)}await d.onBatchEnd(b,_),PN(_),b++,y++}if(s?y>=t.batchesPerEpoch:x.done){if(i){let v;mC(t.validationData)?v=Xt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):v=Xt(n.evaluate(r,a,{batchSize:t.validationBatchSize==null?X9:t.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)f[`val_${n.metricsNames[w]}`]=v[w]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(m,f),m++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function K9(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function mC(n){return typeof n.iterator=="function"}function Y9(n){return typeof n.next=="function"}async function j9(n,e,t){t=t||{};const s=t.batches!=null,i=n.testFunction;let r=[];if(t.verbose>0)throw new lt("Verbose mode is not implemented yet.");E(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=Y9(e)?e:await e.iterator();let o=0,l=0;for(;!s||l<t.batches;){const c=await a.next();if(r=Q(()=>{if(c.value){const{xs:u,ys:h}=KN(n,c.value),d=u.concat(h),p=Q(()=>i(d));if(nt(d),l===0)for(let g=0;g<p.length;++g)r.push(Ze(0));const m=d[0].shape[0];for(let g=0;g<p.length;++g){const f=p[g],y=r[g];r[g]=Q(()=>he(r[g],Z(m,f))),l>0&&nt(y)}nt(p),o+=m,++l}return r}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=We(r[c],o),nt(u)}return ks(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function px(n){E(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Wh(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>rl(s,e,t-e)):rl(n,e,t-e)}function O1(n,e){return Q(()=>n==null?null:Array.isArray(n)?n.map(t=>O1(t,e)):kN(n,e.dtype==="int32"?e:we(e,"int32")))}function fx(n,e){const t=[];let s=0,i=null;for(;s<n;)i=s+e,i>=n&&(i=n),t.push([s,i]),s=i;return t}function YN(n){const e=[];n instanceof Ct&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(bf(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Ki(n,e){if(n==null)return;const t=[];if(e instanceof Ct)t.push(e.id);else if(Array.isArray(e))e.forEach(i=>t.push(i.id));else if(e!=null)for(const i in e){const r=e[i];t.push(r.id)}const s=[];if(n instanceof Ct)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(i=>{t.indexOf(i.id)===-1&&s.push(i)});else if(n!=null)for(const i in n){const r=n[i];t.indexOf(r.id)===-1&&s.push(r)}s.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Q9(n){return n instanceof Ct}function z1(n){return Array.isArray(n)}function gC(n){return!Q9(n)&&!z1(n)}function yC(n,e,t,s=!0,i=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(z1(n)&&n.length>0)a=!0;else if(gC(n)){for(const o in n)if(n.hasOwnProperty(o)){a=!0;break}}else a=!0;if(a)throw new Y(`Error when checking model ${i} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let r;if(gC(n)){n=n,r=[];for(const a of e){if(n[a]==null)throw new Y(`No data provided for "${a}". Need data for each key in: ${e}`);r.push(n[a])}}else if(z1(n)){if(n=n,n.length!==e.length)throw new Y(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,e.length>1)throw new Y(`The model ${i} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=YN(r),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=r[a];if(o.shape.length!==t[a].length)throw new Y(`Error when checking ${i}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!s)continue;const c=o.shape[l],u=t[a][l];if(u!=null&&u>=0&&c!==u)throw new Y(`${i} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${i} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return r}function J9(n,e,t){const s=eo(n.map(r=>r.shape[0]));s.sort();const i=eo(e.map(r=>r.shape[0]));if(i.sort(),s.length>1)throw new Y(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(i.length>1)throw new Y(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&i.length>0&&!vt(s,i))throw new Y(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${i[0]} target sample(s).`)}function q9(n,e,t){const s=[$l,Vy,Id];for(let i=0;i<n.length;++i){const r=n[i],a=e[i],o=t[i];if(a!=null){if(a===Id&&r.shape[r.shape.length-1]===1)throw new Y(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const l=r.shape.slice(1),c=o.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new Y(`A target Tensor with shape ${r.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function bC(n,e,t,s=!0,i=""){let r;if(Array.isArray(n)){if(n.length!==e.length)throw new Y(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(e.length>1)throw new Y(`The model expects ${e.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=r[a];if(o.shape.length!==t[a].length)throw new Y(`Error when checking ${i}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!s)continue;const c=o.shape[l],u=t[a][l];if(u!=null&&u!==c)throw new Y(`Error when checking ${i}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function eY(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const i of e){let r=t.hasOwnProperty(i)?t[i]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const tY="layers-model";class ca extends $9{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new Y("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");O9(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=F9(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ka))throw new Y("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new Y(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(dx(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Y(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>dx(a))}else{const a=dx(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const o=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],il("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const i=eY(e.metrics,this.outputNames),r=(a,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,a])};il("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=i[a];(l=>{const c="";let u,h,d;for(const p of l){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Vy?["accuracy","acc"].indexOf(p)!==-1?h=ZS:["crossentropy","ce"].indexOf(p)!==-1&&(h=$N):this.lossFunctions[a]===ng?["accuracy","acc"].indexOf(p)!==-1?h=UN:["crossentropy","ce"].indexOf(p)!==-1&&(h=BN):["accuracy","acc"].indexOf(p)!==-1?h=KS:["crossentropy","ce"].indexOf(p)!==-1&&(h=YS);let f;["accuracy","acc"].indexOf(p)!==-1?f="acc":["crossentropy","ce"].indexOf(p)!==-1&&(f="ce"),d=h,u=c+f}else d=D9(p),u=c+cm(p);let m;il(u,()=>{m=d}),r(a,u,m)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const i=s.batchSize==null?32:s.batchSize;px(i);const r=!0,a=this.standardizeUserDataXY(e,t,r,i);try{const o=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,o,i,s.verbose,s.steps);return ks(c)}finally{Ki(a[0],e),Ki(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),j9(this,e,t)}checkNumSamples(e,t,s,i="steps"){let r;if(s!=null){if(r=null,t!=null)throw new Y(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new Y(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new Y("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),i=s?t:[t],r=this.retrieveSymbolicTensors(i),a=new $a;if(e instanceof Ct&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Y(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new Y(`No value is provided for the model's input ${l.name}`);a.add(l,c)}const o=Jh(r,a);return s?o:o[0]}retrieveSymbolicTensors(e){const t=Sl(null,e.length);let s=e.length;for(const i of this.layers){const r=Array.isArray(i.output)?i.output:[i.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){const l=a.indexOf(e[o]);if(l!==-1&&(t[o]=r[l],s--),s===0)break}if(s===0)break}if(s>0){const i=[];throw t.forEach((r,a)=>{r==null&&i.push(e[a])}),new Y(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return t}predictLoop(e,t=32,s=!1){return Q(()=>{const i=this.checkNumSamples(e);if(s)throw new lt("Verbose predictLoop() is not implemented yet.");const r=fx(i,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)Q(()=>{const l=r[o][0],c=r[o][1],u=Wh(e,l,c),h=[];if(Array.isArray(u))for(let p=0;p<u.length;++p)h.push({key:this.inputs[p],value:u[p]});else h.push({key:this.inputs[0],value:u});const d=new $a(h);return Jh(this.outputs,d)}).forEach((l,c)=>a[c].push(l));return ks(a.map(o=>mn(o,0)))})}predict(e,t={}){const s=YN(e);bC(s,this.inputNames,this.feedInputShapes,!1);try{const i=t.batchSize==null?32:t.batchSize;return px(i),this.predictLoop(s,i)}finally{Ki(s,e)}}predictOnBatch(e){bC(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,i){if(this.optimizer_==null)throw new Cr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const o=this.feedOutputShapes[a];this.feedLossFns[a]===ng?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=yC(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yC(t,this.feedOutputNames,r,!1,"target"),J9(e,t),q9(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&e[0].shape[0]%i!==0)throw new Y(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,i,r=!0,a){const[o,l]=this.standardizeUserDataXY(e,t,r,a);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(i!=null){const u=HN(i,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await ZN(l[h],null,u[h]))}return[o,l,c]}testLoop(e,t,s,i=0,r){return Q(()=>{const a=this.checkNumSamples(t,s,r,"steps"),o=[];if(i>0)throw new lt("Verbose mode is not implemented yet.");if(r!=null)throw new lt("steps mode in testLoop() is not implemented yet");{const l=fx(a,s),c=as(ar(0,a));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],p=rl(c,h,d-h),m=O1(t,p),g=e(m);if(u===0)for(let f=0;f<g.length;++f)o.push(Ze(0));for(let f=0;f<g.length;++f){const y=g[f];o[f]=he(o[f],Z(d-h,y))}}for(let u=0;u<o.length;++u)o[u]=We(o[u],a)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const i=e[s];let r=i;if(nC(e,i)>1){const a=nC(e.slice(0,s),i);r+=`_${a}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{const u=[];for(let m=0;m<this.inputs.length;++m)u.push({key:this.inputs[m],value:s[m]});const h=new $a(u),d=Jh(this.outputs,h,{training:!0});let p;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let f=g(i[m],d[m]);r[m]!=null&&(f=B9(f,r[m]));const y=nn(f);t.push(y),m===0?p=f:p=he(p,f)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const f=this.metricsTensors[m][0],y=this.metricsTensors[m][1];g=nn(f(i[y],d[y]))}cn(g),a.push(g)}return p=nn(p),this.calculateLosses().forEach(m=>{p=he(p,m)}),p},l=this.collectedTrainableWeights.map(u=>u.read()),c=!0;return[this.optimizer_.minimize(o,c,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>Q(()=>{const t=[];let s;const i=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:i[c]});const o=new $a(a),l=Jh(this.outputs,o);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=nn(u(r[c],l[c]));c===0?s=h:s=he(s,h),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=nn(u(r[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let i,r,a,o,l,c,u,h,d;try{const p=s.batchSize==null?32:s.batchSize;px(p);const m=!1,g=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,m,p);i=g[0],r=g[1],d=g[2];let f=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new lt("validationData including sample weights is not supported yet."):new Y(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const C=!0,S=await this.standardizeUserData(l,c,null,null,C,p);u=S[0],h=S[1],y=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;const C=Math.floor(i[0].shape[0]*(1-s.validationSplit)),S=i[0].shape[0];u=Wh(i,C,S),a=i,i=Wh(i,0,C),h=Wh(r,C,S),o=r,r=Wh(r,0,C),y=u.concat(h)}else s.validationSteps!=null&&(f=!0);const b=i.concat(r).concat(d);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let w,_;f?(this.makeTestFunction(),w=this.testFunction,_=v.slice().concat(v.map(C=>"val_"+C))):(w=null,y=[],_=v.slice());const T=zN(s.callbacks,s.yieldEvery);return await this.fitLoop(x,b,v,p,s.epochs,s.verbose,T,w,y,s.shuffle,_,s.initialEpoch,null,null)}finally{this.isTraining=!1,Ki(i,e),Ki(r,t),Ki(a,e),Ki(o,t),Ki(u,l),Ki(h,c),d!=null&&nt(d)}}async fitLoop(e,t,s,i,r,a,o,l,c,u,h,d,p,m){i==null&&(i=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let g=!1;if(l!=null&&c!=null&&(g=!0),m!=null&&(g=!0,p==null))throw new Y("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const f=this.checkNumSamples(t,i,p,"steps_per_epoch");let y;f!=null&&(y=ar(0,f)),a==null&&(a=1);const{callbackList:b,history:x}=GN(o,a,r,d,f,p,i,g,h);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<r;++v){await b.onEpochBegin(v);const w={};if(p!=null)throw new lt("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new lt("batch shuffling is not implemneted yet");u&&kv(y);const _=as(y),T=fx(f,i);for(let C=0;C<T.length;++C){const S={};if(await b.onBatchBegin(C,S),Q(()=>{const M=T[C][0],A=T[C][1],P=rl(_,M,A-M);S.batch=C,S.size=A-M;const D=O1(t,P),N=e(D);for(let L=0;L<s.length;++L){const G=s[L],V=N[L];S[G]=V,cn(V)}if(C===T.length-1&&g){const L=this.testLoop(l,c,i);for(let G=0;G<s.length;++G){const V=s[G],U=L[G];cn(U),w["val_"+V]=U}}}),await b.onBatchEnd(C,S),PN(S),this.stopTraining_)break}_.dispose()}if(await b.onEpochEnd(v,w),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Z9(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),i=s[0],r=s[1],a=this.makeTrainFunction()(i.concat(r)),o=[];for(const l of a){const c=await l.data();o.push(c[0])}return nt(a),Ki(s[0],e),Ki(s[1],t),ks(o)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,i=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let a=0;a<i.length;++a)s&&!i[a].trainable||t.push({name:i[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=vd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-vd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ea(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ea(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const i of t)if(typeof s[i]=="string")e[i]=ea(s[i]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ea(cm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ea(cm(e)));{const e={};for(const t in this.metrics)e[t]=ea(cm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Cd(e.optimizer_config),s=sr(t);let i;if(typeof e.loss=="string")i=Xo(e.loss);else if(Array.isArray(e.loss))i=e.loss.map(a=>Xo(a));else if(e.loss!=null){i={};for(const a in e.loss)i[a]=Xo(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>Xo(a));else if(e.metrics!=null){r={};for(const a in e.metrics)r[a]=Xo(e.metrics[a])}this.compile({loss:i,metrics:r,optimizer:s})}async save(e,t){if(typeof e=="string"){const o=jE(e);if(o.length===0)throw new Y(`Cannot find any save handlers for URL '${e}'`);if(o.length>1)throw new Y(`Found more than one (${o.length}) save handlers for URL '${e}'`);e=o[0]}if(e.save==null)throw new Y("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await w1(this.getNamedWeights(t)),i=!1,r=null,a={modelTopology:this.toJSON(r,i),format:tY,generatedBy:`TensorFlow.js tfjs-layers v${Wy}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const o="optimizer",{data:l,specs:c}=await w1(await this.optimizer.getWeights(),o);s.specs.push(...c),s.data=$0([s.data,l])}return this.userDefinedMetadata!=null&&(pC(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){pC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ca.className="Model";de(ca);class jN extends ca{}jN.className="Functional";de(jN);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function nY(n,e){"modelTopology"in n||(n={modelTopology:n}),n=n;let t=n.modelTopology;t.model_config!=null&&(t=t.model_config);const s=Cd(t),i=sr(s,e);if(n.weightsManifest!=null){const r=await kk(n.weightsManifest,n.pathPrefix,i.weights.map(o=>o.originalName)),a={};for(const o of i.weights)a[o.originalName]=r[o.originalName];i.loadWeights(a),nt(r)}return i}async function sY(n,e){if(e==null&&(e={}),typeof n=="string"){const t=QE(n,e);if(t.length===0)t.push(Ak(n,e));else if(t.length>1)throw new Y(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return iY(n,void 0,e)}async function iY(n,e,t){if(t==null&&(t={}),n.load==null)throw new Y("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let i=s.modelTopology;i.model_config!=null&&(i=i.model_config);const r=t.strict==null?!0:t.strict,a=s.weightData!=null&&s.weightSpecs!=null&&r,o=sr(Cd(i),e,a),l=s.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),s.userDefinedMetadata!=null&&o.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new Y("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:u}=rY(s.weightData,s.weightSpecs);o.loadWeights(c,r),o.optimizer!=null&&u.length>0&&await o.optimizer.setWeights(u),nt(c),nt(u.map(h=>h.tensor))}return o}function rY(n,e){const t=Vv(n,e),s={},i=[];return e.forEach(r=>{r.group==="optimizer"?i.push({name:r.name,tensor:t[r.name]}):s[r.name]=t[r.name]}),{modelWeights:s,optimizerWeights:i}}let $y=class G1 extends ca{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:ky("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new Y(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof G1||e instanceof ca;let s;if(t){if(s=e,s.outputs.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new Y("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new Y("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=LN({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(i)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new Y(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=AN(this.outputs[0])}this.inboundNodes=[],new zy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Sl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=e.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(kt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ca({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new Cr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new Cr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new Cr("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new Cr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},i=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new Y("Legacy serialization format not supported yet.");r=t}else E(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof G1))throw new lt(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of r){const c=sr(l,void 0,i);i&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new Y("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new Y("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}};$y.className="Sequential";de($y);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Os=class extends Gl{getConfig(){return{}}};class QN extends Os{apply(e,t=1){return j4(e,t)}}QN.className="elu";de(QN);class JN extends Os{apply(e){return ry(e)}}JN.className="selu";de(JN);class qN extends Os{apply(e){return hr(e)}}qN.className="relu";de(qN);class eR extends Os{apply(e){return Q(()=>fh(6,hr(e)))}}eR.className="relu6";de(eR);class tR extends Os{apply(e){return e}}tR.className="linear";de(tR);class nR extends Os{apply(e){return nr(e)}}nR.className="sigmoid";de(nR);class sR extends Os{apply(e){return J4(e)}}sR.className="hardSigmoid";de(sR);class iR extends Os{apply(e){return Fl(e)}}iR.className="softplus";de(iR);class rR extends Os{apply(e){return Q4(e)}}rR.className="softsign";de(rR);class aR extends Os{apply(e){return yl(e)}}aR.className="tanh";de(aR);let jS=class extends Os{apply(e,t=-1){return uf(e,t)}};jS.className="softmax";de(jS);class oR extends Os{apply(e,t=-1){return J0(e,t)}}oR.className="logSoftmax";de(oR);class lR extends Os{apply(e,t=1){return Q(()=>Z(nr(Z(e,t)),e))}}lR.className="swish";de(lR);class cR extends Os{apply(e){return Q(()=>Z(e,yl(Fl(e))))}}cR.className="mish";de(cR);function co(n){return n.getClassName()}function mx(n,e={}){return yf(n,Vl.getMap().classNameMap,e,"activation")}function uo(n){if(n==null){const e={};return e.className="linear",e.config={},mx(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},mx(e)}else return n instanceof Os?n:mx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function QS(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class uR extends Gl{}class Sf extends uR{constructor(e){super(),QS(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Q(()=>{let t=Sn([1]);return this.hasL1&&(t=he(t,Oe(Z(this.l1,vn(e))))),this.hasL2&&(t=he(t,Oe(Z(this.l2,xf(e))))),K(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Sf.className="L1L2";de(Sf);function aY(n){return QS(n),new Sf({l1:n!=null?n.l1:null,l2:0})}function oY(n){return QS(n),new Sf({l2:n!=null?n.l2:null,l1:0})}const xC={l1l2:"L1L2"};function Ot(n){return kS(n)}function vC(n,e={}){return yf(n,Vl.getMap().classNameMap,e,"regularizer")}function en(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in xC?xC[n]:n,config:{}};return vC(e)}else return n instanceof uR?n:vC(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class JS extends yt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Je(e);let s=hr(e);return this.maxValue!=null&&(s=Ls(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}JS.className="ReLU";de(JS);class qS extends yt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Je(e);return ef(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}qS.className="LeakyReLU";de(qS);class e_ extends yt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=qt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=en(e.alphaRegularizer),this.alphaConstraint=Ln(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new Y(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=kt(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)t[i-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let i=1;i<e.length;++i)s[i]=e[i];this.inputSpec=[new _n({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Je(e),of(e,this.alpha.read())}getConfig(){const e={alphaInitializer:sn(this.alphaInitializer),alphaRegularizer:Ot(this.alphaRegularizer),alphaConstraint:An(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}e_.className="PReLU";de(e_);let t_=class extends yt{constructor(n){if(super(n??{}),this.DEFAULT_ALPHA=1,n==null&&(n={}),n.alpha!=null&&n.alpha!==this.DEFAULT_ALPHA)throw new lt(`Non-default alpha value (${n.alpha}) is not supported by the ELU layer yet.`);this.alpha=n.alpha==null?this.DEFAULT_ALPHA:n.alpha}call(n,e){const t=Je(n);return uh(t)}computeOutputShape(n){return n}getConfig(){const n={alpha:this.alpha},e=super.getConfig();return Object.assign(n,e),n}};t_.className="ELU";de(t_);let n_=class extends yt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Je(e);return Z(s,we(ws(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};n_.className="ThresholdedReLU";de(n_);let s_=class extends yt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new jS().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=Je(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};s_.className="Softmax";de(s_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mc(n,e,t){if(typeof n=="number")return Sl(n,e);if(n.length!==e)throw new Y(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const i=n[s];if(!H4(i))throw new Y(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${i}`)}return n}function ir(n,e,t,s,i=1){if(n==null)return n;const r=e+(e-1)*(i-1);let a;return t==="same"?a=n:a=n-r+1,Math.floor((a+s-1)/s)}function Sr(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+lo([t-e,0]);else if(s==="same")n=n*e;else throw new Y(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function i_(n,e){return Q(()=>(bn(e),e==="channelsFirst"?bt(n,[0,2,3,1]):n))}function hR(n,e){return Q(()=>(bn(e),e==="channelsFirst"?bt(n,[0,2,3,4,1]):n))}function lY(n,e,t,s=1,i="valid",r,a=1){return Q(()=>{if(r==null&&(r=or()),bn(r),n.shape.length!==3)throw new Y(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new Y(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new Y(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(n=bt(n,[0,2,1])),i==="causal")throw new lt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=X0(n,e,s,i==="same"?"same":"valid","NWC",a);return t!=null&&(o=dr(o,t)),o})}function wC(n,e,t,s=[1,1],i="valid",r,a,o=null){return Q(()=>{if(r==null&&(r=or()),bn(r),n.rank!==3&&n.rank!==4)throw new Y(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new Y(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=i_(n,r);if(i==="causal")throw new lt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=gk({x:l,filter:e,strides:s,pad:i==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:o}),r==="channelsFirst"&&(l=bt(l,[0,3,1,2])),l})}function cY(n,e,t,s=[1,1,1],i="valid",r,a){return Q(()=>{if(r==null&&(r=or()),bn(r),n.rank!==4&&n.rank!==5)throw new Y(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new Y(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=hR(n,r);if(i==="causal")throw new lt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=pw(o,e,s,i==="same"?"same":"valid","NDHWC",a),t!=null&&(o=dr(o,t)),r==="channelsFirst"&&(o=bt(o,[0,4,1,2,3])),o})}class Uy extends yt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Uy.verifyArgs(t),this.rank=e,zn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new lt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Mc(t.kernelSize,e,"kernelSize"),this.strides=Mc(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,wi(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,bn(this.dataFormat),this.activation=uo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=qt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ln(t.biasConstraint),this.biasRegularizer=en(t.biasRegularizer),this.activityRegularizer=en(t.activityRegularizer),this.dilationRate=Mc(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new Y(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new Y(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new Y(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(wr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!NS(e.kernelSize,"number",1,3))throw new Y(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:co(this.activation),useBias:this.useBias,biasInitializer:sn(this.biasInitializer),biasRegularizer:Ot(this.biasRegularizer),activityRegularizer:Ot(this.activityRegularizer),biasConstraint:An(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class wh extends Uy{constructor(e,t){super(e,t),this.kernel=null,wh.verifyArgs(t),this.filters=t.filters,zn(this.filters,"filters"),this.kernelInitializer=qt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ln(t.kernelConstraint),this.kernelRegularizer=en(t.kernelRegularizer)}build(e){e=kt(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new Y(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],i=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return Q(()=>{e=Je(e);let s;const i=this.bias==null?null:this.bias.read(),r=_N(this.activation.getClassName());if(r!=null&&this.rank===2)s=wC(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=lY(e,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=wC(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=cY(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new lt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=kt(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const a=ir(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let i=[e[0]];return this.dataFormat==="channelsLast"?(i=i.concat(t),i.push(this.filters)):(i.push(this.filters),i=i.concat(t)),i}getConfig(){const e={filters:this.filters,kernelInitializer:sn(this.kernelInitializer),kernelRegularizer:Ot(this.kernelRegularizer),kernelConstraint:An(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new Y(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Sh extends wh{constructor(e){super(2,e),Sh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!NS(e.kernelSize,"number",1,2))throw new Y(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Sh.className="Conv2D";de(Sh);class _h extends wh{constructor(e){super(3,e),_h.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new Y(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}_h.className="Conv3D";de(_h);let r_=class extends Sh{constructor(e){if(super(e),this.inputSpec=[new _n({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new Y(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=kt(e),e.length!==4)throw new Y("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new Y("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _n({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{let s=Je(e);if(s.shape.length!==4)throw new Y(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape,r=i[0];let a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);const l=i[a],c=i[o],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],m=Sr(l,d,u,this.padding),g=Sr(c,p,h,this.padding),f=[r,m,g,this.filters];this.dataFormat!=="channelsLast"&&(s=bt(s,[0,2,3,1]));let y=H0(s,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=bt(y,[0,3,1,2])),this.bias!=null&&(y=dr(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=kt(e);const t=e.slice();let s,i,r;this.dataFormat==="channelsFirst"?(s=1,i=2,r=3):(s=3,i=1,r=2);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[i]=Sr(t[i],l,a,this.padding),t[r]=Sr(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};r_.className="Conv2DTranspose";de(r_);let a_=class extends _h{constructor(e){if(super(e),this.inputSpec=[new _n({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new Y(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=kt(e),e.length!==5)throw new Y("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new Y("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _n({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{let s=Je(e);if(s.shape.length!==5)throw new Y(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape,r=i[0];let a,o,l;this.dataFormat==="channelsFirst"?(l=2,a=3,o=4):(l=1,a=2,o=3);const c=i[l],u=i[a],h=i[o],d=this.kernelSize[0],p=this.kernelSize[1],m=this.kernelSize[2],g=this.strides[0],f=this.strides[1],y=this.strides[2],b=Sr(c,g,d,this.padding),x=Sr(u,f,p,this.padding),v=Sr(h,y,m,this.padding),w=[r,b,x,v,this.filters];this.dataFormat!=="channelsLast"&&(s=bt(s,[0,2,3,4,1]));let _=fw(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=bt(_,[0,4,1,2,3])),this.bias!==null&&(_=dr(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(e){e=kt(e);const t=e.slice();let s,i,r,a;this.dataFormat==="channelsFirst"?(s=1,i=2,r=3,a=4):(s=4,i=1,r=2,a=3);const o=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[i]=Sr(t[i],u,o,this.padding),t[r]=Sr(t[r],h,l,this.padding),t[a]=Sr(t[a],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};a_.className="Conv3DTranspose";de(a_);let dR=class extends wh{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new Y("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new Y("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new Y(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=qt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=en(t.depthwiseRegularizer),this.depthwiseConstraint=Ln(t.depthwiseConstraint),this.pointwiseInitializer=qt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=en(t.pointwiseRegularizer),this.pointwiseConstraint=Ln(t.pointwiseConstraint)}build(e){if(e=kt(e),e.length<this.rank+2)throw new Y(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new Y(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],i=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new _n({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{e=Je(e);let s;if(this.rank===1)throw new lt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=bt(e,[0,2,3,1])),s=ay(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=dr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=bt(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=sn(this.depthwiseInitializer),e.pointwiseInitializer=sn(this.pointwiseInitializer),e.depthwiseRegularizer=Ot(this.depthwiseRegularizer),e.pointwiseRegularizer=Ot(this.pointwiseRegularizer),e.depthwiseConstraint=An(this.depthwiseConstraint),e.pointwiseConstraint=An(this.pointwiseConstraint),e}};dR.className="SeparableConv";let o_=class extends dR{constructor(e){super(2,e)}};o_.className="SeparableConv2D";de(o_);class _f extends wh{constructor(e){super(1,e),_f.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!NS(e.kernelSize,"number",1,1))throw new Y(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}_f.className="Conv1D";de(_f);let l_=class extends yt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Q(()=>{if(e=Je(e),this.dataFormat==="channelsLast"){const s=lm(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return lm(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=lm(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return lm(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};l_.className="Cropping2D";de(l_);let c_=class extends yt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,U4(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return Q(()=>{let s=Je(e);const i=s.shape;if(this.dataFormat==="channelsFirst"){s=bt(s,[0,2,3,1]);const r=this.size[0]*i[2],a=this.size[1]*i[3],o=this.interpolation==="nearest"?Ir.resizeNearestNeighbor(s,[r,a]):Ir.resizeBilinear(s,[r,a]);return bt(o,[0,3,1,2])}else{const r=this.size[0]*i[1],a=this.size[1]*i[2];return this.interpolation==="nearest"?Ir.resizeNearestNeighbor(s,[r,a]):Ir.resizeBilinear(s,[r,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};c_.className="UpSampling2D";de(c_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uY(n,e,t=[1,1],s="valid",i,r){return Q(()=>{i==null&&(i=or()),bn(i);let a=i_(n,i);if(n.rank!==4)throw new Y(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new Y(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=ch(a,e,t,s==="same"?"same":"valid","NHWC",r),i==="channelsFirst"&&(a=bt(a,[0,3,1,2])),a})}let u_=class extends Uy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=qt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ln(e.depthwiseConstraint),this.depthwiseRegularizer=en(e.depthwiseRegularizer)}build(e){if(e=kt(e),e.length<4)throw new Y(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new Y(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],i=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{e=Je(e);let s=uY(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=dr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=kt(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],i=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=ir(t,this.kernelSize[0],this.padding,this.strides[0]),a=ir(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],i,r,a]:[e[0],r,a,i]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=sn(this.depthwiseInitializer),e.depthwiseRegularizer=Ot(this.depthwiseRegularizer),e.depthwiseConstraint=An(this.depthwiseRegularizer),e}};u_.className="DepthwiseConv2D";de(u_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pR(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new Y("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function i(r){return r==null||Array.isArray(r)?r:[r]}return e=i(e),t=i(t),{inputs:n,initialState:e,constants:t}}function fR(n,e,t,s=!1,i,r,a=!1,o=!1){return Q(()=>{const l=e.shape.length;if(l<3)throw new Y(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(ar(2,l));if(e=bt(e,c),r!=null)throw new lt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=we(we(i,"bool"),"float32"),i.rank===l-1&&(i=ss(i,-1)),i=bt(i,c)),s&&(e=bi(e,0),i!=null&&(i=bi(i,0)));const u=[];let h,d=t;const p=e.shape[0],m=xi(e);let g;i!=null&&(g=xi(i));for(let y=0;y<p;++y){const b=m[y],x=Q(()=>n(b,d));if(i==null)h=x[0],d=x[1];else{const v=Q(()=>{const w=g[y],_=De(ti(w),w),T=he(Z(x[0],w),Z(d[0],_)),C=d.map((S,M)=>he(Z(x[1][M],w),Z(S,_)));return{output:T,newStates:C}});h=v.output,d=v.newStates}o&&u.push(h)}let f;return o&&(f=bs(u,1)),[h,f,d]})}class pr extends yt{constructor(e){super(e);let t;if(e.cell==null)throw new Y("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Hy({cells:e.cell}):t=e.cell,t.stateSize==null)throw new Y("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new _n({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return ar(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){L1(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let i;if(this.returnSequences?i=[e[0],e[1],s]:i=[e[0],s],this.returnState){const r=[];for(const a of t)r.push([e[0],a]);return[i].concat(r)}else return i}computeMask(e,t){return Q(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const i=this.states.map(r=>null);return[s].concat(i)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new lt("Constants support is not implemented in RNN yet.");L1(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new _n({shape:[t,null,...s]});const i=[e[0]].concat(e.slice(2));this.cell.build(i);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!vt(this.stateSpec.map(a=>a.shape[a.shape.length-1]),r))throw new Y(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(a=>new _n({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Oa("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>Sn([s,i])):this.states_=[Sn([s,this.cell.stateSize])];else if(e==null)nt(this.states_),this.keptStates!=null&&(nt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>Sn([s,i])):this.states_[0]=Sn([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):nt(this.states_);for(let i=0;i<this.states_.length;++i){const r=e[i],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,o=[s,a];if(!vt(r.shape,o))throw new Y(`State ${i} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[i]=r}}this.states_=this.states_.map(i=>cn(i.clone()))})}apply(e,t){let s=t==null?null:t.initialState,i=t==null?null:t.constants;t==null&&(t={});const r=pR(e,s,i,this.numConstants);e=r.inputs,s=r.initialState,i=r.constants;let a=[],o=[];if(s!=null){t.initialState=s,a=a.concat(s),this.stateSpec=[];for(const l of s)this.stateSpec.push(new _n({shape:l.shape}));o=o.concat(this.stateSpec)}if(i!=null&&(t.constants=i,a=a.concat(i),this.numConstants=i.length),a[0]instanceof er){const l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;const h=super.apply(l,t);return this.inputSpec=u,h}else return super.apply(e,t)}call(e,t){return Q(()=>{const s=t==null?null:t.mask,i=t==null?null:t.training;let r=t==null?null:t.initialState;e=Je(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Y(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:i},l=fR((p,m)=>{const g=this.cell.call([p].concat(m),o);return[g[0],g.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),c=l[0],u=l[1],h=l[2];this.stateful&&this.resetStates(h,i);const d=this.returnSequences?u:c;return this.returnState?[d].concat(h):d})}getInitialState(e){return Q(()=>{let t=Sn(e.shape);return t=Oe(t,[1,2]),t=bf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?R1(t,[1,s]):t):this.cell.stateSize>1?[R1(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===pr.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const i=t.cell,r=sr(i,s);return new e(Object.assign(t,{cell:r}))}}pr.className="RNN";de(pr);class Tf extends yt{}let By=class extends Tf{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,zn(this.units,"units"),this.activation=uo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=en(e.kernelRegularizer),this.recurrentRegularizer=en(e.recurrentRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.kernelConstraint=Ln(e.kernelConstraint),this.recurrentConstraint=Ln(e.recurrentConstraint),this.biasConstraint=Ln(e.biasConstraint),this.dropout=Xc([1,lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xc([1,lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=kt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new Y(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const i=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ti(e),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ti(s),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let r;const a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=Lr(Z(e,a),this.kernel.read()):r=Lr(e,this.kernel.read()),this.bias!=null&&(r=dr(r,this.bias.read())),o!=null&&(s=Z(s,o));let l=he(r,Lr(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:co(this.activation),useBias:this.useBias,kernelInitializer:sn(this.kernelInitializer),recurrentInitializer:sn(this.recurrentInitializer),biasInitializer:sn(this.biasInitializer),kernelRegularizer:Ot(this.kernelRegularizer),recurrentRegularizer:Ot(this.recurrentRegularizer),biasRegularizer:Ot(this.biasRegularizer),activityRegularizer:Ot(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};By.className="SimpleRNNCell";de(By);let h_=class extends pr{constructor(e){e.cell=new By(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}static fromConfig(e,t){return new e(t)}};h_.className="SimpleRNN";de(h_);let Xy=class extends Tf{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Y("GRUCell does not support reset_after parameter set to true.");this.units=e.units,zn(this.units,"units"),this.activation=uo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=en(e.kernelRegularizer),this.recurrentRegularizer=en(e.recurrentRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.kernelConstraint=Ln(e.kernelConstraint),this.recurrentConstraint=Ln(e.recurrentConstraint),this.biasConstraint=Ln(e.biasConstraint),this.dropout=Xc([1,lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xc([1,lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=kt(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new Y(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let i=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ti(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ti(i),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,c;0<this.dropout&&this.dropout<1&&(e=Z(e,r[0]));let u=Lr(e,this.kernel.read());this.useBias&&(u=dr(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=Z(i,a[0]));const h=this.recurrentKernel.read(),[d,p]=Rs(h,[2*this.units,this.units],h.rank-1),m=Lr(i,d),[g,f,y]=Rs(u,3,u.rank-1),[b,x]=Rs(m,2,m.rank-1);o=this.recurrentActivation.apply(he(g,b)),l=this.recurrentActivation.apply(he(f,x));const v=Lr(Z(l,i),p);c=this.activation.apply(he(y,v));const w=he(Z(o,i),Z(he(1,Kt(o)),c));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:co(this.activation),recurrentActivation:co(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sn(this.kernelInitializer),recurrentInitializer:sn(this.recurrentInitializer),biasInitializer:sn(this.biasInitializer),kernelRegularizer:Ot(this.kernelRegularizer),recurrentRegularizer:Ot(this.recurrentRegularizer),biasRegularizer:Ot(this.biasRegularizer),activityRegularizer:Ot(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};Xy.className="GRUCell";de(Xy);let d_=class extends pr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Xy(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};d_.className="GRU";de(d_);class If extends Tf{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,zn(this.units,"units"),this.activation=uo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=en(e.kernelRegularizer),this.recurrentRegularizer=en(e.recurrentRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.kernelConstraint=Ln(e.kernelConstraint),this.recurrentConstraint=Ln(e.recurrentConstraint),this.biasConstraint=Ln(e.biasConstraint),this.dropout=Xc([1,lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xc([1,lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=kt(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,a=this.units;i=new(t=class extends Bi{apply(o,l){const c=r.apply([a]),u=new Ry().apply([a]),h=r.apply([a*2]);return iC(iC(c,u),h)}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Q(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new Y(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let i=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ti(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ti(i),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(e=Z(e,a[0]));let d=Lr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=Z(i,o[0])),d=he(d,Lr(i,this.recurrentKernel.read())),this.useBias&&(d=dr(d,this.bias.read()));const[p,m,g,f]=Rs(d,4,d.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(m),u=he(Z(c,r),Z(l,this.activation.apply(g))),h=this.recurrentActivation.apply(f);const y=Z(h,this.activation.apply(u));return[y,y,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:co(this.activation),recurrentActivation:co(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sn(this.kernelInitializer),recurrentInitializer:sn(this.recurrentInitializer),biasInitializer:sn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ot(this.kernelRegularizer),recurrentRegularizer:Ot(this.recurrentRegularizer),biasRegularizer:Ot(this.biasRegularizer),activityRegularizer:Ot(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}If.className="LSTMCell";de(If);let p_=class extends pr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new If(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};p_.className="LSTM";de(p_);let Hy=class extends Tf{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Q(()=>{e=e;let s=e.slice(1);const i=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?i.push(s.splice(0,o.stateSize.length)):i.push(s.splice(0,1));i.reverse();const r=[];let a;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];s=i[o],o===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=l.call(a,t),r.push(a.slice(1))}s=[];for(const o of r.slice().reverse())s.push(...o);return[a[0]].concat(s)})}build(e){L1(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,i)=>{il(`RNNCell_${i}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=i=>({className:i.getClassName(),config:i.getConfig()}),s={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),s)}static fromConfig(e,t,s={}){const i=[];for(const r of t.cells)i.push(sr(r,s));return new e({cells:i})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return P1(e)}setWeights(e){const t=[];for(const s of this.cells){const i=s.weights.length,r=e.splice(i);for(let a=0;a<s.weights.length;++a)t.push([s.weights[a],r[a]])}GS(t)}};Hy.className="StackedRNNCells";de(Hy);function ho(n){const{ones:e,rate:t,training:s=!1,count:i=1,dropoutFunc:r}=n,a=()=>r!=null?r(e(),t):NN(e(),t),o=()=>vf(a,e,s);return!i||i<=1?cn(o().clone()):Array(i).fill(void 0).map(o).map(l=>cn(l.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var hY=globalThis&&globalThis.__rest||function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,s=Object.getOwnPropertySymbols(n);i<s.length;i++)e.indexOf(s[i])<0&&Object.prototype.propertyIsEnumerable.call(n,s[i])&&(t[s[i]]=n[s[i]]);return t};let mR=class extends pr{constructor(e){if(e.unroll)throw new lt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new lt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new _n({ndim:5})]}call(e,t){return Q(()=>{if(this.cell.dropoutMask!=null&&(nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Y("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Q(()=>{const{stateSize:t}=this.cell,s=e.shape,i=this.computeSingleOutputShape(s),r=[i[0],...i.slice(2)],a=Sn(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Oa("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,i=this.computeSingleOutputShape(s),r=[i[0],...i.slice(2)];if(s[0]==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Sn(r)):this.states_=[Sn(r)];else if(e==null)nt(this.states_),this.keptStates!=null&&(nt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Sn(r)):this.states_[0]=Sn(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):nt(this.states_);for(let a=0;a<this.states_.length;++a){const o=e[a],l=r;if(!vt(o.shape,l))throw new Y(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${o.shape}`);this.states_[a]=o}}this.states_=this.states_.map(a=>cn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:i,padding:r,strides:a,dilationRate:o}=this.cell,l=t==="channelsFirst",c=e[l?3:2],u=e[l?4:3],h=ir(c,i[0],r,a[0],o[0]),d=ir(u,i[1],r,a[1],o[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}};mR.className="ConvRNN2D";let Zy=class extends If{constructor(e){const{filters:t,kernelSize:s,strides:i,padding:r,dataFormat:a,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,zn(this.filters,"filters"),this.kernelSize=Mc(s,2,"kernelSize"),this.kernelSize.forEach(l=>zn(l,"kernelSize")),this.strides=Mc(i||1,2,"strides"),this.strides.forEach(l=>zn(l,"strides")),this.padding=r||"valid",wi(this.padding),this.dataFormat=a||"channelsLast",bn(this.dataFormat),this.dilationRate=Mc(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>zn(l,"dilationRate"))}build(e){var t;e=kt(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new Y(`The channel dimension of the input should be defined. Found ${e[s]}`);const i=e[s],r=4,a=this.kernelSize.concat([i,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(t=class extends Bi{apply(h,d){const p=c.apply([u]),m=Hs([u]),g=c.apply([u*2]);return RS([p,m,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Q(()=>{if(e.length!==3)throw new Y(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,i=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ti(i),rate:this.dropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(j,O,X)=>!O||!O[X]?j:Z(O[X],j);let u=c(i,l,0),h=c(i,l,1),d=c(i,l,2),p=c(i,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ti(r),rate:this.recurrentDropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const m=this.recurrentDropoutMask;let g=c(r,m,0),f=c(r,m,1),y=c(r,m,2),b=c(r,m,3);const x=3,[v,w,_,T]=Rs(this.kernel.read(),o,x),[C,S,M,A]=this.useBias?Rs(this.bias.read(),o):[null,null,null,null];u=this.inputConv(u,v,C,this.padding),h=this.inputConv(h,w,S,this.padding),d=this.inputConv(d,_,M,this.padding),p=this.inputConv(p,T,A,this.padding);const[P,D,N,L]=Rs(this.recurrentKernel.read(),o,x);g=this.recurrentConv(g,P),f=this.recurrentConv(f,D),y=this.recurrentConv(y,N),b=this.recurrentConv(b,L);const G=this.recurrentActivation.apply(he(u,g)),V=this.recurrentActivation.apply(he(h,f)),U=he(Z(V,a),Z(G,this.activation.apply(he(d,y)))),H=Z(this.recurrentActivation.apply(he(p,b)),this.activation.apply(U));return[H,H,U]})}getConfig(){const e=super.getConfig(),t=hY(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,i){const r=ma(e,t,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?dr(r,s,this.dataFormat):r}recurrentConv(e,t){return ma(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Zy.className="ConvLSTM2DCell";de(Zy);let f_=class extends mR{constructor(e){const t=new Zy(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};f_.className="ConvLSTM2D";de(f_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ky=class extends yt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let i=0;i<this.noiseShape.length;++i)s.push(this.noiseShape[i]==null?t[i]:this.noiseShape[i]);return s}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Je(e);if(0<this.rate&&this.rate<1){const i=t.training==null?!1:t.training,r=this.getNoiseShape(s);return vf(()=>NN(s,this.rate,r,this.seed),()=>s,i)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Ky.className="Dropout";de(Ky);let m_=class extends Ky{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};m_.className="SpatialDropout1D";de(m_);let g_=class extends yt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,zn(this.units,"units"),this.activation=uo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ln(e.kernelConstraint),this.biasConstraint=Ln(e.biasConstraint),this.kernelRegularizer=en(e.kernelRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.activityRegularizer=en(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=kt(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=kt(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Je(e),i=_N(this.activation.getClassName());let r;return i!=null?r=Lr(s,this.kernel.read(),i,this.bias?this.bias.read():null):(r=Lr(s,this.kernel.read()),this.bias!=null&&(r=dr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:co(this.activation),useBias:this.useBias,kernelInitializer:sn(this.kernelInitializer),biasInitializer:sn(this.biasInitializer),kernelRegularizer:Ot(this.kernelRegularizer),biasRegularizer:Ot(this.biasRegularizer),activityRegularizer:Ot(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),biasConstraint:An(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};g_.className="Dense";de(g_);let y_=class extends yt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=kt(e);for(const t of e.slice(1))if(t==null)throw new Y(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],to(e,1)]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let s=Je(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const i=[0];for(let r=2;r<s.rank;++r)i.push(r);i.push(1),s=bt(s,i)}return Y4(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};y_.className="Flatten";de(y_);let b_=class extends yt{constructor(e){super(e),this.supportsMasking=!0,this.activation=uo(e.activation)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Je(e);return this.activation.apply(s)})}getConfig(){const e={activation:co(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};b_.className="Activation";de(b_);let x_=class extends yt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Q(()=>(e=Je(e),Z4(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};x_.className="RepeatVector";de(x_);let v_=class extends yt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",i=t.slice();let r=1,a=null;for(let l=0;l<i.length;++l){const c=i[l];if(this.isUnknown(c))if(a===null)a=l;else throw new Y("Can only specifiy one unknown dimension.");else r*=c}const o=to(e);if(a!==null){if(r===0||o%r!==0)throw new Y(s);i[a]=o/r}else if(o!==r)throw new Y(s);return i}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Je(e),i=s.shape,r=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return K(s,r)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};v_.className="Reshape";de(v_);let w_=class extends yt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ar(1,e.dims.length+1);if(!vt(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _n({ndim:this.dims.length+1})]}computeOutputShape(e){e=kt(e);const t=e.slice();return this.dims.forEach((s,i)=>{t[i+1]=e[s]}),t}call(e,t){return bt(Je(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};w_.className="Permute";de(w_);let S_=class extends yt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Je(e),i=-1;return wd(xl(s,this.maskValue),i)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Je(e),i=-1,r=!0,a=wd(xl(s,this.maskValue),i,r);return Z(s,we(a,s.dtype))})}};S_.className="Masking";de(S_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let __=class extends yt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Xt(e.inputLength))}this.inputDim=e.inputDim,zn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,zn(this.outputDim,"outputDim"),this.embeddingsInitializer=qt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=en(e.embeddingsRegularizer),this.activityRegularizer=en(e.activityRegularizer),this.embeddingsConstraint=Ln(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Q(()=>this.maskZero?(e=Je(e),xl(e,_t(e))):null)}computeOutputShape(e){if(e=kt(e),this.inputLength==null)return[...e,this.outputDim];const t=Xt(this.inputLength);if(t.length!==e.length-1)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let i=0;i<t.length;++i){const r=t[i],a=e[i+1];if(r!=null&&a!=null&&r!==a)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[s]=a),s++}}return[e[0],...t,this.outputDim]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let s=Je(e);s.dtype!=="int32"&&(s=ba(s,"int32"));const i=kN(this.embeddings.read(),K(s,[s.size]));return K(i,kt(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:sn(this.embeddingsInitializer),embeddingsRegularizer:Ot(this.embeddingsRegularizer),activityRegularizer:Ot(this.activityRegularizer),embeddingsConstraint:An(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};__.className="Embedding";de(__);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ul extends yt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new lt}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let i=0;i<t.length;++i){const r=e[e.length-t.length+i],a=t[i];if(r==null||a==null||r<0||a<0)s.push(null);else if(r===1)s.push(a);else if(a===1)s.push(r);else{if(r!==a)throw new Y("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[kt(e)]),e=e,e.length<2)throw new Y(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=eo(t),t.length>1)throw new Y(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const a=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const i=e.map(r=>r.length);e.indexOf(null)===-1&&eo(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Q(()=>{if(e=e,this.reshapeRequired){const s=[],i=e.map(r=>r.rank);if(i.indexOf(null)===-1){const r=lo(i);for(let a of e){const o=a.rank;for(let l=0;l<r-o;++l)a=bf(a,1);s.push(a)}return this.mergeFunction(s)}else{let r=!1;for(const l of e){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let p=K(l,[h].concat(to(u.slice(1))));p=bt(p,[1,0]),p=K(p,d),s.push(p),r=!0}else if(c>1){const u=ar(1,c).concat([0]);s.push(bt(l,u)),r=!0}else s.push(l)}let a=this.mergeFunction(s);const o=a.rank;if(r){if(o==null){const l=a.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));a=K(bt(K(a,[-1,u]),[1,0]),h)}else if(o>1){const l=[o-1].concat(ar(0,o-1));a=bt(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let i=1;i<e.length;++i){const r=e[i]==null?null:e[i].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let s=[];for(const i of e)i!=null&&i[0]!==null&&s.push(i[0]);return s=eo(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return Q(()=>{if(t==null)return null;if(!Array.isArray(t))throw new Y("`mask` should be an Array");if(!Array.isArray(e))throw new Y("`inputs` should be an Array");if(t.length!==e.length)throw new Y(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(i=>i==null))return null;t=t.map(i=>i==null?i:ss(i,0));let s=t[0];for(let i=1;i<t.length-1;++i)s=Vi(s,t[i]);return s})}}let T_=class extends Ul{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=he(t,e[s]);return t})}};T_.className="Add";de(T_);let I_=class extends Ul{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Z(t,e[s]);return t})}};I_.className="Multiply";de(I_);let C_=class extends Ul{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=he(t,e[s]);return Z(1/e.length,t)})}};C_.className="Average";de(C_);let M_=class extends Ul{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Wr(t,e[s]);return t})}};M_.className="Maximum";de(M_);let E_=class extends Ul{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=fh(t,e[s]);return t})}};E_.className="Minimum";de(E_);let k_=class extends Ul{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new Y("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const i of e)if(i!=null){t=!1;break}if(t)return;const s=[];for(let i=0;i<e.length;++i){const r=e[i].slice();r.splice(this.axis,1);let a=!1;for(const o of s)if(vt(o,r)){a=!0;break}a||s.push(r)}if(s.length>1)throw new Y("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Q(()=>RS(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new Y("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),i=this.axis<0?s.length+this.axis:this.axis;for(const r of t.slice(1)){if(s[i]==null||r[i]==null){s[i]=null;break}s[i]+=r[i]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new Y("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Y("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Y(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Q(()=>{let s=!0;if(t.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const i=[];for(let a=0;a<e.length;++a)t[a]==null?i.push(we(ti(e[a]),"bool")):t[a].rank<e[a].rank?i.push(ss(t[a],-1)):i.push(t[a]);const r=mn(i,this.axis);return B0(r,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};k_.className="Concatenate";de(k_);function $h(n,e){for(;n<0;)n+=e;return n}function dY(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new lt("batchDot is not implemented for tensors of 4D or higher rank yet");if(E(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),E(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new lt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,i=e.shape.length;t==null&&(t=[s-1,i-2]);const r=t;return Q(()=>{let a;if(s>i){a=s-i;const l=[];for(let c=0;c<a;++c)l.push(1);e=K(e,e.shape.concat(l))}else if(i>s){a=i-s;const l=[];for(let c=0;c<a;++c)l.push(1);n=K(n,n.shape.concat(l))}else a=0;let o;if(n.shape.length===2&&e.shape.length===2)r[0]===r[1]?o=Oe(Z(n,e),r[0]):o=Oe(Z(bt(n,[1,0]),e),r[1]);else{const l=r[0]!==n.shape.length-1,c=r[1]===e.shape.length-1;o=pt(n,e,l,c)}if(a>0){let l;s>i?l=s+i-3:l=s-1;const c=[];for(let u=l;u<l+a;++u)c.push(u);o=wo(o,c)}return o.shape.length===1&&(o=ss(o,1)),o})}let N_=class extends Ul{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){E(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new lt("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(t,s);if(t[i[0]]!==s[i[1]])throw new Y(`Dimension incompatibility: ${t[i[0]]} !== ${s[i[1]]}`)}mergeFunction(e){if(e.length!==2)throw new Y(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],i;return Array.isArray(this.axes)?i=this.axes.map((r,a)=>$h(r,e[a].shape.length)):i=[$h(this.axes,t.shape.length),$h(this.axes,s.shape.length)],this.normalize&&(t=tg(t,i[0]),s=tg(s,i[1])),dY(t,s,i)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[$h(this.axes,e.length),$h(this.axes,t.length)],s}computeOutputShape(e){E(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new lt("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(t,s);t.splice(i[0],1),s.splice(i[1],1),s.splice(0,1);const r=t.concat(s);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};N_.className="Dot";de(N_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let R_=class extends yt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Je(e);return vf(()=>he(Ny(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}};R_.className="GaussianNoise";de(R_);let A_=class extends yt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Je(e);return this.rate>0&&this.rate<1?vf(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return Z(s,Ny(s.shape,1,i))},()=>s,t.training||!1):s})}};A_.className="GaussianDropout";de(A_);let L_=class extends yt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Je(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return vf(()=>{const i=Je(e),r=1.6732632423543772,a=1.0507009873554805,o=-r*a;let l=Ca(gh(s),this.rate);l=ba(l,"float32");const c=((1-this.rate)*(1+this.rate*o**2))**-.5,u=-c*o*this.rate,h=he(Z(i,l),Z(he(l,-1),o));return he(Z(h,c),u)},()=>Je(e),t.training||!1)}return e})}};L_.className="AlphaDropout";de(L_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Md(n,e,t,s,i,r=.001){let a;if(n.rank===2)a=sw(n,e,t,s,i,r);else if(n.rank===3)a=iw(n,e,t,s,i,r);else if(n.rank===4)a=rw(n,e,t,s,i,r);else throw new lt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function pY(n,e,t,s,i=.001){return Q(()=>{const r=rf(n,s),a=r.mean,o=r.variance;return[Md(n,a,o,t,e,i),a,o]})}function fY(n,e,t,s,i=.001){return Q(()=>{const r=rf(n,s),a=r.mean,o=r.variance,l=[];for(const p of ar(0,n.rank))s.indexOf(p)!==-1?l.push(1):l.push(n.shape[p]);const c=K(a,l),u=K(o,l),h=e==null?null:K(e,l),d=t==null?null:K(t,l);return[Md(n,c,u,d,h,i),a,o]})}function mY(n,e,t,s,i=.001){return vt(s.slice().sort(),ar(0,n.rank-1))?pY(n,e,t,s,i):fY(n,e,t,s,i)}let P_=class extends yt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=qt(e.betaInitializer||"zeros"),this.gammaInitializer=qt(e.gammaInitializer||"ones"),this.movingMeanInitializer=qt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=qt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ln(e.betaConstraint),this.gammaConstraint=Ln(e.gammaConstraint),this.betaRegularizer=en(e.betaRegularizer),this.gammaRegularizer=en(e.gammaRegularizer)}build(e){e=kt(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new Y(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new _n({ndim:e.length,axes:{[t]:s}})];const i=[s];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Q(()=>{const s=t.training==null?!1:t.training,i=Je(e),r=i.shape,a=r.length,o=ar(0,a),l=this.axis>=0?this.axis:this.axis+a;o.splice(l,1);const c=Sl(1,a);c[l]=r[l];const u=o.slice();u.sort();const h=!vt(u,ar(0,a).slice(0,a-1)),d=()=>{if(h){const y=K(this.movingMean.read(),c),b=K(this.movingVariance.read(),c),x=this.center?K(this.beta.read(),c):null,v=this.scale?K(this.gamma.read(),c):null;return Md(i,y,b,x,v,this.epsilon)}else return Md(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,m,g]=mY(i,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(y,b,x)=>{Q(()=>{const v=1-x,w=y.read(),_=Z(De(w,b),v);y.write(De(w,_))})};return f(this.movingMean,m,this.momentum),f(this.movingVariance,g,this.momentum),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sn(this.betaInitializer),gammaInitializer:sn(this.gammaInitializer),movingMeanInitializer:sn(this.movingMeanInitializer),movingVarianceInitializer:sn(this.movingVarianceInitializer),betaRegularizer:Ot(this.betaRegularizer),gammaRegularizer:Ot(this.gammaRegularizer),betaConstraint:An(this.betaConstraint),gammaConstraint:An(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};P_.className="BatchNormalization";de(P_);let D_=class extends yt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=qt(e.betaInitializer||"zeros"),this.gammaInitializer=qt(e.gammaInitializer||"ones"),this.betaRegularizer=en(e.betaRegularizer),this.gammaRegularizer=en(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=kt(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==eo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),i=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(e,t){const s=Je(e),i=s.shape,r=i.length;return Q(()=>{let{mean:a,variance:o}=rf(s,this.axis,!0);const l=Sl(1,r);for(const m of this.axis)l[m]=i[m];const c=m=>m!=null&&m.shape.length!==r?K(m,l):m;let u=this.scale?c(this.gamma.read()):null,h=this.center?c(this.beta.read()):null;const d=[],p=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(d.push(i[m]),p.push(1)):(d.push(1),p.push(i[m]));return a=di(a,d),o=di(o,d),u!=null&&(u=di(u,p)),h!=null&&(h=di(h,p)),Md(s,a,o,h,u,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sn(this.betaInitializer),gammaInitializer:sn(this.gammaInitializer),betaRegularizer:Ot(this.betaRegularizer),gammaRegularizer:Ot(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};D_.className="LayerNormalization";de(D_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gY(n,e,t){return Q(()=>{if(n.rank!==4)throw new Y(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new Y("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=or()),t!=="channelsLast"&&t!=="channelsFirst")throw new Y(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Ma(n,s)})}let F_=class extends yt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?or():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new Y(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new Y(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new Y(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new _n({ndim:4})]}computeOutputShape(e){e=kt(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return Q(()=>gY(Je(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};F_.className="ZeroPadding2D";de(F_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yy(n,e,t,s,i,r){return Q(()=>{bn(i),IN(r),wi(s),t==null&&(t=[1,1]),s==null&&(s="valid"),i==null&&(i=or()),r==null&&(r="max"),n=i_(n,i);let a;const o=s==="same"?"same":"valid";return r==="max"?a=sf(n,e,t,o):a=jp(n,e,t,o),i==="channelsFirst"&&(a=bt(a,[0,3,1,2])),a})}function gR(n,e,t,s,i,r){return Q(()=>{bn(i),IN(r),wi(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),i==null&&(i=or()),r==null&&(r="max"),n=hR(n,i);let a;const o=s==="same"?"same":"valid";return r==="max"?a=kw(n,e,t,o):a=nw(n,e,t,o),i==="channelsFirst"&&(a=bt(a,[0,4,1,2,3])),a})}let yR=class extends yt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new Y(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(zn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new Y(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);zn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,wi(this.padding),this.inputSpec=[new _n({ndim:3})]}computeOutputShape(e){e=kt(e);const t=ir(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Q(()=>{this.invokeCallHook(e,t),e=bf(Je(e),2);const s=this.poolingFunction(Je(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return wo(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},O_=class extends yR{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return bn(r),wi(i),Yy(e,t,s,i,r,"max")}};O_.className="MaxPooling1D";de(O_);let z_=class extends yR{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return bn(r),wi(i),Yy(e,t,s,i,r,"avg")}};z_.className="AveragePooling1D";de(z_);let bR=class extends yt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new Y(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),wi(this.padding),this.inputSpec=[new _n({ndim:4})]}computeOutputShape(e){e=kt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=ir(t,this.poolSize[0],this.padding,this.strides[0]),s=ir(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Je(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},G_=class extends bR{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return bn(r),wi(i),Yy(e,t,s,i,r,"max")}};G_.className="MaxPooling2D";de(G_);let V_=class extends bR{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return bn(r),wi(i),Yy(e,t,s,i,r,"avg")}};V_.className="AveragePooling2D";de(V_);let xR=class extends yt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new Y(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),wi(this.padding),this.inputSpec=[new _n({ndim:5})]}computeOutputShape(e){e=kt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],i=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=ir(t,this.poolSize[0],this.padding,this.strides[0]),s=ir(s,this.poolSize[1],this.padding,this.strides[1]),i=ir(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,i]:[e[0],t,s,i,e[4]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Je(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},W_=class extends xR{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return bn(r),wi(i),gR(e,t,s,i,r,"max")}};W_.className="MaxPooling3D";de(W_);let $_=class extends xR{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return bn(r),wi(i),gR(e,t,s,i,r,"avg")}};$_.className="AveragePooling3D";de($_);let vR=class extends yt{constructor(e){super(e),this.inputSpec=[new _n({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new lt}},U_=class extends vR{constructor(e){super(e||{})}call(e,t){return Q(()=>{const s=Je(e);return nn(s,1)})}};U_.className="GlobalAveragePooling1D";de(U_);let B_=class extends vR{constructor(e){super(e||{})}call(e,t){return Q(()=>{const s=Je(e);return mi(s,1)})}};B_.className="GlobalMaxPooling1D";de(B_);let wR=class extends yt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),this.inputSpec=[new _n({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new lt}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},X_=class extends wR{call(e,t){return Q(()=>{const s=Je(e);return this.dataFormat==="channelsLast"?nn(s,[1,2]):nn(s,[2,3])})}};X_.className="GlobalAveragePooling2D";de(X_);class H_ extends wR{call(e,t){return Q(()=>{const s=Je(e);return this.dataFormat==="channelsLast"?mi(s,[1,2]):mi(s,[2,3])})}}H_.className="GlobalMaxPooling2D";de(H_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class SR extends yt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const i=t.layer,r=sr(i,s);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Z_ extends SR{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=kt(e),e.length<3)throw new Y(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=kt(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),i=e[1];return[s[0],i].concat(s.slice(1))}call(e,t){return Q(()=>(e=Je(e),fR((s,i)=>[Je(this.layer.call(s,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}Z_.className="TimeDistributed";de(Z_);function yY(n){Wl($4,"BidirectionalMergeMode",n)}const bY="concat";class K_ extends SR{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=sr(s),t.goBackwards=t.goBackwards!==!0;const i={};if(i.className=e.layer.getClassName(),i.config=t,this.backwardLayer=sr(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?bY:e.mergeMode,yY(this.mergeMode),e.weights)throw new lt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,i,r;return this.returnState&&(r=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,i=[s]):this.mergeMode==null?i=[s,s.slice()]:i=[s],this.returnState?this.mergeMode==null?i.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):ks(i)}apply(e,t){let s=t==null?null:t.initialState,i=t==null?null:t.constants;t==null&&(t={});const r=pR(e,s,i,this.numConstants);if(e=r.inputs,s=r.initialState,i=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&i==null)return super.apply(e,t);const a=[],o=[];if(s!=null){const c=s.length;if(c%2>0)throw new Y("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,a.push(...s);const u=s.map(h=>new _n({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),o.push(...u)}if(i!=null)throw new lt("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof er;for(const c of a)if(c instanceof er!==l)throw new Y("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(a),u=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return Q(()=>{const s=t.initialState;let i,r;if(s==null)i=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);i=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let a;this.returnState&&(Array.isArray(i)&&(a=i.slice(1).concat(r.slice(1))),i=i[0],r=r[0]),this.returnSequences&&(r=bi(r,1));let o;return this.mergeMode==="concat"?o=RS([i,r]):this.mergeMode==="sum"?o=he(i,r):this.mergeMode==="ave"?o=Z(.5,he(i,r)):this.mergeMode==="mul"?o=Z(i,r):this.mergeMode==null&&(o=[i,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){il(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),il(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(r=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=sr(t.layer);if(delete t.layer,t.numConstants!=null)throw new lt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=t;return i.layer=s,new e(i)}}K_.className="Bidirectional";de(K_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Y_ extends yt{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>(e=Je(e),e.dtype!=="float32"&&(e=ba(e,"float32")),he(Z(e,this.scale),this.offset)))}}Y_.className="Rescaling";de(Y_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:xY,cropAndResize:vY}=Ir;class j_ extends yt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,i,r,a,o,l){return Q(()=>{let c,u=!1;const h=t/a,d=s/o,p=(i+t)/a,m=(r+s)/o,g=[h,d,p,m],f=[];e.rank===3?(u=!0,c=bs([e])):c=e;for(let v=0;v<c.shape[0];v++)f.push(g);const y=Jt(f,[f.length,4]),b=vl(0,f.length,1,"int32"),x=vY(c,y,b,[i,r],"nearest");return ba(u?Je(xi(x)):x,l)})}upsize(e,t,s,i){return Q(()=>{const r=xY(e,[t,s]);return ba(r,i)})}call(e,t){return Q(()=>{const s=Je(e),i=s.dtype,r=s.shape,a=r[r.length-3],o=r[r.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let c=0;return o!==this.width&&(c=Math.floor((o-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,a,o,i):this.upsize(e,this.height,this.width,i)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=kt(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}j_.className="CenterCrop";de(j_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wY(n,e,t,s){let i=Je(n);if(i.dtype!=="int32"&&(i=ba(i,"int32")),e==="int")return i;const r=i.shape;if(i.rank===0&&(i=ss(i,-1)),e==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=ss(i,-1)),i.rank>2)throw new Y(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${i.rank}.`);const a=["multiHot","oneHot"].includes(e),o=i;let l;if(typeof s<"u"&&e==="count"?l=jm(o,s,t,a):l=jm(o,[],t,a),e!=="tfIdf")return l;if(s)return Z(l,s);throw new Y("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Q_ extends yt{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=kt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Q(()=>{e=Je(e),e.dtype!=="int32"&&(e=ba(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new Y(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Je(t.countWeights)}const i=mi(e),r=Vc(e),a=ws(this.numTokens,i).bufferSync().get(0),o=Ca(r,0).bufferSync().get(0);if(!(a&&o))throw new Y(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return wY(e,this.outputMode,this.numTokens,s)})}}Q_.className="CategoryEncoding";de(Q_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const SY=["bilinear","nearest"],SC=new Set(SY);class J_ extends yt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(SC.has(e.interpolation))this.interpolation=e.interpolation;else throw new Y(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=kt(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Ir.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Ir.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...SC]} are supported`)})}}J_.className="Resizing";de(J_);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Y=q();_Y.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ci;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ci||(Ci={}));var _C;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(_C||(_C={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function TY(n,e){return ag(n,e)}function ag(n,e,t=new Map,s=new Set){if(n==null)return null;if(typeof Blob=="function"&&n instanceof Blob)return n.slice();if(s.has(n))throw new Error("Circular references are not supported.");if(t.has(n))return t.get(n);const i=e(n);if(i.recurse&&i.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse)if(Zc(n)){const r=Array.isArray(n)?[]:{};s.add(n);for(const a in n){const o=n[a],l=ag(o,e,t,s);r[a]=l}return s.delete(n),n.__proto__&&(r.__proto__=n.__proto__),r}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return t.set(n,i.value),i.value}function IY(n,e=TR){return _R(n,e)}function _R(n,e,t=new Set){const s=n[0];if(t.has(s))throw new Error("Circular references are not supported.");const i=e(n);if(i.recurse&&i.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse)if(Zc(s)){const r=Array.isArray(s)?[]:{};t.add(s);for(const a in s){const o=n.map(c=>c[a]),l=_R(o,e,t);r[a]=l}return t.delete(s),r}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return i.value}function TR(n){return n===null?null:Zc(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}async function IR(n,e){const t=new Map;ag(n,e,t);for(const s of Array.from(t.keys())){const i=t.get(s);if(ha(i)){const r=await i;t.set(s,r)}}return ag(n,e,t)}function Zc(n){let e=!1;if(q().get("IS_BROWSER"))e=n instanceof TextDecoder;else{const{StringDecoder:t}=require("string_decoder");e=n instanceof t}return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof Ct)&&!(n instanceof Promise)&&!e)}function CY(n){return n==null||MY(n)||Array.isArray(n)||typeof n=="object"&&n instanceof Ct||On(n)}function MY(n){return n===null||typeof n!="object"&&typeof n!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function EY(n){return TY(n,kY)}function kY(n){return n instanceof Ct?{value:n.clone(),recurse:!1}:Zc(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class CR{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),s=this.get(t);return this.set(t,this.pop()),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class jy extends CR{constructor(){super(jy.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=this.capacity*2,t=new Array(e),s=this.length();for(let i=0;i<s;i++)t[i]=this.get(this.wrap(this.begin+i));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=s}}jy.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function MR(n){return new AY(n)}function q_(n){return new LY(n)}function NY(n,e){return new ER(n,e)}function RY(n,e=Ua.FAIL){return new $Y(n,e)}let Wn=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let s=await e.next();for(;!s.done;)t.push(s.value),s=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),s=e(t.value);for(;!t.done&&s;)t=await this.next(),s=e(t.value)}handleErrors(e){return new VY(this,e)}filter(e){return new zY(this,e)}map(e){return new GY(this,e)}mapAsync(e){return new TC(this,e)}serialMapAsync(e){return new TC(this,e).serial()}flatmap(e){return new WY(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new OY(this,e,t)}columnMajorBatch(e,t=!0,s=TR){return this.rowMajorBatch(e,t).map(i=>IY(i,s))}concatenate(e,t){return new ER(MR([this,e]),t)}take(e){return e<0||e==null?this:new FY(this,e)}skip(e){return e<0||e==null?this:new DY(this,e)}prefetch(e){return new kR(this,e)}shuffle(e,t){return new UY(this,e,t)}serial(){return new PY(this)}};class AY extends Wn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:EY(e),done:!1}}}class LY extends Wn{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class PY extends Wn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class DY extends Wn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;nt(e.value)}return this.upstream.next()}}class FY extends Wn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class OY extends Wn{constructor(e,t,s=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class zY extends Wn{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;nt(e.value)}}}class GY extends Wn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=pa(e.value),s=this.transform(e.value),i=pa(s);for(const r of t)W0(r,i)||r.dispose();return{value:s,done:!1}}}class VY extends Wn{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class TC extends Wn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=pa(e.value),s=await this.transform(e.value),i=pa(s);for(const r of t)W0(r,i)||r.dispose();return{value:s,done:!1}}}class eT extends Wn{constructor(){super(),this.outputQueue=new jy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class WY extends eT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=pa(e.value),s=this.transform(e.value),i=pa(s);this.outputQueue.pushAll(s);for(const r of t)W0(r,i)||r.dispose();return!0}}class ER extends Wn{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){const s=await this.moreIterators.next();if(s.done)return{value:null,done:!0};this.iterator=s.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Ua;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Ua||(Ua={}));class $Y extends Wn{constructor(e,t=Ua.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,s=0;function i(a){return a instanceof Wn?{value:a.next().then(o=>(t++,o.done&&s++,o.value)),recurse:!1}:{value:null,recurse:!0}}const r=await IR(this.iterators,i);if(t===s)return{value:null,done:!0};if(s>0)switch(this.mismatchMode){case Ua.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Ua.SHORTEST:return{value:null,done:!0};case Ua.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class kR extends Wn{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new CR(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class UY extends kR{constructor(e,t,s){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=mh.alea(s||Zn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */let Th=class{constructor(){this.size=null}batch(e,t=!0){const s=this;E(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let i;return this.size===1/0||this.size==null?i=this.size:t?i=Math.ceil(this.size/e):i=Math.floor(this.size/e),Vs(async()=>(await s.iterator()).columnMajorBatch(e,t,HY),i)}concatenate(e){const t=this;let s;return this.size===1/0||e.size===1/0?s=1/0:this.size!=null&&e.size!=null?s=this.size+e.size:s=null,Vs(async()=>(await t.iterator()).concatenate(await e.iterator()),s)}filter(e){const t=this;let s;return this.size===1/0?s=1/0:s=null,Vs(async()=>(await t.iterator()).filter(i=>Q(()=>e(i))),s)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Vs(async()=>(await t.iterator()).map(s=>Q(()=>e(s))),this.size)}mapAsync(e){const t=this;return Vs(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Vs(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let s;return this.size!=null&&e>0?s=this.size*e:e===0?s=0:this.size!=null&&(e===void 0||e<0)?s=1/0:s=null,Vs(async()=>{const i=q_(async()=>({value:await t.iterator(),done:!1}));return NY(i.take(e))},s)}skip(e){const t=this;let s;return this.size!=null&&e>=0&&this.size>=e?s=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?s=0:s=null,Vs(async()=>(await t.iterator()).skip(e),s)}shuffle(e,t,s=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const i=this,r=mh.alea(t||Zn().toString());return Vs(async()=>{let a=r.int32();return s&&(a+=r.int32()),(await i.iterator()).shuffle(e,a.toString())},this.size)}take(e){const t=this;let s;return this.size!=null&&this.size>e?s=e:this.size!=null&&this.size<=e?s=this.size:s=null,Vs(async()=>(await t.iterator()).take(e),s)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Th.MAX_BUFFER_SIZE=1e4;function Vs(n,e=null){return new class extends Th{constructor(){super(...arguments),this.size=e}async iterator(){return n()}}}function BY(n){return Vs(async()=>MR(n),n.length)}function XY(n){if(!Zc(n))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(n))for(let t=0;t<n.length;t++)e=e==null?n[t].size:Math.min(e,n[t].size);else if(n instanceof Object)for(const t in n)e=e==null?n[t].size:Math.min(e,n[t].size);return Vs(async()=>{const t=await IR(n,s=>{if(s instanceof Th)return{value:s.iterator(),recurse:!1};if(Zc(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return RY(t,Ua.SHORTEST)},e)}function HY(n){if(n===null)return null;const e=n[0];return CY(e)?{value:ZY(n),recurse:!1}:{value:null,recurse:!0}}function ZY(n){if(n.length===0)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof Ct?bs(n):Jt(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&E(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY=fy;class Qy extends Pg{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ev(this,Dt())}nextDataId(){return Qy.nextDataId++}write(e,t,s){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&ui(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:e,dtype:s,refCount:1}),i}makeTensorInfo(e,t,s){let i;if(t==="string"&&s!=null&&s.length>0&&Tr(s[0])){const r=s.map(a=>Nr(a));i=this.write(r,e,t)}else i=this.write(s,e,t);return{dataId:i,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,i,r){this.data.set(e,{values:t,dtype:i,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const i=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return ya(i,r)}return EE(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(i=>da(i));return ct(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ct(e.shape,e.dtype,t)}makeOutput(e,t,s){return Dt().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Zn();return e(),{kernelMs:Zn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ze([e],"where");const t=this.readSync(e.dataId);return KY(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Qy.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const YY=n=>{const{x:e}=n.inputs,t=n.backend;ze(e,"abs");let s=new Float32Array(oe(e.shape));const i=t.data.get(e.dataId).values;return s=NR(i),t.makeOutput(s,e.shape,e.dtype)},jY={kernelName:Hd,backendName:"cpu",kernelFunc:YY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(n){return(e,t,s,i,r)=>{const a=st(e,t),o=a.length,l=Xe(a),c=oe(a),u=Pn(r,c),h=e.length,d=t.length,p=Xe(e),m=Xe(t),g=bl(e,a),f=bl(t,a);if(g.length+f.length===0)for(let y=0;y<u.length;++y)u[y]=n(s[y%s.length],i[y%i.length]);else for(let y=0;y<u.length;++y){const b=Al(y,o,l),x=b.slice(-h);g.forEach(T=>x[T]=0);const v=tr(x,h,p),w=b.slice(-d);f.forEach(T=>w[T]=0);const _=tr(w,d,m);u[y]=n(s[v],i[_])}return[u,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(n){const{inputs:e,backend:t}=n,{real:s,imag:i}=e,r=t.data.get(s.dataId).values,a=t.data.get(i.dataId).values,o=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(o.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",r),imag:t.makeTensorInfo(i.shape,"float32",a)},o}const QY={kernelName:Ug,backendName:"cpu",kernelFunc:Us};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function og(n,e,t="float32"){if(t==="complex64"){const i=og(n,e,"float32"),r=og(n,e,"float32");return Us({inputs:{real:i,imag:r},backend:n})}const s=Yn(oe(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const JY={kernelName:Lu,backendName:"cpu",kernelFunc:Gr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _l(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.data.get(s.dataId).complexTensorInfos.real,r=t.data.get(i.dataId).values;return t.makeTensorInfo(i.shape,i.dtype,r)}const qY={kernelName:w0,backendName:"cpu",kernelFunc:_l};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n,e,t,s){if(s==="int32"){const i=Int32Array.from(n);return[e,"int32",i]}if(s==="bool"){const i=go([0],t),[r,a]=In((o,l)=>o!==l?1:0)(e,[],n,i,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function po(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dtype:r}=s;if(r==="complex64"){if(i.dtype==="complex64")return Gr({inputs:{x:i},backend:t});const u=og(t,i.shape,i.dtype),h=po({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),d=Us({inputs:{real:h,imag:u},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),d}if(i.dtype==="complex64"){const u=_l({inputs:{input:i},backend:t}),h=po({inputs:{x:u},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(u),h}if(!Rv(i.dtype,r)){const u=Gr({inputs:{x:i},backend:t});return{dataId:u.dataId,shape:u.shape,dtype:r}}const a=t.data.get(i.dataId).values,[o,l,c]=RR(a,i.shape,i.dtype,r);return t.makeTensorInfo(o,l,c)}const ej={kernelName:vu,backendName:"cpu",kernelFunc:po};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(n,e,t,s){return t==null?({inputs:i,backend:r})=>{const{a,b:o}=i,l=r;ze([a,o],n);const c=l.data.get(a.dataId).values,u=l.data.get(o.dataId).values,h=a.dtype==="string"?wl(c):c,d=a.dtype==="string"?wl(u):u,p=s||a.dtype,[m,g]=e(a.shape,o.shape,h,d,p);return l.makeTensorInfo(g,p,m)}:({inputs:i,backend:r})=>{const{a,b:o}=i,l=r;if(a.dtype==="complex64"||o.dtype==="complex64"){const c=po({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,p=l.data.get(h.dataId).values,m=l.data.get(d.dataId).values,g=po({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),f=l.data.get(g.dataId),y=f.complexTensorInfos.real,b=f.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[w,_,T]=t(a.shape,o.shape,p,m,x,v),C=l.makeTensorInfo(T,"float32",w),S=l.makeTensorInfo(T,"float32",_),M=Us({inputs:{real:C,imag:S},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(C),l.disposeIntermediateTensorInfo(S),M}else{const c=l.data.get(a.dataId).values,u=l.data.get(o.dataId).values,h=s||a.dtype,[d,p]=e(a.shape,o.shape,c,u,h);return l.makeTensorInfo(p,h,d)}}}function tT(n){return(e,t,s,i,r,a)=>{const o=st(e,t),l=oe(o),c=o.length,u=Xe(o),h=Pn("float32",l),d=Pn("float32",l),p=bl(e,o),m=bl(t,o),g=ya(s,i),f=ya(r,a),y=e.length,b=Xe(e),x=t.length,v=Xe(t);if(p.length+m.length===0)for(let w=0;w<h.length;w++){const _=w%g.length,T=w%f.length,C=n(g[_*2],g[_*2+1],f[T*2],f[T*2+1]);h[w]=C.real,d[w]=C.imag}else for(let w=0;w<h.length;w++){const _=Al(w,c,u),T=_.slice(-y);p.forEach(P=>T[P]=0);const C=tr(T,y,b),S=_.slice(-x);m.forEach(P=>S[P]=0);const M=tr(S,x,v),A=n(g[C*2],g[C*2+1],f[M*2],f[M*2+1]);h[w]=A.real,d[w]=A.imag}return[h,d,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AR=In((n,e)=>n+e),tj=tT((n,e,t,s)=>({real:n+t,imag:e+s})),Kc=Bn(Ll,AR,tj),nj={kernelName:Ll,backendName:"cpu",kernelFunc:Kc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n,e,t,s,i){const r=oe(s),a=Yn(i,t);for(let o=0;o<n.length;o++){const l=n[o];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?a[l]+=e[o]:a[l]+=1)}return a}function LR(n,e,t,s=!1){const i=n.shape[0],r=n.shape[1],a=ct([i,t],e.dtype);for(let o=0;o<i;o++)for(let l=0;l<r;l++){const c=n.get(o,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?a.set(1,o,c):e.size>0?a.set(a.get(o,c)+e.get(o,l),o,c):a.set(a.get(o,c)+1,o,c))}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function So(n){return(e,t,s)=>{const i=Pn(t,e.length);for(let r=0;r<e.length;++r)i[r]=n(e[r],s);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(n,e,t){return({inputs:s,attrs:i,backend:r})=>{const{x:a}=s;if(ze(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const o=r,l=o.data.get(a.dataId).values,c=oe(a.shape),u=t||a.dtype,h=pn(u,c);for(let d=0;d<c;++d)h[d]=e(l[d],i);return o.makeTensorInfo(a.shape,u,h)}}function Ih(n,e,t){return({inputs:s,attrs:i,backend:r})=>{const{x:a}=s;if(ze(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const o=r,l=o.data.get(a.dataId).values,c=t||a.dtype,u=e(l,c,i);return o.makeTensorInfo(a.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PR=So(n=>Math.ceil(n)),sj=Ih(wu,PR),ij={kernelName:wu,backendName:"cpu",kernelFunc:sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,e,t,s){const i=pn(t,oe(e));if(s&&t!=="string"){let r=0;n.forEach(a=>{const o=oe(a.shape);i.set(a.vals,r),r+=o})}else{let r=0;n.forEach(a=>{const o=t==="string"?wl(a.vals):a.vals;let l=0;for(let c=0;c<a.shape[0];++c){const u=c*e[1]+r;for(let h=0;h<a.shape[1];++h)i[u+h]=o[l++]}r+=a.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FR=In((n,e)=>n===e?1:0),OR=Bn(lp,FR,null,"bool"),rj={kernelName:lp,backendName:"cpu",kernelFunc:OR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zR=So(n=>Math.exp(n)),GR=Ih(Eu,zR,"float32"),aj={kernelName:Eu,backendName:"cpu",kernelFunc:GR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VR=So(n=>Math.expm1(n)),oj=Ih(ku,VR),lj={kernelName:ku,backendName:"cpu",kernelFunc:oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WR=So(n=>Math.floor(n)),cj=Ih(Nu,WR),uj={kernelName:Nu,backendName:"cpu",kernelFunc:cj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n,e,t,s,i,r,a,o,l){const c=ct([s,r],t);for(let u=0;u<s;u++){const h=[];let d=0;for(let p=0;p<i;p++){const m=n[u*i+p];d+=m*a[p],h.push(m)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let p=0;p<r;p++)c.values[u*r+p]=e.get(...e.indexToLoc(d*r+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(n,e,t){const s=ct(t,n.dtype);for(let i=0;i<s.size;++i){const r=s.indexToLoc(i).slice(),a=r[0],o=r[2],l=e.locToIndex([a,o]);r[2]=e.values[l];const c=n.locToIndex(r);0<=c&&c<n.values.length&&(s.values[i]=n.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BR=In((n,e)=>n>e?1:0),hj=Bn(dp,BR,null,"bool"),dj={kernelName:dp,backendName:"cpu",kernelFunc:hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XR=In((n,e)=>n>=e?1:0),pj=Bn(Au,XR,null,"bool"),fj={kernelName:Au,backendName:"cpu",kernelFunc:pj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HR=In((n,e)=>n<e?1:0),mj=Bn(fp,HR,null,"bool"),gj={kernelName:fp,backendName:"cpu",kernelFunc:mj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZR=In((n,e)=>n<=e?1:0),yj=Bn(mp,ZR,null,"bool"),bj={kernelName:mp,backendName:"cpu",kernelFunc:yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(n,e,t){const s=(e-n)/(t-1),i=Yn(t,"float32");i[0]=n;for(let r=1;r<i.length;r++)i[r]=i[r-1]+s;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YR=So(n=>Math.log(n)),xj=Ih(Ou,YR),vj={kernelName:Ou,backendName:"cpu",kernelFunc:xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,e,t,s){const i=Pn(s,oe(t));for(let r=0;r<i.length;++r){const a=r*e;let o=n[a];for(let l=0;l<e;++l){const c=n[a+l];(Number.isNaN(c)||c>o)&&(o=c)}i[r]=o}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QR=In((n,e)=>Math.max(n,e)),wj=Bn(Gu,QR),Sj={kernelName:Gu,backendName:"cpu",kernelFunc:wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JR=In((n,e)=>Math.min(n,e)),_j=Bn(Vu,JR),Tj={kernelName:Vu,backendName:"cpu",kernelFunc:_j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT=In((n,e)=>n*e),Ij=tT((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Jy=Bn($u,sT,Ij),Cj={kernelName:$u,backendName:"cpu",kernelFunc:Jy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e,t){const s=_a(-1,t);return sT([],e,s,n,t)}function Mj(n){const{inputs:e,backend:t}=n,{x:s}=e;ze(s,"neg");const i=t.data.get(s.dataId).values,[r,a]=qR(i,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,r)}const Ej={kernelName:Cp,backendName:"cpu",kernelFunc:Mj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA=In((n,e)=>n!==e?1:0),kj=Bn(Mp,eA,null,"bool"),Nj={kernelName:Mp,backendName:"cpu",kernelFunc:kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n,e,t,s,i){const r=e.length,a=oe(e),o=Xe(e),l=Xe(i),c=Pn(t,oe(i));for(let u=0;u<a;++u){const h=Al(u,r,o),d=new Array(h.length);for(let m=0;m<d.length;m++)d[m]=h[s[m]];const p=tr(d,r,l);c[p]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(n){const{inputs:e,attrs:t,backend:s}=n,{x:i}=e,{perm:r}=t;ze(i,"transpose");const a=i.shape.length,o=new Array(a);for(let u=0;u<o.length;u++)o[u]=i.shape[r[u]];const l=s.data.get(i.dataId).values,c=iT(l,i.shape,i.dtype,r,o);return{dataId:s.write(c,o,i.dtype),shape:o,dtype:i.dtype}}const Rj={kernelName:nl,backendName:"cpu",kernelFunc:Ds};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,e,t,s){const[i,r]=Un(n,s),a=As(e,"int32"),o=Yn(oe(i),a),l=oe(r);for(let c=0;c<o.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=t[u+d];o[c]=h}return{outVals:o,outShape:i,outDtype:a}}function Aj(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s;ze(i,"prod");const o=i.shape.length,l=ft(r,i.shape),c=an(l,o);let u=l,h=i;const d=[];c!=null&&(h=Ds({inputs:{x:i},backend:t,attrs:{perm:c}}),d.push(h),u=yn(u.length,o));const p=t.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:f}=tA(h.shape,h.dtype,p,u);let y=g;return a&&(y=gn(g,l)),d.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,f,m)}const Lj={kernelName:Lp,backendName:"cpu",kernelFunc:Aj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n,e,t){n.forEach((s,i)=>{if(s<0||s>=t){const r=Al(i,e.length,Xe(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${t})`)}})}function Dj(n,e){for(let t=0;t<n.length;++t){const s=n[t],i=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function Fj(n,e,t,s){const i=[];let r=0;const a=e.length-1+t.length,o=new Array(a).fill(null).map(()=>[0]);Dj(t,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const u=e[c+1];for(let h=1;h<l+1;++h)o[c].push(h*u)}for(let c=0;c<n.length;++c){let u=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const p=t[d],m=d+e.length-1;if(m>=0){const g=o[m],f=g[g.length-1]-p[u];for(let y=u;y<h;++y)o[m].push(p[y+1]+f)}u=p[u],h=p[h]}h!==u&&(i.push([u,h]),r+=h-u)}return{outSplits:o,valueSlices:i,numValues:r}}function Oj(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,i=pn("int32",s);e.push(i),n[t].forEach((r,a)=>i[a]=r)}return e}function IC(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function zj(n,e,t,s,i,r){const a=IC(e,2)[1],o=IC(r,2)[1];let l=0;for(const c of t)for(let u=c[0];u<c[1];++u){for(let h=0;h<s;++h)i[l*o+h]=n[u*a+h];++l}}function Gj(n,e,t,s,i){const r=e.slice();r[0]=i;const a=pn(t,oe(r)),o=n.length,l=o===0?0:o/e[0];return zj(n,e,s,l,a,r),[a,r]}function nA(n,e,t,s,i,r,a,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(Pj(r,a,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:h,numValues:d}=Fj(r,a,n,c),p=Oj(u),m=Gj(t,s,i,h,d);return[p,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC=2147483647;function sA(n,e,t,s,i,r,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=i.length===0,c=a.length===0,u=[];o||u.push(e[0]),l||u.push(i[0]),c||u.push(a[0]);for(let f=1;f<u.length;++f)if(u[f]!==u[f-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=pn("int32",h+1);d[0]=0;for(let f=0;f<h;++f){const y=o?n[0]:n[f],b=l?s[0]:s[f],x=c?r[0]:r[f];if(x===0)throw new Error("Requires delta != 0");let v;if(x>0&&b<y||x<0&&b>y)v=0;else if(v=Math.ceil(Math.abs((b-y)/x)),v>CC)throw new Error(`Requires ((limit - start) / delta) <= ${CC}`);d[f+1]=d[f]+v}const p=d[h],m=pn(t,p);let g=0;for(let f=0;f<h;++f){const y=d[f+1]-d[f];let b=o?n[0]:n[f];const x=c?r[0]:r[f];for(let v=0;v<y;++v)m[g++]=b,b+=x}return[d,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ii=Qi;class lg{constructor(e,t,s,i,r,a,o,l,c,u){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=i,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Xk(u),this.raggedRank=Hk(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ii.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ii.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ii.VALUE_ROWIDS:return lg.getMaxWidthValueRowID(t);case Ii.ROW_SPLITS:return lg.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Ii[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let i=0;i<t-1;++i){const r=e[i+1]-e[i];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,i=e[0],r=0;for(let a=1;a<t;++a){const o=e[a];o!==i&&(i=o,r=Math.max(a-s,r),s=a)}return Math.max(t-s,r)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return EC(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;Zk(s,t);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Bk(this.raggedRank,i,t);r[0]<0&&(r[0]=e);for(let a=1;a<=this.raggedRank;++a)r[a]<0&&(r[a]=this.getMaxWidth(a));return r}calculateFirstParentOutputIndex(e,t,s){const i=Math.min(e,s),r=[];let a=0;for(let o=0;o<i;++o,a+=t)r.push(a);for(let o=i;o<e;++o)r.push(-1);return E(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,s,i){const r=e.length,a=[];for(let o=0;o<r-1;++o){const l=e[o+1]-e[o];let c=Math.min(i,l),u=t[o];u===-1&&(c=0);for(let h=0;h<c;++h)a.push(u),u+=s;for(let h=0;h<l-c;++h)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,s,i){const r=e.length,a=[];if(r===0)return[];let o=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];a.push(c);for(let u=1;u<r;++u){const h=e[u];if(h===l)c>=0&&(++o,o<i?c+=s:c=-1);else{if(o=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,s,i){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Ii.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,s,i);case Ii.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,s,i);default:throw new Error(`Unsupported partition type: ${Ii[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Ii.FIRST_DIM_SIZE:return e[0];case Ii.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ii.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ii[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let a=s.length-2;a>=0;--a)s[a]=s[a+1]*t[a+1];const i=EC(t,!1),r=pn(this.valuesDType,oe(i));if(s[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,s[0],t[0]);for(let o=1;o<=this.raggedRank;++o)a=this.calculateOutputIndex(o-1,a,s[o],t[o]);this.setOutput(this.raggedRank,a,r,i)}return[i,r]}setOutput(e,t,s,i){if(s.length===0)return;const r=this.values,a=s;let o=i.slice();o=o.slice(e+1);const l=oe(o),c=t.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const m=this.defaultValueShape;Q(()=>{const g=K(u,m);u=sl(g,o).dataSync()})}let h=0,d=0,p=0;for(let m=0;m<=c;++m){let g=m<c?t[m]:-1;if(g===p){++p;continue}if(d<p){const f=r.subarray(h*l),y=a.subarray(d*l),b=(p-d)*l;MC(y,f,b)}if(m>=c){const f=s.length;g=Math.floor(f/l)}if(g>p)if(this.defaultValue.length===1)a.subarray(p*l,g*l).fill(this.defaultValue[0]),p=g;else for(;g>p;){const f=a.slice(p*l);MC(f,u,l),++p}g<0?(h=m+1,d=p):(h=m,d=p,p=d+1)}}}function MC(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function EC(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function iA(n,e,t,s,i,r,a,o,l,c){return new lg(n,e,t,s,i,r,a,o,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,e,t,s){const i=n===e,r=n<e&&t<0,a=e<n&&t>1;if(i||r||a)return Yn(0,s);const o=Math.abs(Math.ceil((e-n)/t)),l=Yn(o,s);e<n&&t===1&&(t=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aA=So(n=>1/Math.sqrt(n)),Vj=Ih(Ku,aA),Wj={kernelName:Ku,backendName:"cpu",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vc(n,e,t,s,i,r,a,o,l,c){const u=[s/i,i],h=n.values,d=e.values;if(s===0)return ct(t,e.dtype);const p=ct(u,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let m=0;m<r;m++){const g=[];let f=0;for(let y=0;y<a;y++){const b=h[m*a+y];g.push(b),f+=b*o[y]}if(f<0||f>=s/i)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let y=0;y<i;y++)c?p.values[f*i+y]+=d[m*i+y]:p.values[f*i+y]=e.rank===0?d[0]:d[m*i+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $j=So(n=>1/(1+Math.exp(-n))),oA=At(qu,n=>1/(1+Math.exp(-n))),Uj={kernelName:qu,backendName:"cpu",kernelFunc:oA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e,t,s,i){const r=oS(s,e,t),a=oe(t),o=Xe(s);if(r){const h=lS(e,o);return i==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const l=i==="string"?wl(n):n,c=ct(s,i,l),u=ct(t,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),p=d.map((m,g)=>m+e[g]);u.set(c.get(...p),...d)}return i==="string"?pN(u.values):u.values}function Tl(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,size:a}=s;ze(i,"slice");const[o,l]=Iy(i,r,a);rS(i,o,l);const c=t.data.get(i.dataId).values,u=lA(c,o,l,i.shape,i.dtype);return t.makeTensorInfo(l,i.dtype,u)}const Bj={kernelName:Gp,backendName:"cpu",kernelFunc:Tl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n,e,t,s,i,r,a){const o=e[0],l=r[0],c=new Array(l),u=new Array(o),h=e[1];if(l===0){if(o!==0)throw new Error(eN(o));const f=pn(t,0),y=pn(i,0);return[f,[0,h],y,c,u]}let d=!0,p=0;const m=new Array(l).fill(0);for(let f=0;f<o;++f){const y=n[f*h];if(y<0)throw new Error(tN(f,y));if(y>=l)throw new Error(nN(f,y,l));++m[y],d=d&&y>=p,p=y}let g=!0;for(let f=0;f<l;++f){const y=m[f]===0;c[f]=y,g=g&&!y,m[f]=Math.max(m[f],1),f>0&&(m[f]+=m[f-1])}if(g&&d){const f=n,y=s;for(let b=0;b<o;++b)u[b]=b;return[f,[o,h],y,c,u]}else{const f=m[l-1],y=pn(t,f*h),b=pn(i,f),x=new Array(l).fill(0);for(let v=0;v<o;++v){const w=n[v*h],_=x[w],T=(w===0?0:m[w-1])+_;x[w]++;for(let C=0;C<h;++C)y[T*h+C]=n[v*h+C];b[T]=s[v],u[v]=T}for(let v=0;v<l;++v)if(x[v]===0){const w=v===0?0:m[v-1];y[w*h+0]=v;for(let _=1;_<h;++_)y[w*h+_]=0;b[w]=a}return[y,[f,h],b,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n,e,t,s,i){const r=oe(s),a=e[0],o=i.length,l=[];let c=1,u=-1;for(let g=0;g<o;++g){const f=i[g];if(f===-1){if(u!==-1)throw new Error(sN(u,g));u=g,l.push(1)}else{if(f<0)throw new Error(iN(g,f));c*=f,l.push(f)}}if(u!==-1){if(c<=0)throw new Error(rN());const g=Math.trunc(r/c);if(c*g!==r)throw new Error(aN(s,l));l[u]=g}if(oe(l)!==r)throw new Error(oN(s,l));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let g=h-2;g>=0;--g)d[g]=d[g+1]*s[g+1]}const p=[];if(o>0){p[o-1]=1;for(let g=o-2;g>=0;--g)p[g]=p[g+1]*l[g+1]}const m=pn(t,a*o);for(let g=0;g<a;++g){let f=0;for(let y=0;y<h;++y)f+=n[g*h+y]*d[y];for(let y=0;y<o;++y)m[g*o+y]=Math.trunc(f/p[y]),f%=p[y]}return[m,[a,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,e,t,s,i,r=!1,a=0){const o=s.length,l=[e[0],n.length/e[0]],c=l[1],u=o>0?i[o-1]+1:0;if(u<0)throw new Error(k1());const h=e.slice();h[0]=u;const d=h.reduce((b,x)=>b*x,1),p=pn(t,d);if(o===0)return u>0&&p.fill(a),[p,h];if(u<=0)throw new Error(k1());let m=0,g=1,f=0,y=i[m];for(;;){let b=0;if(g<o){if(b=i[g],y===b){++g;continue}if(y>=b)throw new Error(lN())}if(y<0||y>=u)throw new Error(cN(y,u));y>f&&p.fill(a,f*c,y*c);for(let x=m;x<g;++x){const v=s[x];if(v<0||v>=l[0])throw new Error(uN(x,s[x],l[0]));for(let w=0;w<c;w++)p[y*c+w]+=n[v*c+w]}if(r)for(let x=0;x<c;x++)p[y*c+x]/=g-m;if(m=g,++g,f=y+1,y=b,g>o)break}return f<u&&p.fill(a,f*c,u*c),[p,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj=So(n=>Math.sqrt(n)),Hj=At(th,n=>Math.sqrt(n)),Zj={kernelName:th,backendName:"cpu",kernelFunc:Hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA=In((n,e)=>{const t=n-e;return t*t}),Kj=Bn(nh,hA),Yj={kernelName:nh,backendName:"cpu",kernelFunc:Kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n,e,t,s){const i=ct(n,e.dtype);for(let r=0;r<i.size;r++){const a=i.indexToLoc(r),o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[l]*t[l]+s[l];i.set(e.get(...o),...a)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jj{constructor(e,t,s,i,r,a){this.separator=Nr(e),this.nGramWidths=t,this.leftPad=Nr(s),this.rightPad=Nr(i),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,i,r,a){for(let o=0;o<r;++o){const l=this.getPadWidth(a),c=Math.max(0,l-o),u=Math.max(0,l-(r-(o+1))),h=a-(c+u),d=t+(c>0?0:o-l);let p=0;p+=c*this.leftPad.length;for(let b=0;b<h;++b)p+=e[d+b].length;p+=u*this.rightPad.length;const m=c+u+h-1;p+=m*this.separator.length,s[i+o]=new Uint8Array(p);const g=s[i+o];let f=0;const y=b=>b.forEach(x=>g[f++]=x);for(let b=0;b<c;++b)y(this.leftPad),y(this.separator);for(let b=0;b<h-1;++b)y(e[d+b]),y(this.separator);if(h>0){y(e[d+h-1]);for(let b=0;b<u;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<u-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,i=t.length;if(i>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<i;++c){let u=t[c]>=l;if(u=u&&t[c]<=s,!u)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${s}]`);l=t[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const r=i-1,a=pn("int32",i);if(s===0||i===0){const l=new Array(s);for(let c=0;c<=r;++c)a[c]=0;return[l,a]}a[0]=0;for(let l=1;l<=r;++l){const c=t[l]-t[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),a[l]=a[l-1]+u}const o=new Array(a[r]);for(let l=0;l<r;++l){const c=t[l];let u=a[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,c,o,u,p,h),u+=p}),this.preserveShort&&u===a[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(e,c,o,u,p,d)}}return[o,a]}}function pA(n,e,t,s,i,r,a,o){return new jj(t,s,i,r,a,o).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qj(n,e,t,s){if(!n.length)return;if(e.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(e.length===1){const r=e[0];let a=n.indexOf(r);for(;a!==-1;){const o=n.subarray(0,a);(!t||o.length!==0)&&s.push(o),n=n.subarray(a+1),a=n.indexOf(r)}(!t||n.length!==0)&&s.push(n);return}let i=0;for(let r=0;r<n.length+1;r++)if(r===n.length||e.indexOf(n[r])!==-1){const a=n.subarray(i,r);(!t||a.length!==0)&&s.push(a),i=r+1}}function fA(n,e,t){const s=n.length,i=[];let r=0,a=0;const o=new Array(s);for(let d=0;d<s;++d){const p=i.length;Qj(n[d],e,t,i);const m=i.length-p;o[d]=m,r+=m,a=Math.max(a,m)}const l=pn("int32",r*2),c=new Array(r),u=[s,a];let h=0;for(let d=0;d<s;++d)for(let p=0;p<o[d];++p)l[h*2]=d,l[h*2+1]=p,c[h]=i[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,e){const t=pn("int32",n.length);for(let s=0;s<n.length;++s)t[s]=$E(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gA=In((n,e)=>n-e),Jj=tT((n,e,t,s)=>({real:n-t,imag:e-s})),aT=Bn(sh,gA,Jj),qj={kernelName:sh,backendName:"cpu",kernelFunc:aT};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n,e){const t=new Array(n.rank);for(let i=0;i<t.length;i++)t[i]=n.shape[i]*e[i];const s=ct(t,n.dtype);for(let i=0;i<s.values.length;++i){const r=s.indexToLoc(i),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=r[l]%n.shape[l];const o=n.locToIndex(a);s.values[i]=n.values[o]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qh=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function bA(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const o=s-t+1,l=e-t+1,c=Math.log(o),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(o-u)/o)*Math.sign(l-o/2),d=Math.max(t,Math.floor(e-l*u/o+h)),p=Math.min(s,Math.floor(e+(o-l)*u/o+h));bA(n,e,d,p)}const i=n[e];let r=t,a=s;for(ra(n,t,e),qh(n[s],i)>0&&ra(n,t,s);r<a;){for(ra(n,r,a),r++,a--;qh(n[r],i)<0;)r=r+1;for(;qh(n[a],i)>0;)a=a-1}qh(n[t],i)===0?ra(n,t,a):(a=a+1,ra(n,a,s)),a<=e&&(t=a+1),e<=a&&(s=a-1)}}function xA(n,e,t,s,i){const r=e[e.length-1],[a,o]=[n.length/r,r],l=Pn(t,a*s),c=Pn("int32",a*s);for(let h=0;h<a;h++){const d=h*o,p=n.subarray(d,d+o);let m=new Array(p.length);p.forEach((b,x)=>m[x]={value:b,index:x}),s<m.length&&(bA(m,s),m=m.slice(0,s)),i&&m.sort(qh);const g=h*s,f=l.subarray(g,g+s),y=c.subarray(g,g+s);for(let b=0;b<s;b++)f[b]=m[b].value,y[b]=m[b].index}const u=e.slice();return u[u.length-1]=s,[ct(u,t,l),ct(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e,t,s){const i=ft(e,t)[0],r=[1,t[0],1];for(let m=0;m<i;m++)r[0]*=t[m];r[1]=t[i];for(let m=i+1;m<t.length;m++)r[2]*=t[m];const a={},o=new Int32Array(t[i]),l=new Rn(r,s,n),c=[],u=r[0]===1&&r[2]===1;for(let m=0;m<t[i];m++){let g;if(u)g=n[m].toString();else{const f=[];for(let y=0;y<r[0];y++)for(let b=0;b<r[2];b++)f.push(l.get(y,m,b));g=f.join(",")}if(a[g]!==void 0)o[m]=a[g];else{const f=Object.keys(a).length;a[g]=f,o[m]=f,c.push(m)}}const h=r.slice();h[1]=Object.keys(a).length;const d=new Rn(h,s);c.forEach((m,g)=>{for(let f=0;f<r[0];f++)for(let y=0;y<r[2];y++)d.set(l.get(f,m,y),f,g,y)});const p=t.slice();return p[i]=h[1],{outputValues:d.values,outputShape:p,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eQ=Object.freeze(Object.defineProperty({__proto__:null,addImpl:AR,bincountImpl:nT,bincountReduceImpl:LR,castImpl:RR,ceilImpl:PR,concatImpl:DR,equalImpl:FR,expImpl:zR,expm1Impl:VR,floorImpl:WR,gatherNdImpl:$R,gatherV2Impl:UR,greaterEqualImpl:XR,greaterImpl:BR,lessEqualImpl:ZR,lessImpl:HR,linSpaceImpl:KR,logImpl:YR,maxImpl:jR,maximumImpl:QR,minimumImpl:JR,multiplyImpl:sT,negImpl:qR,notEqualImpl:eA,prodImpl:tA,raggedGatherImpl:nA,raggedRangeImpl:sA,raggedTensorToTensorImpl:iA,rangeImpl:rA,rsqrtImpl:aA,scatterImpl:vc,sigmoidImpl:$j,simpleAbsImpl:NR,sliceImpl:lA,sparseFillEmptyRowsImpl:cA,sparseReshapeImpl:uA,sparseSegmentReductionImpl:rT,sqrtImpl:Xj,squaredDifferenceImpl:hA,stridedSliceImpl:dA,stringNGramsImpl:pA,stringSplitImpl:fA,stringToHashBucketFastImpl:mA,subImpl:gA,tileImpl:yA,topKImpl:xA,transposeImpl:iT,uniqueImpl:vA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Hv("cpu",()=>new Qy,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wA=At(Cu,n=>n>=0?n:Math.exp(n)-1),tQ={kernelName:Cu,backendName:"cpu",kernelFunc:wA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{alpha:r}=s;ze([i],"leakyRelu");const a=oe(i.shape),o=t.data.get(i.dataId).values,l=Pn("float32",a);for(let c=0;c<o.length;c++)l[c]=o[c]<0?r*o[c]:o[c];return t.makeTensorInfo(i.shape,"float32",l)}const nQ={kernelName:pp,backendName:"cpu",kernelFunc:SA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sQ=In((n,e)=>n<0?e*n:n);function _A(n){const{inputs:e,backend:t}=n,{x:s,alpha:i}=e;ze([s,i],"prelu");const r=t.data.get(s.dataId).values,a=t.data.get(i.dataId).values,[o,l]=sQ(s.shape,i.shape,r,a,"float32");return t.makeTensorInfo(l,"float32",o)}const iQ={kernelName:Ap,backendName:"cpu",kernelFunc:_A};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TA=At(Xu,n=>Math.max(0,n)),rQ={kernelName:Xu,backendName:"cpu",kernelFunc:TA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IA=At(Hu,n=>Math.min(Math.max(0,n),6)),aQ={kernelName:Hu,backendName:"cpu",kernelFunc:IA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cg(n,e,t,s,i){if(t==="linear")return Gr({inputs:{x:e},backend:n});if(t==="relu")return TA({inputs:{x:e},backend:n});if(t==="elu")return wA({inputs:{x:e},backend:n});if(t==="relu6")return IA({inputs:{x:e},backend:n});if(t==="prelu")return _A({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return SA({inputs:{x:e},backend:n,attrs:{alpha:i}});if(t==="sigmoid")return oA({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{shape:r}=s,a=oe(i.shape),o=Nv(r,a),l=oe(o);E(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(i.dataId);const c=t.data.get(i.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=o,h.shape=o}return{dataId:i.dataId,shape:o,dtype:i.dtype}}const oQ={kernelName:Pp,backendName:"cpu",kernelFunc:Ut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r}=e,{transposeA:a,transposeB:o}=s;ze([i,r],"matMul");const l=i.shape.length,c=r.shape.length,u=a?i.shape[l-2]:i.shape[l-1],h=o?r.shape[c-1]:r.shape[c-2],d=a?i.shape[l-1]:i.shape[l-2],p=o?r.shape[c-2]:r.shape[c-1],m=i.shape.slice(0,-2),g=r.shape.slice(0,-2),f=oe(m),y=oe(g),b=st(i.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);E(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${i.shape} and ${r.shape} and transposeA=${a} and transposeB=${o} must match.`);const x=a?[f,u,d]:[f,d,u],v=o?[y,p,h]:[y,h,p],w=Ut({inputs:{x:i},backend:t,attrs:{shape:x}}),_=Ut({inputs:{x:r},backend:t,attrs:{shape:v}}),T=a?w.shape[1]:w.shape[2],C=a?w.shape[2]:w.shape[1],S=o?_.shape[1]:_.shape[2],M=Math.max(f,y),A=t.data.get(w.dataId).values,P=t.data.get(_.dataId).values,D=Xe(w.shape),N=Xe(_.shape),[L,G,V]=a?[D[0],1,D[1]]:[D[0],D[1],1],[U,H,j]=o?[1,N[1],N[0]]:[N[1],1,N[0]],O=C*S,X=ct([M,C,S],w.dtype),ee=X.values,te=t.blockSize;for(let se=0;se<M;se++){const pe=se%f,me=se%y;for(let fe=0;fe<C;fe+=te){const Ce=Math.min(fe+te,C);for(let Ue=0;Ue<S;Ue+=te){const Me=Math.min(Ue+te,S);for(let J=0;J<T;J+=te){const ht=Math.min(J+te,T);for(let Ne=fe;Ne<Ce;Ne++)for(let Fe=Ue;Fe<Me;Fe++){let Ae=0;for(let Ye=J;Ye<ht;Ye++){const He=A[pe*L+Ne*G+Ye*V],qe=P[Ye*U+Fe*H+me*j];Ae+=He*qe}ee[se*O+(Ne*S+Fe)]+=Ae}}}}}return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),t.makeTensorInfo(b,X.dtype,X.values)}const lQ={kernelName:Jd,backendName:"cpu",kernelFunc:CA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cQ(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,p,m;const g=[];d=CA({inputs:{a:i,b:r},attrs:{transposeA:l,transposeB:c},backend:t}),a&&(p=Kc({inputs:{a:d,b:a},backend:t}),g.push(d),d=p),u&&(m=cg(t,d,u,o,h),g.push(d),d=m);for(const f of g)t.disposeIntermediateTensorInfo(f);return d}const uQ={kernelName:fd,backendName:"cpu",kernelFunc:cQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hQ=At(pu,n=>Math.acos(n)),dQ={kernelName:pu,backendName:"cpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pQ=At(fu,n=>Math.acosh(n)),fQ={kernelName:fu,backendName:"cpu",kernelFunc:pQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(n){const{inputs:e,backend:t}=n,s=e;ze(e,"addN");const i=s.map(o=>t.data.get(o.dataId).values),r=ct(s[0].shape,s[0].dtype),a=r.values;for(let o=0;o<s.length;o++){const l=i[o];for(let c=0;c<a.length;c++)a[c]+=l[c]}return t.makeTensorInfo(r.shape,r.dtype,r.values)}const gQ={kernelName:Zd,backendName:"cpu",kernelFunc:mQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s;ze(i,"all");const o=ft(r,i.shape);let l=o;const c=an(l,i.shape.length);let u=i;c!=null&&(u=Ds({inputs:{x:i},backend:t,attrs:{perm:c}}),l=yn(l.length,i.shape.length)),es("all",l,u.shape.length);const[h,d]=Un(u.shape,l),p=oe(d),m=Yn(oe(h),u.dtype),g=t.data.get(u.dataId).values;for(let y=0;y<m.length;++y){const b=y*p;let x=g[b];for(let v=0;v<p;++v){const w=g[b+v];x=x&&w}m[y]=x}c!=null&&t.disposeIntermediateTensorInfo(u);const f=t.makeTensorInfo(h,u.dtype,m);if(a){const y=gn(h,o),b=Ut({inputs:{x:f},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(f),b}return f}const bQ={kernelName:Og,backendName:"cpu",kernelFunc:yQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s;ze(i,"any");const o=ft(r,i.shape);let l=o;const c=an(l,i.shape.length);let u=i;c!=null&&(u=Ds({inputs:{x:i},backend:t,attrs:{perm:c}}),l=yn(l.length,i.shape.length)),es("any",l,u.shape.length);const[h,d]=Un(u.shape,l),p=oe(d),m=Yn(oe(h),u.dtype),g=t.data.get(u.dataId).values;for(let y=0;y<m.length;++y){const b=y*p;let x=g[b];for(let v=0;v<p;++v){const w=g[b+v];x=x||w}m[y]=x}c!=null&&t.disposeIntermediateTensorInfo(u);const f=t.makeTensorInfo(h,u.dtype,m);if(a){const y=gn(h,o),b=Ut({inputs:{x:f},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(f),b}return f}const vQ={kernelName:zg,backendName:"cpu",kernelFunc:xQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;ze(i,"argMax");let a=ft(r,i.shape);const o=an(a,i.shape.length);let l=i;const c=[];o!=null&&(l=Ds({inputs:{x:i},backend:t,attrs:{perm:o}}),c.push(l),a=yn(a.length,l.shape.length)),a=[a[0]],es("argMax",a,l.shape.length);const[u,h]=Un(l.shape,a),d=oe(u),p=Yn(d,"int32"),m=oe(h),g=t.data.get(l.dataId).values;for(let f=0;f<p.length;++f){const y=f*m;let b=g[y],x=0;for(let v=0;v<m;++v){const w=g[y+v];w>b&&(b=w,x=v)}p[f]=x}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),t.makeTensorInfo(u,"int32",p)}const SQ={kernelName:Kd,backendName:"cpu",kernelFunc:wQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;ze(i,"argMin");let a=ft(r,i.shape);const o=an(a,i.shape.length);let l=i;const c=[];o!=null&&(l=Ds({inputs:{x:i},backend:t,attrs:{perm:o}}),c.push(l),a=yn(a.length,l.shape.length)),a=[a[0]],es("argMin",a,l.shape.length);const[u,h]=Un(l.shape,a),d=oe(u),p=Yn(d,"int32"),m=oe(h),g=t.data.get(l.dataId).values;for(let f=0;f<p.length;++f){const y=f*m;let b=g[y],x=0;for(let v=0;v<m;++v){const w=g[y+v];w<b&&(b=w,x=v)}p[f]=x}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),t.makeTensorInfo(u,"int32",p)}const TQ={kernelName:Yd,backendName:"cpu",kernelFunc:_Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ=At(mu,n=>Math.asin(n)),CQ={kernelName:mu,backendName:"cpu",kernelFunc:IQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MQ=At(gu,n=>Math.asinh(n)),EQ={kernelName:gu,backendName:"cpu",kernelFunc:MQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kQ=At(yu,n=>Math.atan(n)),NQ={kernelName:yu,backendName:"cpu",kernelFunc:kQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RQ=In((n,e)=>Math.atan2(n,e)),AQ=Bn(xu,RQ),LQ={kernelName:xu,backendName:"cpu",kernelFunc:AQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PQ=At(bu,n=>Math.atanh(n)),DQ={kernelName:bu,backendName:"cpu",kernelFunc:PQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,e,t,s,i,r){const a=i.strideHeight,o=i.strideWidth,l=i.dilationHeight,c=i.dilationWidth,u=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,p=i.padInfo.left,m=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ct(i.outShape,t),f=g.values,y=i.outShape[1]*i.outShape[2]*i.outShape[3],b=i.outShape[2]*i.outShape[3],x=i.outShape[3];for(let v=0;v<i.batchSize;++v){const w=v*y,_=v*s[0];for(let T=0;T<i.inChannels;++T)for(let C=0;C<i.outHeight;++C){const S=C*a-d,M=Math.max(0,S),A=Math.min(i.inHeight,u+S),P=w+C*b;for(let D=0;D<i.outWidth;++D){const N=D*o-p,L=Math.max(0,N),G=Math.min(i.inWidth,h+N);let V=m,U=0,H=0;for(let O=M;O<A;O+=l){const X=_+O*s[1];for(let ee=L;ee<G;ee+=c){const te=X+ee*s[2],se=n[te+T];r==="max"&&se>V?V=se:r==="avg"&&(U+=se,H++)}if(isNaN(V))break}const j=P+D*x+T;f[j]=r==="avg"?U/H:V}}}return g}function MA(n,e,t,s,i=!1,r=!1){const a=ct(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,m=s.padInfo.left,g=ct(e,t,n);for(let f=0;f<s.batchSize;++f)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const x=b*o-p;let v=x;for(;v<0;)v+=c;const w=Math.min(s.inHeight,h+x);for(let _=0;_<s.outWidth;++_){const T=_*l-m;let C=T;for(;C<0;)C+=u;const S=Math.min(s.inWidth,d+T);let M=Number.NEGATIVE_INFINITY,A=-1;for(let P=v;P<w;P+=c){const D=P-x;for(let N=C;N<S;N+=u){const L=N-T,G=g.get(f,P,N,y);G>M&&(M=G,i?A=r?((f*s.inHeight+P)*s.inWidth+N)*s.inChannels+y:(P*s.inWidth+N)*s.inChannels+y:A=D*d+L)}}a.set(A,f,b,_,y)}}return a}function EA(n,e,t,s,i,r){const a=i.strideDepth,o=i.strideHeight,l=i.strideWidth,c=i.dilationDepth,u=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,p=i.effectiveFilterHeight,m=i.effectiveFilterWidth,g=i.padInfo.front,f=i.padInfo.top,y=i.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ct(i.outShape,t),v=x.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[2]*i.outShape[3]*i.outShape[4],T=i.outShape[3]*i.outShape[4],C=i.outShape[4];for(let S=0;S<i.batchSize;++S){const M=S*w,A=S*s[0];for(let P=0;P<i.inChannels;++P)for(let D=0;D<i.outDepth;++D){const N=D*a-g;let L=N;for(;L<0;)L+=c;const G=Math.min(i.inDepth,d+N),V=M+D*_;for(let U=0;U<i.outHeight;++U){const H=U*o-f;let j=H;for(;j<0;)j+=u;const O=Math.min(i.inHeight,p+H),X=V+U*T;for(let ee=0;ee<i.outWidth;++ee){const te=ee*l-y;let se=te;for(;se<0;)se+=h;const pe=Math.min(i.inWidth,m+te),me=X+ee*C;let fe=b,Ce=0,Ue=0;for(let J=L;J<G;J+=c){const ht=A+J*s[1];for(let Ne=j;Ne<O;Ne+=u){const Fe=ht+Ne*s[2];for(let Ae=se;Ae<pe;Ae+=h){const Ye=Fe+Ae*s[3],He=n[Ye+P];if(r==="max"&&He>fe?fe=He:r==="avg"&&(Ce+=He,Ue++),isNaN(fe))break}if(isNaN(fe))break}if(isNaN(fe))break}const Me=me+P;v[Me]=r==="avg"?Ce/Math.max(Ue,1):fe}}}}return x}function FQ(n,e){const t=ct(e.outShape,"int32"),s=e.strideDepth,i=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,m=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let f=0;f<e.inChannels;++f)for(let y=0;y<e.outDepth;++y){const b=y*s-d;let x=b;for(;x<0;)x+=a;const v=Math.min(e.inDepth,c+b);for(let w=0;w<e.outHeight;++w){const _=w*i-p;let T=_;for(;T<0;)T+=o;const C=Math.min(e.inHeight,u+_);for(let S=0;S<e.outWidth;++S){const M=S*r-m;let A=M;for(;A<0;)A+=l;const P=Math.min(e.inWidth,h+M);let D=Number.NEGATIVE_INFINITY,N=-1;for(let L=x;L<v;L+=a){const G=L-b;for(let V=T;V<C;V+=o){const U=V-_;for(let H=A;H<P;H+=l){const j=H-M,O=n.get(g,L,V,H,f);O>=D&&(D=O,N=G*u*h+U*u+j)}}}t.set(N,g,y,w,S,f)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;ze(i,"avgPool");const{filterSize:r,strides:a,pad:o,dimRoundingMode:l}=s,c=1;E(qn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ui(i.shape,r,a,c,o,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&vt(u.inShape,u.outShape))h=Gr({inputs:{x:i},backend:t});else{const d=t.data.get(i.dataId).values,p=Xe(i.shape),m=oT(d,i.shape,i.dtype,p,u,"avg");h=t.makeTensorInfo(u.outShape,i.dtype,m.values)}return h}const zQ={kernelName:jd,backendName:"cpu",kernelFunc:OQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:a,pad:o,dimRoundingMode:l,dataFormat:c}=s;ze(i,"avgPool3d");const u=Ta(i.shape,r,a,1,o,l,c),h=t.data.get(i.dataId).values,d=EA(h,i.shape,i.dtype,Xe(i.shape),u,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const VQ={kernelName:Qd,backendName:"cpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s;ze([i,r],"avgPool3DGrad");const u=Ta(r.shape,a,o,1,l,c),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,m=u.filterDepth,g=u.filterHeight,f=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,w=u.effectiveFilterHeight,_=u.effectiveFilterWidth,T=v-1-u.padInfo.front,C=_-1-u.padInfo.left,S=w-1-u.padInfo.top,M=ct(r.shape,"float32"),A=1/(m*g*f),P=t.bufferSync(i);for(let D=0;D<u.batchSize;++D)for(let N=0;N<u.inChannels;++N)for(let L=0;L<u.inDepth;++L)for(let G=0;G<u.inHeight;++G)for(let V=0;V<u.inWidth;++V){const U=L-T,H=G-S,j=V-C;let O=0;for(let X=0;X<v;X+=y){const ee=(U+X)/h;if(!(ee<0||ee>=u.outDepth||Math.floor(ee)!==ee))for(let te=0;te<w;te+=b){const se=(H+te)/d;if(!(se<0||se>=u.outHeight||Math.floor(se)!==se))for(let pe=0;pe<_;pe+=x){const me=(j+pe)/p;if(me<0||me>=u.outWidth||Math.floor(me)!==me)continue;const fe=P.get(D,ee,se,me,N);O+=fe}}}M.set(O*A,D,L,G,V,N)}return t.makeTensorInfo(M.shape,M.dtype,M.values)}const $Q={kernelName:Vg,backendName:"cpu",kernelFunc:WQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,a=r;ze([i,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:c}=s,u=Ui(a.shape,o,l,1,c),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,m=u.filterWidth,g=u.dilationHeight,f=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,w=ct(a.shape,"float32"),_=1/(p*m),T=t.data.get(i.dataId).values,C=ct(i.shape,"float32",T);for(let S=0;S<u.batchSize;++S)for(let M=0;M<u.inChannels;++M)for(let A=0;A<u.inHeight;++A)for(let P=0;P<u.inWidth;++P){const D=A-v,N=P-x;let L=0;for(let G=0;G<y;G+=g){const V=(D+G)/h;if(!(V<0||V>=u.outHeight||Math.floor(V)!==V))for(let U=0;U<b;U+=f){const H=(N+U)/d;if(H<0||H>=u.outWidth||Math.floor(H)!==H)continue;const j=C.get(S,V,H,M);L+=j}}w.set(L*_,S,A,P,M)}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const BQ={kernelName:Gg,backendName:"cpu",kernelFunc:UQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,scale:r,offset:a,mean:o,variance:l}=e;E(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(r==null||o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ze([i,o,l,r,a],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=t.data.get(i.dataId).values,h=t.data.get(o.dataId).values,d=t.data.get(l.dataId).values,p=r?t.data.get(r.dataId).values:new Float32Array([1]),m=a?t.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),f=m.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,_=0,T=0;for(let C=0;C<u.length;++C)g[C]=m[v++]+(u[C]-h[w++])*p[_++]/Math.sqrt(d[T++]+c),v>=f&&(v=0),w>=x&&(w=0),_>=y&&(_=0),T>=b&&(T=0);return t.makeTensorInfo(i.shape,i.dtype,g)}const HQ={kernelName:up,backendName:"cpu",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,crops:a}=s;ze([i],"batchToSpaceND");const o=r.reduce((y,b)=>y*b),l=ff(i.shape,r,o),c=mf(l.length,r.length),u=gf(i.shape,r,o),h=pS(a,r.length),d=fS(u,a,r.length),p=Ut({inputs:{x:i},backend:t,attrs:{shape:l}}),m=Ds({inputs:{x:p},backend:t,attrs:{perm:c}}),g=Ut({inputs:{x:m},backend:t,attrs:{shape:u}}),f=Tl({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),f}const KQ={kernelName:qd,backendName:"cpu",kernelFunc:ZQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:a}=s,o=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,c=nT(o,l,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,c)}const jQ={kernelName:Wg,backendName:"cpu",kernelFunc:YQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QQ(n){const{inputs:e,backend:t}=n,{s0:s,s1:i}=e,r=t.data.get(s.dataId).values,a=t.data.get(i.dataId).values,o=st(Array.from(r),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const JQ={kernelName:$g,backendName:"cpu",kernelFunc:QQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qQ=At(Su,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),e7={kernelName:Su,backendName:"cpu",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(oe(e.shape)),i=t.data.get(e.dataId),r=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,o=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values;for(let c=0;c<o.length;c++){const u=o[c],h=l[c];s[c]=Math.hypot(u,h)}return t.makeOutput(s,e.shape,"float32")},n7={kernelName:ep,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yc(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.data.get(s.dataId).complexTensorInfos.imag,r=t.data.get(i.dataId).values;return t.makeTensorInfo(i.shape,i.dtype,r)}const s7={kernelName:o0,backendName:"cpu",kernelFunc:Yc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jc(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s,r=ft(i,e[0].shape)[0],a=e.map(g=>g.shape);uS(a,r);let o=Ar(e.map(g=>g.shape),r);if(oe(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(g=>oe(g.shape)>0);if(l.length===1)return Gr({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const g=l.map(v=>_l({inputs:{input:v},backend:t})),f=l.map(v=>Yc({inputs:{input:v},backend:t})),y=jc({inputs:g,backend:t,attrs:{axis:r}}),b=jc({inputs:f,backend:t,attrs:{axis:r}}),x=Us({inputs:{real:y,imag:b},backend:t});return g.forEach(v=>t.disposeIntermediateTensorInfo(v)),f.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),x}const c=l.map(g=>{const f=[-1,oe(g.shape.slice(r))];return Ut({inputs:{x:g},backend:t,attrs:{shape:f}})}),u=c.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));o=Ar(c.map(g=>g.shape),1);const h=c[0].shape[0]===1,d=DR(u,o,e[0].dtype,h),p=Ar(l.map(g=>g.shape),r),m=t.makeTensorInfo(p,e[0].dtype,d);return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const i7={kernelName:tp,backendName:"cpu",kernelFunc:jc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:a,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=s;ze([i,r],"conv2d");const h=Ia(l),d=$n(i.shape,r.shape,a,c,o,u,!1,h),p=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,f=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x=d.dataFormat==="channelsLast",v=new Rn(d.outShape,i.dtype),w=Xe(i.shape),_=Xe(r.shape),T=w[0],C=x?w[1]:w[2],S=x?w[2]:1,M=x?1:w[1],A=v.strides[0],P=x?v.strides[1]:v.strides[2],D=x?v.strides[2]:1,N=x?1:v.strides[1],L=t.data.get(i.dataId).values,G=t.data.get(r.dataId).values,V=v.values;for(let U=0;U<d.batchSize;++U){const H=U*T,j=U*A;for(let O=0;O<d.outHeight;++O){const X=j+O*P,ee=O*d.strideHeight-b;for(let te=0;te<p;++te){const se=ee+te*g;if(se<0||se>=d.inHeight)continue;const pe=te*_[0],me=H+se*C;for(let fe=0;fe<d.outWidth;++fe){const Ce=X+fe*D,Ue=fe*d.strideWidth-y;for(let Me=0;Me<m;++Me){const J=Ue+Me*f;if(J<0||J>=d.inWidth)continue;const ht=pe+Me*_[1],Ne=me+J*S;let Fe=ht;for(let Ae=0;Ae<d.inChannels;++Ae){const Ye=L[Ne+Ae*M];for(let He=0;He<d.outChannels;++He)V[Ce+He*N]+=Ye*G[Fe+He];Fe+=d.outChannels}}}}}}return t.makeTensorInfo(v.shape,v.dtype,V)}const r7={kernelName:np,backendName:"cpu",kernelFunc:kA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;ze([i,r],"conv2dBackpropFilter");const h=Ia(l),d=$n(i.shape,u,a,1,o,c,!1,h),{strideHeight:p,strideWidth:m,filterHeight:g,filterWidth:f}=d,y=d.dataFormat==="channelsLast",b=new Rn(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=t.data.get(i.dataId).values,_=t.data.get(r.dataId).values,T=new Rn(i.shape,i.dtype,w),C=new Rn(r.shape,r.dtype,_);for(let S=0;S<g;++S){const M=Math.max(0,Math.ceil((v-S)/p)),A=Math.min(d.outHeight,(d.inHeight+v-S)/p);for(let P=0;P<f;++P){const D=Math.max(0,Math.ceil((x-P)/m)),N=Math.min(d.outWidth,(d.inWidth+x-P)/m);for(let L=0;L<d.inChannels;++L)for(let G=0;G<d.outChannels;++G){let V=0;for(let U=0;U<d.batchSize;++U)for(let H=M;H<A;++H){const j=S+H*p-v;for(let O=D;O<N;++O){const X=P+O*m-x;y?V+=T.get(U,j,X,L)*C.get(U,H,O,G):V+=T.get(U,L,j,X)*C.get(U,G,H,O)}}b.set(V,S,P,L,G)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const o7={kernelName:Bg,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{inputShape:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=s;ze([i,r],"conv2dBackpropInput");const h=Xe(r.shape),d=Xe(i.shape);let p=Ia(c);const m=$n(a,r.shape,o,1,l,u,!1,p),g=new Rn(m.inShape,"float32"),f=g.values,y=t.data.get(i.dataId).values,b=t.data.get(r.dataId).values,[x,v,w]=h,{batchSize:_,filterHeight:T,filterWidth:C,inChannels:S,inHeight:M,inWidth:A,outChannels:P,outHeight:D,outWidth:N,strideHeight:L,strideWidth:G}=m;p=m.dataFormat;const V=T-1-m.padInfo.top,U=C-1-m.padInfo.left,H=p==="channelsLast",j=g.strides[0],O=H?g.strides[1]:g.strides[2],X=H?g.strides[2]:1,ee=H?1:g.strides[1],te=d[0],se=H?d[1]:d[2],pe=H?d[2]:1,me=H?1:d[1];for(let fe=0;fe<_;++fe)for(let Ce=0;Ce<S;++Ce)for(let Ue=0;Ue<M;++Ue){const Me=Ue-V,J=Math.max(0,Math.ceil(Me/L)),ht=Math.min(D,(T+Me)/L);for(let Ne=0;Ne<A;++Ne){const Fe=Ne-U,Ae=Math.max(0,Math.ceil(Fe/G)),Ye=Math.min(N,(C+Fe)/G);let He=0;for(let ot=J;ot<ht;++ot){const Gt=ot*L-Me;for(let Nt=Ae;Nt<Ye;++Nt){const z=Nt*G-Fe,R=te*fe+se*ot+pe*Nt,ie=x*(T-1-Gt)+v*(C-1-z)+w*Ce;for(let ye=0;ye<P;++ye){const ge=y[R+me*ye],xe=b[ie+ye];He+=ge*xe}}}const qe=j*fe+O*Ue+X*Ne+ee*Ce;f[qe]=He}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const c7={kernelName:sp,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:a,pad:o,dilations:l}=s;ze([i,r],"conv3d");const c=bo(i.shape,r.shape,a,l,o),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:m,dilationWidth:g,padInfo:f}=c,y=f.front,b=f.left,x=f.top,v=new Rn(c.outShape,i.dtype),w=t.data.get(i.dataId).values,_=t.data.get(r.dataId).values,T=v.values,C=Xe(i.shape),S=Xe(r.shape);for(let M=0;M<c.batchSize;++M){const A=M*C[0],P=M*v.strides[0];for(let D=0;D<c.outDepth;++D){const N=P+D*v.strides[1],L=D*c.strideDepth-y;for(let G=0;G<u;++G){const V=L+G*p;if(V<0||V>=c.inDepth)continue;const U=G*S[0],H=A+V*C[1];for(let j=0;j<c.outHeight;++j){const O=N+j*v.strides[2],X=j*c.strideHeight-x;for(let ee=0;ee<h;++ee){const te=X+ee*m;if(te<0||te>=c.inHeight)continue;const se=U+ee*S[1],pe=H+te*C[2];for(let me=0;me<c.outWidth;++me){const fe=O+me*c.outChannels,Ce=me*c.strideWidth-b;for(let Ue=0;Ue<d;++Ue){const Me=Ce+Ue*g;if(Me<0||Me>=c.inWidth)continue;const J=se+Ue*S[2],ht=pe+Me*c.inChannels;let Ne=J;for(let Fe=0;Fe<c.inChannels;++Fe){const Ae=w[ht+Fe];for(let Ye=0;Ye<c.outChannels;++Ye)T[fe+Ye]+=Ae*_[Ne+Ye];Ne+=c.outChannels}}}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const h7={kernelName:ip,backendName:"cpu",kernelFunc:u7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:a,pad:o,filterShape:l}=s;ze([i,r],"conv3dBackpropFilterV2");const c=Xe(i.shape),u=Xe(r.shape),h=bo(i.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,m=h.strideWidth,g=h.filterDepth,f=h.filterHeight,y=h.filterWidth,b=new Rn(h.filterShape,"float32"),x=b.values,[v,w,_,T]=b.strides,C=t.data.get(r.dataId).values,[S,M,A,P]=u,D=t.data.get(i.dataId).values,[N,L,G,V]=c,U=h.padInfo.front,H=h.padInfo.left,j=h.padInfo.top;for(let O=0;O<g;++O){const X=Math.max(0,Math.ceil((U-O)/d)),ee=Math.min(h.outDepth,(h.inDepth+U-O)/d),te=O*v;for(let se=0;se<f;++se){const pe=Math.max(0,Math.ceil((j-se)/p)),me=Math.min(h.outHeight,(h.inHeight+j-se)/p),fe=se*w+te;for(let Ce=0;Ce<y;++Ce){const Ue=Math.max(0,Math.ceil((H-Ce)/m)),Me=Math.min(h.outWidth,(h.inWidth+H-Ce)/m),J=Ce*_+fe;for(let ht=0;ht<h.inChannels;++ht){const Ne=ht*T+J;for(let Fe=0;Fe<h.outChannels;++Fe){let Ae=0;for(let Ye=0;Ye<h.batchSize;++Ye){const He=Ye*N,qe=Ye*S;for(let ot=X;ot<ee;++ot){const Gt=(O+ot*d-U)*L+He,Nt=ot*M+qe;for(let z=pe;z<me;++z){const R=(se+z*p-j)*G+Gt,ie=z*A+Nt;for(let ye=Ue;ye<Me;++ye){const ge=(Ce+ye*m-H)*V+R,xe=ye*P+ie;Ae+=D[ge+ht]*C[xe+Fe]}}}}x[Ne+Fe]=Ae}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const p7={kernelName:Xg,backendName:"cpu",kernelFunc:d7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{pad:a,strides:o,inputShape:l}=s;ze([i],"conv3dBackpropInputV2");const c=Xe(i.shape),u=Xe(r.shape),h=bo(l,r.shape,o,1,a),d=new Rn(h.inShape,"float32"),p=d.values,[m,g,f,y]=d.strides,b=t.data.get(i.dataId).values,[x,v,w,_]=c,T=t.data.get(r.dataId).values,[C,S,M,A]=u,{batchSize:P,filterDepth:D,filterHeight:N,filterWidth:L,inChannels:G,inDepth:V,inHeight:U,inWidth:H,outChannels:j,outDepth:O,outHeight:X,outWidth:ee,strideDepth:te,strideHeight:se,strideWidth:pe}=h,me=D-1-h.padInfo.front,fe=N-1-h.padInfo.top,Ce=L-1-h.padInfo.left;for(let Ue=0;Ue<P;++Ue)for(let Me=0;Me<G;++Me)for(let J=0;J<V;++J){const ht=J-me,Ne=Math.max(0,Math.ceil(ht/te)),Fe=Math.min(O,(D+ht)/te);for(let Ae=0;Ae<U;++Ae){const Ye=Ae-fe,He=Math.max(0,Math.ceil(Ye/se)),qe=Math.min(X,(N+Ye)/se);for(let ot=0;ot<H;++ot){const Gt=ot-Ce,Nt=Math.max(0,Math.ceil(Gt/pe)),z=Math.min(ee,(L+Gt)/pe);let R=0;for(let ie=Ne;ie<Fe;++ie){const ye=ie*te-ht;for(let ge=He;ge<qe;++ge){const xe=ge*se-Ye;for(let Be=Nt;Be<z;++Be){const _e=Be*pe-Gt,Pe=x*Ue+v*ie+w*ge+_*Be,et=C*(D-1-ye)+S*(N-1-xe)+M*(L-1-_e)+A*Me;for(let Tt=0;Tt<j;++Tt){const ve=b[Pe+Tt],Rt=T[et+Tt];R+=ve*Rt}}}}p[m*Ue+g*J+f*Ae+y*ot+Me]=R}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const m7={kernelName:Hg,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=At(_u,n=>Math.cos(n)),y7={kernelName:_u,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b7=At(Tu,n=>Math.cosh(n)),x7={kernelName:Tu,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n){const{inputs:e,backend:t,attrs:s}=n,{image:i,boxes:r,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:c}=s,[u,h,d,p]=i.shape,m=r.shape[0],[g,f]=o,y=ct([m,g,f,p],"float32"),b=t.data.get(r.dataId).values,x=t.data.get(a.dataId).values,v=t.data.get(i.dataId).values,w=Xe(i.shape),_=Xe(y.shape);for(let T=0;T<m;T++){const C=T*4,S=b[C],M=b[C+1],A=b[C+2],P=b[C+3],D=x[T];if(D>=u)continue;const N=g>1?(A-S)*(h-1)/(g-1):0,L=f>1?(P-M)*(d-1)/(f-1):0;for(let G=0;G<g;G++){const V=g>1?S*(h-1)+G*N:.5*(S+A)*(h-1);if(V<0||V>h-1){for(let U=0;U<f;U++)for(let H=0;H<p;H++){const j=H+U*_[2]+G*_[1]+T*_[0];y.values[j]=c}continue}if(l==="bilinear"){const U=Math.floor(V),H=Math.ceil(V),j=V-U;for(let O=0;O<f;O++){const X=f>1?M*(d-1)+O*L:.5*(M+P)*(d-1);if(X<0||X>d-1){for(let pe=0;pe<p;pe++){const me=pe+O*_[2]+G*_[1]+T*_[0];y.values[me]=c}continue}const ee=Math.floor(X),te=Math.ceil(X),se=X-ee;for(let pe=0;pe<p;pe++){let me=pe+ee*w[2]+U*w[1]+D*w[0];const fe=v[me];me=pe+te*w[2]+U*w[1]+D*w[0];const Ce=v[me];me=pe+ee*w[2]+H*w[1]+D*w[0];const Ue=v[me];me=pe+te*w[2]+H*w[1]+D*w[0];const Me=v[me],J=fe+(Ce-fe)*se,ht=Ue+(Me-Ue)*se;me=pe+O*_[2]+G*_[1]+T*_[0],y.values[me]=J+(ht-J)*j}}}else for(let U=0;U<f;++U){const H=f>1?M*(d-1)+U*L:.5*(M+P)*(d-1);if(H<0||H>d-1){for(let X=0;X<p;X++){const ee=X+U*_[2]+G*_[1]+T*_[0];y.values[ee]=c}continue}const j=Math.round(H),O=Math.round(V);for(let X=0;X<p;X++){const ee=X+j*w[2]+O*w[1]+D*w[0],te=X+U*_[2]+G*_[1]+T*_[0];y.values[te]=v[ee]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const w7={kernelName:Kg,backendName:"cpu",kernelFunc:v7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:a,reverse:o}=s;ze(i,"cumprod");const l=an([r],i.shape.length);let c=i;l!=null&&(c=Ds({inputs:{x:i},backend:t,attrs:{perm:l}}));const u=yn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=As(c.dtype,"int32"),d=Fg(oe(c.shape),h),p=t.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=m)for(let b=0;b<m;b++){const x=g(y,b);if(b===0)d[x]=a?1:p[x];else{const v=g(y,b-1);d[x]=a?p[v]*d[v]:p[x]*d[v]}}const f=t.makeTensorInfo(c.shape,h,d);if(l!=null){const y=xo(l),b=Ds({inputs:{x:f},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),b}return f}const _7={kernelName:Zg,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:a,reverse:o}=s;ze(i,"cumsum");const l=an([r],i.shape.length);let c=i;l!=null&&(c=Ds({inputs:{x:i},backend:t,attrs:{perm:l}}));const u=yn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=As(c.dtype,"int32"),d=Yn(oe(c.shape),h),p=t.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=m)for(let b=0;b<m;b++){const x=g(y,b);if(b===0)d[x]=a?0:p[x];else{const v=g(y,b-1);d[x]=a?p[v]+d[v]:p[x]+d[v]}}const f=t.makeTensorInfo(c.shape,h,d);if(l!=null){const y=xo(l),b=Ds({inputs:{x:f},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),b}return f}const I7={kernelName:rp,backendName:"cpu",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:a,binaryOutput:o}=s;if(i.shape.length===1){const l=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values,u=nT(l,c,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,u)}else if(i.shape.length===2){const l=t.bufferSync(i),c=t.bufferSync(r),u=LR(l,c,a,o);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const M7={kernelName:Yg,backendName:"cpu",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockSize:r,dataFormat:a}=s;E(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const o=i.shape[0],l=i.shape[1],c=i.shape[2],u=i.shape[3],h=l*r,d=c*r,p=u/(r*r),m=t.data.get(i.dataId).values,g=new Float32Array(o*h*d*p);let f=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){const x=Math.floor(b/r),v=b%r;for(let w=0;w<d;++w){const _=Math.floor(w/r),T=w%r,C=(v*r+T)*p;for(let S=0;S<p;++S){const M=S+C+u*(_+c*(x+l*y));g[f++]=m[M]}}}return t.makeTensorInfo([o,h,d,p],i.dtype,g)}const k7={kernelName:jg,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:c}=s;ze([i,r],"depthwiseConv2DNative");const u=Xe(i.shape),h=Xe(r.shape);let d=l;d==null&&(d=[1,1]),E(qn(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=$n(i.shape,r.shape,a,d,o,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:f,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,_=new Rn(p.outShape,i.dtype),T=t.data.get(i.dataId).values,C=t.data.get(r.dataId).values,S=_.values;for(let M=0;M<p.batchSize;++M){const A=M*u[0],P=M*_.strides[0];for(let D=0;D<p.outHeight;++D){const N=P+D*_.strides[1],L=D*p.strideHeight-v;for(let G=0;G<m;++G){const V=L+G*f;if(V<0||V>=p.inHeight)continue;const U=G*h[0],H=A+V*u[1];for(let j=0;j<p.outWidth;++j){const O=N+j*_.strides[2],X=j*p.strideWidth-x;for(let ee=0;ee<g;++ee){const te=X+ee*y;if(te<0||te>=p.inWidth)continue;const se=U+ee*h[1],pe=H+te*p.inChannels;let me=O,fe=se;for(let Ce=0;Ce<p.inChannels;++Ce){const Ue=T[pe+Ce];for(let Me=0;Me<w;++Me)S[me+Me]+=Ue*C[fe+Me];me+=w,fe+=w}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const N7={kernelName:ap,backendName:"cpu",kernelFunc:NA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=s;ze([i,r],"depthwiseConv2dNativeBackpropFilter");const h=$n(i.shape,u,a,o,l,c,!0),{strideHeight:d,strideWidth:p,filterHeight:m,filterWidth:g}=h,f=new Rn(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=t.data.get(i.dataId).values,w=new Rn(i.shape,i.dtype,v),_=t.data.get(r.dataId).values,T=new Rn(r.shape,r.dtype,_);for(let C=0;C<m;++C){const S=Math.max(0,Math.ceil((b-C)/d)),M=Math.min(h.outHeight,(h.inHeight+b-C)/d);for(let A=0;A<g;++A){const P=Math.max(0,Math.ceil((y-A)/p)),D=Math.min(h.outWidth,(h.inWidth+y-A)/p);for(let N=0;N<h.outChannels;++N){const L=Math.trunc(N/x),G=N%x;let V=0;for(let U=0;U<h.batchSize;++U)for(let H=S;H<M;++H){const j=C+H*d-b;for(let O=P;O<D;++O){const X=A+O*p-y;V+=w.get(U,j,X,L)*T.get(U,H,O,N)}}f.set(V,C,A,L,G)}}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const A7={kernelName:Qg,backendName:"cpu",kernelFunc:R7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=s;ze([i,r],"depthwiseConv2DNativeBackpropInput");const h=Xe(i.shape),d=Xe(r.shape),p=$n(u,r.shape,a,o,l,c,!0),m=new Rn(p.inShape,"float32"),g=m.values,[f,y,b]=m.strides,x=t.data.get(i.dataId).values,[v,w,_]=h,T=t.data.get(r.dataId).values,[C,S,M]=d,{batchSize:A,filterHeight:P,filterWidth:D,inChannels:N,inHeight:L,inWidth:G,outChannels:V,outHeight:U,outWidth:H,strideHeight:j,strideWidth:O}=p,X=P-1-p.padInfo.top,ee=D-1-p.padInfo.left,te=V/N;for(let se=0;se<A;++se)for(let pe=0;pe<N;++pe)for(let me=0;me<L;++me){const fe=me-X,Ce=Math.max(0,Math.ceil(fe/j)),Ue=Math.min(U,(P+fe)/j);for(let Me=0;Me<G;++Me){const J=Me-ee,ht=Math.max(0,Math.ceil(J/O)),Ne=Math.min(H,(D+J)/O);let Fe=0;for(let Ae=Ce;Ae<Ue;++Ae){const Ye=Ae*j-fe;for(let He=ht;He<Ne;++He){const qe=He*O-J,ot=v*se+w*Ae+_*He,Gt=C*(P-1-Ye)+S*(D-1-qe)+M*pe;for(let Nt=0;Nt<te;++Nt){const z=pe*te+Nt,R=x[ot+z],ie=T[Gt+Nt];Fe+=R*ie}}}g[f*se+y*me+b*Me+pe]=Fe}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const P7={kernelName:Jg,backendName:"cpu",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:e,backend:t}=n,{x:s}=e,i=oe(s.shape),r=t.data.get(s.dataId).values,a=ct([i,i],s.dtype),o=a.values;for(let c=0;c<r.length;c++)o[c*i+c]=r[c];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,a.dtype,a.values)}const F7={kernelName:qg,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7={kernelName:op,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:i}=n,{strides:r,pad:a,dilations:o}=t,l=e,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:p,inHeight:m,inWidth:g,inChannels:f,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:_,filterWidth:T,dilationHeight:C,dilationWidth:S,outShape:M}=Yp(s.shape,i.shape,r,a,"NHWC",o),A=oe(M),P=M.length,D=pn(s.dtype,A);for(let N=0;N<p;++N)for(let L=0;L<y;++L){const G=L*v-x.top;for(let V=0;V<b;++V){const U=V*w-x.left;for(let H=0;H<f;++H){let j=Number.MIN_SAFE_INTEGER;for(let X=0;X<_;++X){const ee=G+X*C;if(ee>=0&&ee<m)for(let te=0;te<T;++te){const se=U+te*S;if(se>=0&&se<g){const pe=tr([N,ee,se,H],u,Xe(s.shape)),me=tr([X,te,H],d,Xe(i.shape)),fe=c[pe]+h[me];fe>j&&(j=fe)}}}const O=tr([N,L,V,H],P,Xe(M));D[O]=j}}}return{dataId:l.write(go(D,s.dtype),M,s.dtype),shape:M,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z7={kernelName:Bm,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:i,dy:r}=n,{strides:a,pad:o,dilations:l}=t,c=e,u=fi(s.shape,c.data.get(s.dataId).values),h=fi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:g,outHeight:f,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:_,dilationHeight:T,dilationWidth:C,outShape:S}=Yp(s.shape,i.shape,a,o,"NHWC",l);E(r.rank===S.length,()=>`Error in ${Bm}, dy must have the same rank as output ${S.length}, but got ${r.rank}`);const M=fi(S,c.data.get(r.dataId).values),A=Av(i.shape,i.dtype);for(let P=0;P<d;++P)for(let D=0;D<f;++D){const N=D*x-b.top;for(let L=0;L<y;++L){const G=L*v-b.left;for(let V=0;V<g;++V){let U=Number.MIN_SAFE_INTEGER,H=0,j=0;for(let O=0;O<w;++O){const X=N+O*T;if(X>=0&&X<p)for(let ee=0;ee<_;++ee){const te=G+ee*C;if(te>=0&&te<m){const se=u[P][X][te][V]+h[O][ee][V];se>U&&(U=se,H=O,j=ee)}}}A[H][j][V]+=M[P][D][L][V]}}}return{dataId:c.write(go(A,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G7={kernelName:Um,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:i,dy:r}=n,{strides:a,pad:o,dilations:l}=t,c=e,u=fi(s.shape,c.data.get(s.dataId).values),h=fi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:g,outHeight:f,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:_,dilationHeight:T,dilationWidth:C,outShape:S}=Yp(s.shape,i.shape,a,o,"NHWC",l);E(r.rank===S.length,()=>`Error in ${Um}, dy must have the same rank as output ${S.length}, but got ${r.rank}`);const M=fi(S,c.data.get(r.dataId).values),A=Av(s.shape,s.dtype);for(let P=0;P<d;++P)for(let D=0;D<f;++D){const N=D*x-b.top;for(let L=0;L<y;++L){const G=L*v-b.left;for(let V=0;V<g;++V){let U=Number.MIN_SAFE_INTEGER,H=N<0?0:N,j=G<0?0:G;for(let O=0;O<w;++O){const X=N+O*T;if(X>=0&&X<p)for(let ee=0;ee<_;++ee){const te=G+ee*C;if(te>=0&&te<m){const se=u[P][X][te][V]+h[O][ee][V];se>U&&(U=se,H=X,j=te)}}}A[P][H][j][V]+=M[P][D][L][V]}}}return{dataId:c.write(go(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cf(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s;ze(i,"sum");let o;i.dtype==="bool"?o=po({inputs:{x:i},backend:t,attrs:{dtype:"int32"}}):o=Gr({inputs:{x:i},backend:t});const l=o.shape.length,c=ft(r,o.shape),u=an(c,l);let h=c,d=o;u!=null&&(d=Ds({inputs:{x:o},backend:t,attrs:{perm:u}}),h=yn(h.length,l)),es("sum",h,d.shape.length);const[p,m]=Un(d.shape,h),g=As(d.dtype,"int32");let f=og(t,p,g);const y=oe(m),b=t.data.get(f.dataId).values,x=t.data.get(d.dataId).values;for(let v=0;v<b.length;++v){const w=v*y;let _=0;for(let T=0;T<y;++T)_+=x[w+T];b[v]=_}if(a){const v=gn(f.shape,c),w=f;f=Ut({inputs:{x:f},backend:t,attrs:{shape:v}}),t.disposeIntermediateTensorInfo(w)}return t.disposeIntermediateTensorInfo(o),u!=null&&t.disposeIntermediateTensorInfo(d),f}const V7={kernelName:Vp,backendName:"cpu",kernelFunc:Cf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n){const{inputs:e,backend:t,attrs:s}=n,{equation:i}=s,r=e,{allDims:a,summedDims:o,idDims:l}=SS(i,r.length);TS(a.length,l,r);const{path:c,steps:u}=IS(o,l),h=u.length;let d=null,p=a.length;const m=[];for(let g=0;g<h;++g){for(const f of u[g]){const{permutationIndices:y,expandDims:b}=_S(p,l[f]);let x;CS(y)?x=r[f]:(x=Ds({inputs:{x:r[f]},backend:t,attrs:{perm:y}}),m.push(x));const v=x.shape.slice();for(let w=0;w<b.length;++w)v.splice(b[w],0,1);vt(x.shape,v)||(x=Ut({inputs:{x},backend:t,attrs:{shape:v}}),m.push(x)),d===null?d=x:(d=Jy({inputs:{a:x,b:d},backend:t}),m.push(d))}g<h-1&&(c[g]>=0&&(d=Cf({inputs:{x:d},backend:t,attrs:{axis:c[g]-(a.length-p),keepDims:!1}}),m.push(d)),p--)}for(const g of m)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const $7={kernelName:e0,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(n){const{inputs:e,backend:t}=n,{dy:s,y:i}=e;ze([s,i],"eluGrad");const r=new Float32Array(oe(i.shape)),a=t.data.get(i.dataId).values,o=t.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const c=a[l];c>=1?r[l]=o[l]:r[l]=o[l]*(c+1)}return t.makeTensorInfo(i.shape,"float32",r)}const B7={kernelName:t0,backendName:"cpu",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X7=mS,H7=gS,Z7=yS,K7=bS,Y7=xS,j7=vS,Q7=At(Mu,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+X7*t);return e*(1-((((j7*s+Y7)*s+K7)*s+Z7)*s+H7)*s*Math.exp(-t*t))}),J7={kernelName:Mu,backendName:"cpu",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ug(n){const{inputs:e,backend:t,attrs:s}=n,{input:i}=e,{dim:r}=s,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(E(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),o.splice(l,0,1),Ut({inputs:{x:i},backend:t,attrs:{shape:o}})}const q7={kernelName:cp,backendName:"cpu",kernelFunc:ug};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e8=In((n,e)=>n/e),lT=Bn(Iu,e8),V1={kernelName:Iu,backendName:"cpu",kernelFunc:lT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n,e,t){const s=n.shape,i=s[0],r=s[1],a=t.data.get(n.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,c=[i,r],u=oe(c),h=Pn("float32",u),d=Pn("float32",u);for(let f=0;f<i;f++){const y=Tl({inputs:{x:o},backend:t,attrs:{begin:[f,0],size:[1,r]}}),b=Tl({inputs:{x:l},backend:t,attrs:{begin:[f,0],size:[1,r]}}),x=Us({inputs:{real:y,imag:b},backend:t}),{real:v,imag:w}=t8(x,e,t),_=ya(v,w);for(let T=0;T<r;T++){const C=wS(_,T);h[f*r+T]=C.real,d[f*r+T]=C.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x)}const p=t.makeTensorInfo(c,"float32",h),m=t.makeTensorInfo(c,"float32",d),g=Us({inputs:{real:p,imag:m},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}function t8(n,e,t){const s=oe(n.shape),i=t.data.get(n.dataId),r=t.data.get(i.complexTensorInfos.real.dataId).values,a=t.data.get(i.complexTensorInfos.imag.dataId).values;if(n8(s)){const o=W1(r,a,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",o.real),u=t.makeTensorInfo(l,"float32",o.imag),h=t.makeTensorInfo([],"float32",_a(s,"float32")),d=Gr({inputs:{x:h},backend:t}),p=V1.kernelFunc({inputs:{a:c,b:h},backend:t}),m=V1.kernelFunc({inputs:{a:u,b:d},backend:t}),g=t.data.get(p.dataId).values,f=t.data.get(m.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),{real:g,imag:f}}return o}else{const o=ya(r,a),l=s8(o,s,e);return Kk(l)}}function n8(n){return(n&n-1)===0}function W1(n,e,t,s,i){if(t===1)return{real:n,imag:e};const r=ya(n,e),a=t/2,o=Yk(r),l=o.real,c=o.imag,u=[l.length],h=i.makeTensorInfo(u,"float32",l),d=i.makeTensorInfo(u,"float32",c),p=Us({inputs:{real:h,imag:d},backend:i}),m=jk(r),g=m.real,f=m.imag,y=[g.length],b=i.makeTensorInfo(y,"float32",g),x=i.makeTensorInfo(y,"float32",f),v=Us({inputs:{real:b,imag:x},backend:i}),w=W1(l,c,a,s,i),_=w.real,T=w.imag,C=[_.length],S=i.makeTensorInfo(C,"float32",_),M=i.makeTensorInfo(C,"float32",T),A=Us({inputs:{real:S,imag:M},backend:i}),P=W1(g,f,a,s,i),D=P.real,N=P.imag,L=[D.length],G=i.makeTensorInfo(L,"float32",D),V=i.makeTensorInfo(L,"float32",N),U=Us({inputs:{real:G,imag:V},backend:i}),H=Jk(t,s),j=[H.real.length],O=i.makeTensorInfo(j,"float32",H.real),X=i.makeTensorInfo(j,"float32",H.imag),ee=Us({inputs:{real:O,imag:X},backend:i}),te=Jy({inputs:{a:ee,b:U},backend:i}),se=Kc({inputs:{a:A,b:te},backend:i}),pe=aT({inputs:{a:A,b:te},backend:i}),me=_l({inputs:{input:se},backend:i}),fe=_l({inputs:{input:pe},backend:i}),Ce=Yc({inputs:{input:se},backend:i}),Ue=Yc({inputs:{input:pe},backend:i}),Me=jc({inputs:[me,fe],backend:i,attrs:{axis:0}}),J=jc({inputs:[Ce,Ue],backend:i,attrs:{axis:0}}),ht=i.data.get(Me.dataId).values,Ne=i.data.get(J.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(S),i.disposeIntermediateTensorInfo(M),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(X),i.disposeIntermediateTensorInfo(ee),i.disposeIntermediateTensorInfo(te),i.disposeIntermediateTensorInfo(se),i.disposeIntermediateTensorInfo(pe),i.disposeIntermediateTensorInfo(me),i.disposeIntermediateTensorInfo(Ce),i.disposeIntermediateTensorInfo(fe),i.disposeIntermediateTensorInfo(Ue),i.disposeIntermediateTensorInfo(Me),i.disposeIntermediateTensorInfo(J),{real:ht,imag:Ne}}function s8(n,e,t){const s=new Float32Array(e*2);for(let i=0;i<e;i++){let r=0,a=0;for(let o=0;o<e;o++){const l=qk(i*o,e,t),c=wS(n,o);r+=c.real*l.real-c.imag*l.imag,a+=c.real*l.imag+c.imag*l.real}t&&(r/=e,a/=e),Qk(s,r,a,i)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n){const{inputs:e,backend:t}=n,{input:s}=e,i=oe(s.shape),r=s.shape[s.shape.length-1],a=i/r,o=Ut({inputs:{x:s},backend:t,attrs:{shape:[a,r]}}),l=RA(o,!1,t),c=Ut({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}const r8={kernelName:n0,backendName:"cpu",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n){const{backend:e,attrs:t}=n,{shape:s,value:i,dtype:r}=t,a=r||du(i),o=pn(a,oe(s));return o8(o,i),e.makeTensorInfo(s,a,o)}const a8={kernelName:s0,backendName:"cpu",kernelFunc:cT};function o8(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8={kernelName:i0,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,i=t,r=Pn(s.dtype,oe(s.shape)),[a,o,l,c]=s.shape,u=i.data.get(s.dataId).values;for(let h=0;h<a;h++){const d=h*l*o*c;for(let p=0;p<o;p++){const m=p*(l*c);for(let g=0;g<l;g++){const f=g*c;for(let y=0;y<c;y++){const b=Math.round(l-g-1),x=d+m+f+y;let v=u[x];if(b>=0&&b<l){const w=b*c,_=d+m+w+y;v=u[_]}r[x]=v}}}}return{dataId:i.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=In((n,e)=>Math.floor(n/e)),u8=Bn(Ru,c8,null,"int32"),h8={kernelName:Ru,backendName:"cpu",kernelFunc:u8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d8(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=s;let g=kA({inputs:{x:i,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(a){const f=g;if(u==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const y=Ut({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=Kc({inputs:{a:g,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else g=Kc({inputs:{a:g,b:a},backend:t});t.disposeIntermediateTensorInfo(f)}if(p){const f=g;if(u==="NCHW"&&p==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const y=Ut({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});g=cg(t,g,p,y,m),t.disposeIntermediateTensorInfo(y)}else g=cg(t,g,p,o,m);t.disposeIntermediateTensorInfo(f)}return g}const p8={kernelName:md,backendName:"cpu",kernelFunc:d8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f8(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=s;let g=NA({inputs:{x:i,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(a){const f=g;g=Kc({inputs:{a:g,b:a},backend:t}),t.disposeIntermediateTensorInfo(f)}if(p){const f=g;g=cg(t,g,p,o,m),t.disposeIntermediateTensorInfo(f)}return g}const m8={kernelName:gd,backendName:"cpu",kernelFunc:f8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(n){const{inputs:e,backend:t}=n,{params:s,indices:i}=e,r=oe(s.shape),a=i.shape,o=a[a.length-1],[l,c,u,h]=Ty(s,i);if(c===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(i.dataId).values,p=t.bufferSync(s),m=$R(d,p,s.dtype,c,o,u,h,s.shape,r);return t.makeTensorInfo(l,s.dtype,m.values)}const y8={kernelName:r0,backendName:"cpu",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,indices:r}=e,{axis:a,batchDims:o}=s;ze([i,r],"gatherV2");const l=ft(a,i.shape)[0],c=t.data.get(r.dataId).values,u=i.shape[l];for(let v=0;v<c.length;++v){const w=c[v];E(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=o;o==null&&(h=0);const d=oe(r.shape),p=ES(i,r,l,h),m=Ut({inputs:{x:i},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=Ut({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),f=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=t.bufferSync(g),b=t.bufferSync(m),x=UR(b,y,f);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(p.outputShape,x.dtype,x.values)}const x8={kernelName:hp,backendName:"cpu",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(n){const{inputs:e,backend:t}=n,{input:s}=e,i=oe(s.shape),r=s.shape[s.shape.length-1],a=i/r,o=Ut({inputs:{x:s},backend:t,attrs:{shape:[a,r]}}),l=RA(o,!0,t),c=Ut({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}const w8={kernelName:a0,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S8=At(Pu,n=>Number.isFinite(n)?1:0,"bool"),_8={kernelName:Pu,backendName:"cpu",kernelFunc:S8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T8=At(Du,n=>Math.abs(n)===1/0?1:0,"bool"),I8={kernelName:Du,backendName:"cpu",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C8=At(Fu,n=>Number.isNaN(n)?1:0,"bool"),M8={kernelName:Fu,backendName:"cpu",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(n){const{backend:e,attrs:t}=n,{start:s,stop:i,num:r}=t,a=KR(s,i,r);return e.makeTensorInfo([a.length],"float32",a)}const k8={kernelName:l0,backendName:"cpu",kernelFunc:E8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8=At(zu,n=>Math.log1p(n)),R8={kernelName:zu,backendName:"cpu",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8=In((n,e)=>n&&e),L8=Bn(gp,A8,null,"bool"),P8={kernelName:gp,backendName:"cpu",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8=At(yp,n=>n?0:1,"bool"),F8={kernelName:yp,backendName:"cpu",kernelFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8=In((n,e)=>n||e),z8=Bn(bp,O8,null,"bool"),G8={kernelName:bp,backendName:"cpu",kernelFunc:z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{depthRadius:r,bias:a,alpha:o,beta:l}=s;ze(i,"LRN");const c=i.shape[3],u=c-1,h=t.data.get(i.dataId).values,d=oe(i.shape),p=new Float32Array(d);function m(g){const f=g%c;let y=g-f+Math.max(0,f-r);const b=g-f+Math.min(f+r,u);let x=0;for(;y<=b;y++){const v=h[y];x+=v*v}return x}for(let g=0;g<d;g++){const f=m(g),y=h[g]*Math.pow(a+o*f,-l);p[g]=y}return t.makeTensorInfo(i.shape,i.dtype,p)}const W8={kernelName:xp,backendName:"cpu",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,y:r,dy:a}=e,{depthRadius:o,bias:l,alpha:c,beta:u}=s;ze(a,"LRNGrad");const h=oe(a.shape),d=a.shape[3],p=t.data.get(a.dataId).values,m=t.data.get(i.dataId).values,g=t.data.get(r.dataId).values,f=new Float32Array(h),y=h;for(let b=0;b<y;b++){const x=b%d,v=b-x+Math.max(0,x-o),w=b-x+Math.min(d,x+o+1);let _=0;for(let T=v;T<w;T++)_+=Math.pow(m[T],2);_=c*_+l;for(let T=v;T<w;T++){let C=-2*c*u*m[T]*g[b]/_;b===T&&(C+=Math.pow(_,-u)),C*=p[b],f[T]+=C}}return t.makeTensorInfo(a.shape,i.dtype,f)}const U8={kernelName:c0,backendName:"cpu",kernelFunc:$8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reductionIndices:r,keepDims:a}=s,o=t;let l=i.shape;const c=l.length,u=ft(r,l);let h=u;const d=an(h,c);let p=o.data.get(i.dataId).values;if(d!=null){const v=new Array(c);for(let w=0;w<v.length;w++)v[w]=l[d[w]];p=iT(p,l,i.dtype,d,v),h=yn(h.length,c),l=v}ze(i,"max"),es("max",h,c);const[m,g]=Un(l,h),f=oe(g),y=jR(p,f,m,i.dtype),b=o.write(y,m,i.dtype);let x=m;return a&&(x=gn(m,u)),{dataId:b,shape:x,dtype:i.dtype}}const B8={kernelName:vp,backendName:"cpu",kernelFunc:AA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;ze(i,"maxPool");const{filterSize:r,strides:a,pad:o,dimRoundingMode:l}=s,c=1;E(qn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ui(i.shape,r,a,c,o,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&vt(u.inShape,u.outShape))h=Gr({inputs:{x:i},backend:t});else{const d=t.data.get(i.dataId).values,p=Xe(i.shape),m=oT(d,i.shape,i.dtype,p,u,"max");h=t.makeTensorInfo(u.outShape,i.dtype,m.values)}return h}const H8={kernelName:wp,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:a,pad:o,dimRoundingMode:l,dataFormat:c}=s;ze(i,"maxPool3d");const u=Ta(i.shape,r,a,1,o,l,c),h=t.data.get(i.dataId).values,d=EA(h,i.shape,i.dtype,Xe(i.shape),u,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const K8={kernelName:Sp,backendName:"cpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y8(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s;ze([i,r],"maxPool3DGrad");const u=Ta(r.shape,a,o,1,l,c),h=t.bufferSync(r),d=FQ(h,u),p=u.strideDepth,m=u.strideHeight,g=u.strideWidth,f=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,x=u.effectiveFilterDepth,v=u.effectiveFilterHeight,w=u.effectiveFilterWidth,_=x-1-u.padInfo.front,T=w-1-u.padInfo.left,C=v-1-u.padInfo.top,S=ct(r.shape,"float32"),M=t.bufferSync(i);for(let A=0;A<u.batchSize;++A)for(let P=0;P<u.inChannels;++P)for(let D=0;D<u.inDepth;++D)for(let N=0;N<u.inHeight;++N)for(let L=0;L<u.inWidth;++L){const G=D-_,V=N-C,U=L-T;let H=0;for(let j=0;j<x;j+=f){const O=(G+j)/p;if(!(O<0||O>=u.outDepth||Math.floor(O)!==O))for(let X=0;X<v;X+=y){const ee=(V+X)/m;if(!(ee<0||ee>=u.outHeight||Math.floor(ee)!==ee))for(let te=0;te<w;te+=b){const se=(U+te)/g;if(se<0||se>=u.outWidth||Math.floor(se)!==se)continue;const pe=x*v*w-1-d.get(A,O,ee,se,P),me=j*v*w+X*w+te,fe=pe===me?1:0;if(fe===0)continue;const Ce=M.get(A,O,ee,se,P);H+=Ce*fe}}}S.set(H,A,D,N,L,P)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const j8={kernelName:h0,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r,output:a}=e,o=r;ze([r,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Ui(o.shape,l,c,1,u,h),p=t.data.get(o.dataId).values,m=ct(d.outShape,o.dtype,MA(p,o.shape,o.dtype,d).values),g=d.strideHeight,f=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,_=x-1-d.padInfo.top,T=ct(o.shape,"float32"),C=t.data.get(i.dataId).values,S=ct(i.shape,"float32",C);for(let M=0;M<d.batchSize;++M)for(let A=0;A<d.inChannels;++A)for(let P=0;P<d.inHeight;++P)for(let D=0;D<d.inWidth;++D){const N=P-_,L=D-w;let G=0;for(let V=0;V<x;V+=y){const U=(N+V)/g;if(!(U<0||U>=d.outHeight||Math.floor(U)!==U))for(let H=0;H<v;H+=b){const j=(L+H)/f;if(j<0||j>=d.outWidth||Math.floor(j)!==j)continue;const O=x*v-1-m.get(M,U,j,A),X=V*v+H,ee=O===X?1:0;if(ee===0)continue;const te=S.get(M,U,j,A);G+=te*ee}}T.set(G,M,P,D,A)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const J8={kernelName:u0,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(n,e,t,s,i){const r=Xe(e),a=oT(n,e,t,r,i,"max"),o=MA(n,e,t,i,!0,s);return[a.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eJ={kernelName:d0,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:i,strides:r,pad:a,includeBatchInIndex:o}=e,l=t;ze(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=Ui(s.shape,i,r,[1,1],a),[h,d]=q8(c,s.shape,s.dtype,o,u),p=l.write(h,u.outShape,s.dtype),m=l.write(d,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:m,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s,o=ft(r,i.shape),l=Un(i.shape,o)[1],c=oe(l),u=[],h=t.makeTensorInfo([],"float32",new Float32Array([c]));u.push(h);const d=po({inputs:{x:i},backend:t,attrs:{dtype:"float32"}});u.push(d);const p=lT({inputs:{a:d,b:h},backend:t});u.push(p);const m=Cf({inputs:{x:p},backend:t,attrs:{axis:r,keepDims:a}});return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const nJ={kernelName:_p,backendName:"cpu",kernelFunc:tJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s;ze(i,"min");const o=ft(r,i.shape);let l=o;const c=an(l,i.shape.length);let u=i;c!=null&&(u=Ds({inputs:{x:i},backend:t,attrs:{perm:c}}),l=yn(l.length,i.shape.length)),es("min",l,u.shape.length);const[h,d]=Un(u.shape,l),p=oe(d),m=Yn(oe(h),u.dtype),g=t.data.get(u.dataId).values;for(let y=0;y<m.length;++y){const b=y*p;let x=g[b];for(let v=0;v<p;++v){const w=g[b+v];(Number.isNaN(w)||w<x)&&(x=w)}m[y]=x}c!=null&&t.disposeIntermediateTensorInfo(u);const f=t.makeTensorInfo(h,u.dtype,m);if(a){const y=gn(h,o),b=Ut({inputs:{x:f},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(f),b}return f}const iJ={kernelName:Tp,backendName:"cpu",kernelFunc:sJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{paddings:r,mode:a}=s;ze(i,"mirrorPad");const o=r.map((b,x)=>b[0]+i.shape[x]+b[1]),l=r.map(b=>b[0]),c=r.map((b,x)=>b[0]+i.shape[x]),u=a==="reflect"?0:1,h=t.data.get(i.dataId).values,d=i.shape.length,p=Xe(i.shape),m=oe(o),g=o.length,f=Xe(o),y=Pn(i.dtype,m);for(let b=0;b<m;b++){let x=Al(b,g,f);for(let w=0;w<g;w++)x[w]<l[w]?x[w]=l[w]*2-x[w]-u:x[w]>=c[w]&&(x[w]=(c[w]-1)*2-x[w]+u);x=x.map((w,_)=>w-l[_]);const v=tr(x,d,p);y[b]=h[v]}return{dataId:t.write(y,o,i.dtype),shape:o,dtype:i.dtype}}const aJ={kernelName:Ip,backendName:"cpu",kernelFunc:rJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ=In((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),lJ=Bn(Wu,oJ),cJ={kernelName:Wu,backendName:"cpu",kernelFunc:lJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{dim:r}=s,a=i.shape.length;let o=r;if(o===-1&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=ft([o],i.shape),c=AA({inputs:{x:i},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),u=gn(c.shape,l),h=Ut({inputs:{x:c},backend:t,attrs:{shape:u}}),d=aT({inputs:{a:i,b:h},backend:t}),p=GR({inputs:{x:d},backend:t}),m=Cf({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),g=Ut({inputs:{x:m},backend:t,attrs:{shape:u}}),f=lT({inputs:{a:p,b:g},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),f}const uJ={kernelName:Up,backendName:"cpu",kernelFunc:LA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hJ(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{numSamples:r,seed:a,normalized:o}=s;ze(i,"multinomial");const l=o?i:LA({inputs:{logits:i},backend:t,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=t.data.get(l.dataId).values,d=[c,r],p=Yn(oe(d),"int32");for(let m=0;m<c;++m){const g=m*u,f=new Float32Array(u-1);f[0]=h[g];for(let x=1;x<f.length;++x)f[x]=f[x-1]+h[g+x];const y=mh.alea(a.toString()),b=m*r;for(let x=0;x<r;++x){const v=y();p[b+x]=f.length;for(let w=0;w<f.length;w++)if(v<f[w]){p[b+x]=w;break}}}return o||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const dJ={kernelName:p0,backendName:"cpu",kernelFunc:hJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pJ=vy;function fJ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;ze(i,"NonMaxSuppression");const c=t.data.get(i.dataId).values,u=t.data.get(r.dataId).values,{selectedIndices:h}=pJ(c,u,a,o,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const mJ={kernelName:f0,backendName:"cpu",kernelFunc:fJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gJ=wy;function yJ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=s;ze(i,"NonMaxSuppressionPadded");const u=t.data.get(i.dataId).values,h=t.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=gJ(u,h,a,o,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const bJ={kernelName:m0,backendName:"cpu",kernelFunc:yJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ=Sy;function vJ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=s;ze(i,"NonMaxSuppressionWithScore");const u=t.data.get(i.dataId).values,h=t.data.get(r.dataId).values,d=a,p=o,m=l,g=c,{selectedIndices:f,selectedScores:y}=xJ(u,h,d,p,m,g);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const wJ={kernelName:g0,backendName:"cpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(n){const{inputs:e,backend:t,attrs:s}=n,{indices:i}=e,{dtype:r,depth:a,onValue:o,offValue:l}=s;ze(i,"oneHot");const c=oe(i.shape),u=new Float32Array(c*a);u.fill(l);const h=t.data.get(i.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<a&&(u[d*a+h[d]]=o);return t.makeTensorInfo([...i.shape,a],r,u)}const _J={kernelName:kp,backendName:"cpu",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hg(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const i=_l({inputs:{input:s},backend:t}),r=hg({inputs:{x:i},backend:t}),a=Yc({inputs:{input:s},backend:t}),o=hg({inputs:{x:a},backend:t}),l=Us({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return cT({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const TJ={kernelName:Hp,backendName:"cpu",kernelFunc:hg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const i=_l({inputs:{input:s},backend:t}),r=PA({inputs:{x:i},backend:t}),a=Yc({inputs:{input:s},backend:t}),o=hg({inputs:{x:a},backend:t}),l=Us({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return cT({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const IJ={kernelName:Ep,backendName:"cpu",kernelFunc:PA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s;if(e.length===1)return ug({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const r=e[0].shape,a=e[0].dtype;e.forEach(u=>{Jn(r,u.shape,"All tensors passed to stack must have matching shapes"),E(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(u=>{const h=ug({inputs:{input:u},backend:t,attrs:{dim:i}});return o.push(h),h}),c=jc({inputs:l,backend:t,attrs:{axis:i}});return o.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const CJ={kernelName:Np,backendName:"cpu",kernelFunc:DA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{paddings:r,constantValue:a}=s;ze(i,"pad");const o=r.map((y,b)=>y[0]+i.shape[b]+y[1]),l=r.map(y=>y[0]),c=t.data.get(i.dataId).values,u=oe(i.shape),h=i.shape.length,d=Xe(i.shape),p=oe(o),m=o.length,g=Xe(o),f=Pn(i.dtype,p);a!==0&&f.fill(a);for(let y=0;y<u;y++){const b=Al(y,h,d).map((v,w)=>v+l[w]),x=tr(b,m,g);f[x]=c[y]}return{dataId:t.write(f,o,i.dtype),shape:o,dtype:i.dtype}}const FA={kernelName:Rp,backendName:"cpu",kernelFunc:MJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ=In((n,e)=>Math.pow(n,e)),kJ=Bn(Uu,EJ),NJ={kernelName:Uu,backendName:"cpu",kernelFunc:kJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RJ(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:i,paramsDenseValues:r,indices:a}=e,o=i.map(f=>t.data.get(f.dataId).values),l=i.map(f=>f.shape),c=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values,[h,d,p]=nA(o,l,c,r.shape,r.dtype,u,a.shape),m=h.map(f=>t.makeTensorInfo([f.length],"int32",f)),g=t.makeTensorInfo(p,r.dtype,d);return m.concat([g])}const AJ={kernelName:y0,backendName:"cpu",kernelFunc:RJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(n){const{inputs:e,backend:t}=n,{starts:s,limits:i,deltas:r}=e,a=t.data.get(s.dataId).values,o=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,[c,u]=sA(a,s.shape,s.dtype,o,i.shape,l,r.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const PJ={kernelName:b0,backendName:"cpu",kernelFunc:LJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DJ(n){const{inputs:e,backend:t,attrs:s}=n,{shape:i,values:r,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,c=t.data.get(i.dataId).values,u=t.data.get(r.dataId).values,h=t.data.get(a.dataId).values,d=o.map(f=>t.data.get(f.dataId).values),p=o.map(f=>f.shape),[m,g]=iA(c,i.shape,u,r.shape,r.dtype,h,a.shape,d,p,l);return t.makeTensorInfo(m,r.dtype,g)}const FJ={kernelName:x0,backendName:"cpu",kernelFunc:DJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(n){const{backend:e,attrs:t}=n,{start:s,stop:i,dtype:r,step:a}=t,o=rA(s,i,a,r);return e.makeTensorInfo([o.length],r,o)}const zJ={kernelName:v0,backendName:"cpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GJ=At(Bu,n=>1/n),VJ={kernelName:Bu,backendName:"cpu",kernelFunc:GJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:a,size:o}=s;ze(i,"resizeBilinear");const l=Xe(i.shape),[c,u]=o,[h,d,p,m]=i.shape,g=t.data.get(i.dataId).values,f=new Float32Array(oe([h,c,u,m])),y=[r&&c>1?d-1:d,r&&u>1?p-1:p],b=[r&&c>1?c-1:c,r&&u>1?u-1:u];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let _=0;_<h;_++)for(let T=0;T<c;T++){let C;a?C=v*(T+.5)-.5:C=v*T;const S=Math.max(0,Math.floor(C)),M=C-S,A=Math.min(d-1,Math.ceil(C)),P=_*l[0]+S*l[1],D=_*l[0]+A*l[1];for(let N=0;N<u;N++){let L;a?L=w*(N+.5)-.5:L=w*N;const G=Math.max(0,Math.floor(L)),V=L-G,U=Math.min(p-1,Math.ceil(L)),H=P+G*l[2],j=D+G*l[2],O=P+U*l[2],X=D+U*l[2];for(let ee=0;ee<m;ee++){const te=g[H+ee],se=g[j+ee],pe=g[O+ee],me=g[X+ee],fe=te+(pe-te)*V,Ce=se+(me-se)*V,Ue=fe+(Ce-fe)*M;f[x++]=Ue}}}return t.makeTensorInfo([h,c,u,m],"float32",f)}const $J={kernelName:Fp,backendName:"cpu",kernelFunc:WJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:a}=s;ze([r,i],"resizeBilinearGrad");const o=Xe(i.shape),[l,c,u,h]=i.shape,[,d,p]=r.shape,m=new Float32Array(l*c*u*h),g=[a&&d>1?c-1:c,a&&p>1?u-1:u],f=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=g[0]/f[0],b=g[1]/f[1],x=t.data.get(r.dataId).values;let v=0;for(let w=0;w<l;w++){const _=w*o[0];for(let T=0;T<d;T++){const C=T*y,S=Math.floor(C),M=Math.min(Math.ceil(C),c-1),A=_+S*o[1],P=_+M*o[1],D=C-S,N=1-D;for(let L=0;L<p;L++){const G=L*b,V=Math.floor(G),U=Math.min(Math.ceil(G),u-1),H=G-V,j=1-H,O=A+V*o[2],X=A+U*o[2],ee=P+V*o[2],te=P+U*o[2],se=N*j,pe=N*H,me=D*j,fe=D*H;for(let Ce=0;Ce<h;Ce++){const Ue=x[v++];m[O+Ce]+=Ue*se,m[X+Ce]+=Ue*pe,m[ee+Ce]+=Ue*me,m[te+Ce]+=Ue*fe}}}}return t.makeTensorInfo([l,u,c,h],"float32",m)}const BJ={kernelName:_0,backendName:"cpu",kernelFunc:UJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:a,size:o}=s;ze(i,"resizeNearestNeighbor");const l=Xe(i.shape),[c,u]=o,[h,d,p,m]=i.shape,g=t.data.get(i.dataId).values,f=new Float32Array(h*c*u*m),y=[r&&c>1?d-1:d,r&&u>1?p-1:p],b=[r&&c>1?c-1:c,r&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let _=0;_<h;_++){const T=_*l[0];for(let C=0;C<c;C++){const S=a?x*(C+.5):x*C;let M=Math.min(d-1,r?Math.round(S):Math.floor(S));a&&(M=Math.max(0,M));const A=T+M*l[1];for(let P=0;P<u;P++){const D=a?v*(P+.5):v*P;let N=Math.min(p-1,r?Math.round(D):Math.floor(D));a&&(N=Math.max(0,N));const L=A+N*l[2];for(let G=0;G<m;G++){const V=g[L+G];f[w++]=V}}}}return t.makeTensorInfo([h,c,u,m],i.dtype,f)}const HJ={kernelName:Dp,backendName:"cpu",kernelFunc:XJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:a}=s;ze([r,i],"resizeNearestNeighborGrad");const o=Xe(i.shape),l=Xe(r.shape),[c,u,h,d]=i.shape,[,p,m]=r.shape,g=new Float32Array(c*u*h*d),f=t.data.get(r.dataId).values,y=[a&&p>1?u-1:u,a&&m>1?h-1:h],b=[a&&p>1?p-1:p,a&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],w=1/x,_=1/v,T=Math.ceil(w)*2+2,C=Math.ceil(_)*2+2;for(let S=0;S<c;S++){const M=S*o[0];for(let A=0;A<u;A++){const P=M+A*o[1],D=Math.floor(A*w),N=Math.floor(D-T/2);for(let L=0;L<h;L++){const G=P+L*o[2],V=Math.floor(L*_),U=Math.floor(V-C/2);for(let H=0;H<d;H++){let j=0;for(let O=0;O<T;O++){const X=O+N;if(X<0||X>=p)continue;const ee=M+X*l[1],te=X*x,se=Math.min(u-1,a?Math.round(te):Math.floor(te));if(A===se)for(let pe=0;pe<C;pe++){const me=pe+U;if(me<0||me>=m)continue;const fe=ee+me*l[2],Ce=me*v,Ue=Math.min(h-1,a?Math.round(Ce):Math.floor(Ce));L===Ue&&(j+=f[fe+H])}}g[G+H]=j}}}}return t.makeTensorInfo(i.shape,i.dtype,g)}const KJ={kernelName:S0,backendName:"cpu",kernelFunc:ZJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dims:r}=s;ze(i,"reverse");const a=i.shape.length,o=ft(r,i.shape);if(a===0)return Gr({inputs:{x:i},backend:t});const l=new Rn(i.shape,i.dtype),c=t.bufferSync(i);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();o.forEach(p=>d[p]=i.shape[p]-1-d[p]),l.set(c.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const jJ={kernelName:Op,backendName:"cpu",kernelFunc:YJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QJ={kernelName:G0,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:i,fillValue:r,center:a}=e,o=t,l=Pn(s.dtype,oe(s.shape)),[c,u,h,d]=s.shape,[p,m]=dS(a,u,h),g=255,f=Math.sin(i),y=Math.cos(i),b=o.data.get(s.dataId).values;for(let x=0;x<c;x++){const v=x*h*u*d;for(let w=0;w<u;w++){const _=w*(h*d);for(let T=0;T<h;T++){const C=T*d;for(let S=0;S<d;S++){const M=[c,w,T,S],A=M[2],P=M[1];let D=(A-p)*y-(P-m)*f,N=(A-p)*f+(P-m)*y;D=Math.round(D+p),N=Math.round(N+m);let L=r;if(typeof r!="number"&&(S===3?L=g:L=r[S]),D>=0&&D<h&&N>=0&&N<u){const V=N*(h*d),U=D*d,H=v+V+U+S;L=b[H]}const G=v+_+C+S;l[G]=L}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ=At(Zu,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),qJ={kernelName:Zu,backendName:"cpu",kernelFunc:JJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e6(n){const{inputs:e,backend:t,attrs:s}=n,{indices:i,updates:r}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=yh(r,i,a),d=!0,p=t.bufferSync(i),m=t.bufferSync(r),g=vc(p,m,a,h,c,l,o,u,0,d);return t.makeTensorInfo(a,g.dtype,g.values)}const t6={kernelName:T0,backendName:"cpu",kernelFunc:e6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(n,e){let t=0,s=n.length,i=0;for(;t<s;)i=Math.floor((t+s)/2),n[i]<e?t=i+1:s=i;return s}function s6(n,e){let t=0,s=n.length,i=0;for(;t<s;)i=Math.floor((t+s)/2),n[i]<=e?t=i+1:s=i;return s}function i6(n,e,t,s,i,r){const a=pn("int32",t*i);for(let o=0;o<t;++o){const l=n.slice(o*s,(o+1)*s),c=o*i;for(let u=0;u<i;++u)a[c+u]=r==="left"?n6(l,e[u+c]):s6(l,e[u+c])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r6(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:i,values:r}=e,{side:a}=s,o=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,c=i6(o,l,i.shape[0],i.shape[1],r.shape[1],a);return t.makeTensorInfo(r.shape,"int32",c)}const a6={kernelName:I0,backendName:"cpu",kernelFunc:r6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n){const{inputs:e,backend:t}=n,{condition:s,t:i,e:r}=e;ze([s,i,r],"select");const a=s.shape.length,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values,u=As(i.dtype,r.dtype),h=Yn(oe(i.shape),u);let d=0;const p=a===0||a>1||i.shape.length===1?1:oe(i.shape.slice(1));for(let m=0;m<o.length;m++)for(let g=0;g<p;g++)o[m]===1?h[d++]=l[m]:h[d++]=c[m];return t.makeTensorInfo(i.shape,u,h)}const l6={kernelName:zp,backendName:"cpu",kernelFunc:o6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6=My,u6=Ey,h6=At(Yu,n=>n>=0?u6*n:c6*(Math.exp(n)-1)),d6={kernelName:Yu,backendName:"cpu",kernelFunc:h6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6=At(Ju,n=>n<0?-1:n>0?1:0),f6={kernelName:Ju,backendName:"cpu",kernelFunc:p6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6=At(ju,n=>Math.sin(n)),g6={kernelName:ju,backendName:"cpu",kernelFunc:m6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6=At(Qu,n=>Math.sinh(n)),b6={kernelName:Qu,backendName:"cpu",kernelFunc:y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6=11920928955078125e-23,kC=Math.log(x6)+2,v6=At(eh,n=>{const e=n>-kC,t=n<kC,s=Math.exp(n);let i;return t?i=s:e?i=n:i=Math.log(1+s),i}),w6={kernelName:eh,backendName:"cpu",kernelFunc:v6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,paddings:a}=s;ze([i],"spaceToBatchND");const o=oe(r),l=[[0,0]];l.push(...a);for(let f=1+r.length;f<i.shape.length;++f)l.push([0,0]);const c=FA.kernelFunc({inputs:{x:i},backend:t,attrs:{paddings:l,constantValue:0}}),u=ff(c.shape,r,o,!1),h=mf(u.length,r.length,!1),d=gf(c.shape,r,o,!1),p=Ut({inputs:{x:c},backend:t,attrs:{shape:u}}),m=Ds({inputs:{x:p},backend:t,attrs:{perm:h}}),g=Ut({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const _6={kernelName:Wp,backendName:"cpu",kernelFunc:S6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(n){const{inputs:e,backend:t}=n,{indices:s,values:i,denseShape:r,defaultValue:a}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values[0],[h,d,p,m,g]=cA(o,s.shape,s.dtype,l,i.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],i.dtype,p),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(f=>Number(f)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const I6={kernelName:C0,backendName:"cpu",kernelFunc:T6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:i,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const a=Array.from(t.data.get(i.dataId).values),o=t.data.get(s.dataId).values,l=Array.from(t.data.get(r.dataId).values),[c,u,h]=uA(o,s.shape,s.dtype,a,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const M6={kernelName:M0,backendName:"cpu",kernelFunc:C6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,o=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,[c,u]=rT(a,s.shape,s.dtype,o,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const k6={kernelName:E0,backendName:"cpu",kernelFunc:E6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,o=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,[c,u]=rT(a,s.shape,s.dtype,o,l);return t.makeTensorInfo(u,s.dtype,c)}const R6={kernelName:k0,backendName:"cpu",kernelFunc:N6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:i,sparseValues:r,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=yh(r,i,o),p=!1,m=t.bufferSync(i);let g;switch(r.dtype){case"bool":{const f=t.bufferSync(r),y=!!t.data.get(a.dataId).values[0];g=vc(m,f,o,d,u,c,l,h,y,p);break}case"float32":{const f=t.bufferSync(r),y=t.data.get(a.dataId).values[0];g=vc(m,f,o,d,u,c,l,h,y,p);break}case"int32":{const f=t.bufferSync(r),y=t.data.get(a.dataId).values[0];g=vc(m,f,o,d,u,c,l,h,y,p);break}case"string":{const f=t.bufferSync(r),y=da(t.data.get(a.dataId).values[0]);g=vc(m,f,o,d,u,c,l,h,y,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return t.makeTensorInfo(o,g.dtype,g.values)}const L6={kernelName:N0,backendName:"cpu",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{numOrSizeSplits:r,axis:a}=s,o=ft(a,i.shape)[0],l=MS(i,r,o),c=new Array(i.shape.length).fill(0),u=i.shape.slice();return l.map(h=>{const d=[...u];d[o]=h;const p=Tl({inputs:{x:i},backend:t,attrs:{begin:c,size:d}});return c[o]+=h,p})}const D6={kernelName:$p,backendName:"cpu",kernelFunc:P6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:R0,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;ze(t,"square");const i=s.data.get(t.dataId).values,r=new Float32Array(i.length);for(let a=0;a<i.length;++a){const o=i[a];r[a]=o*o}return{dataId:s.write(r,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6=At(oh,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),z6={kernelName:oh,backendName:"cpu",kernelFunc:O6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,end:a,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;ze(i,"stridedSlice");const{finalShapeSparse:p,finalShape:m,isIdentity:g,sliceDim0:f,isSimpleSlice:y,begin:b,end:x,strides:v}=cS(i.shape,r,a,o,l,c,u,h,d);let w;if(g)w=Ut({inputs:{x:i},backend:t,attrs:{shape:m}});else if(f||y){E(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const _=aS(b,x,v),T=Tl({inputs:{x:i},backend:t,attrs:{begin:b,size:_}});w=Ut({inputs:{x:T},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(T)}else{const _=t.bufferSync(i),T=dA(p,_,v,b);w=t.makeTensorInfo(m,T.dtype,T.values)}return w}const V6={kernelName:A0,backendName:"cpu",kernelFunc:G6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6(n){const{inputs:e,backend:t,attrs:s}=n,{separator:i,nGramWidths:r,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.data.get(u.dataId).values,p=t.data.get(h.dataId).values,[m,g]=pA(d,p,i,r,a,o,l,c);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(h.shape,"int32",g)]}const $6={kernelName:L0,backendName:"cpu",kernelFunc:W6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:i}=s,{input:r,delimiter:a}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values[0],[c,u,h]=fA(o,l,i),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const B6={kernelName:P0,backendName:"cpu",kernelFunc:U6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:i}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(r.dataId).values,o=mA(a,i);return t.makeTensorInfo(r.shape,"int32",o)}const H6={kernelName:D0,backendName:"cpu",kernelFunc:X6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6=At(ih,n=>Math.tan(n)),K6={kernelName:ih,backendName:"cpu",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6=At(rh,n=>Math.tanh(n)),j6={kernelName:rh,backendName:"cpu",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reps:r}=s;ze(i,"tile");const a=yA(t.bufferSync(i),r);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const J6={kernelName:ah,backendName:"cpu",kernelFunc:Q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{k:r,sorted:a}=s;ze(i,"topk");const o=t.data.get(i.dataId).values,[l,c]=xA(o,i.shape,i.dtype,r,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const eq={kernelName:F0,backendName:"cpu",kernelFunc:q6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tq(n){const{inputs:e,attrs:t,backend:s}=n,{image:i,transforms:r}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:c}=t,[u,h,d,p]=i.shape,[m,g]=c??[h,d],f=[u,m,g,p],y=Xe(i.shape),b=y[0],x=y[1],v=y[2],w=Xe(f),_=w[0],T=w[1],C=w[2],S=Pn(i.dtype,oe(f));S.fill(l);const M=s.data.get(i.dataId).values,A=s.data.get(r.dataId).values;for(let P=0;P<u;++P){const D=r.shape[0]===1?A:A.subarray(P*8,P*8+8);for(let N=0;N<m;++N)for(let L=0;L<g;++L)for(let G=0;G<p;++G){let V;const U=D[6]*L+D[7]*N+1;if(U===0)continue;const H=(D[0]*L+D[1]*N+D[2])/U,j=(D[3]*L+D[4]*N+D[5])/U,O=NC(H,d,o),X=NC(j,h,o);switch(a){case"nearest":V=oq(M,h,d,b,x,v,P,X,O,G,l);break;case"bilinear":V=lq(M,h,d,b,x,v,P,X,O,G,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const ee=P*_+N*T+L*C+G;S[ee]=V}return s.makeTensorInfo(f,i.dtype,S)}return{dataId:s.write(S,f,i.dtype),shape:i.shape,dtype:i.dtype}}const nq={kernelName:O0,backendName:"cpu",kernelFunc:tq};function NC(n,e,t){switch(t){case"reflect":return sq(n,e);case"wrap":return iq(n,e);case"nearest":return aq(n,e);case"constant":default:return rq(n)}}function sq(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return ro(0,t,e-1)}function iq(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return ro(0,t,e-1)}function rq(n,e){return n}function aq(n,e){return ro(0,n,e-1)}function ed(n,e,t,s,i,r,a,o,l,c,u){const h=a*s+o*i+l*r+c;return 0<=o&&o<e&&0<=l&&l<t?n[h]:u}function oq(n,e,t,s,i,r,a,o,l,c,u){const h=Math.round(o),d=Math.round(l);return ed(n,e,t,s,i,r,a,h,d,c,u)}function lq(n,e,t,s,i,r,a,o,l,c,u){const h=Math.floor(o),d=Math.floor(l),p=h+1,m=d+1,g=(m-l)*ed(n,e,t,s,i,r,a,h,d,c,u)+(l-d)*ed(n,e,t,s,i,r,a,h,m,c,u),f=(m-l)*ed(n,e,t,s,i,r,a,p,d,c,u)+(l-d)*ed(n,e,t,s,i,r,a,p,m,c,u);return(p-o)*g+(o-h)*f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cq(n){const{inputs:e,attrs:t,backend:s}=n,{axis:i}=t,{x:r}=e;ze(r,"unique");const a=s.data.get(r.dataId).values,{outputValues:o,outputShape:l,indices:c}=vA(a,i,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([c.length],"int32",c)]}const uq={kernelName:z0,backendName:"cpu",kernelFunc:cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hq(n){const{inputs:e,backend:t,attrs:s}=n,{value:i}=e;let{axis:r}=s;r<0&&(r+=i.shape.length);const a=i.shape.length,o=i.shape[r],l=new Array(a-1);let c=0;for(let p=0;p<a;p++)p!==r&&(l[c++]=i.shape[p]);const u=new Array(a).fill(0),h=i.shape.slice();h[r]=1;const d=new Array(o);for(let p=0;p<d.length;p++){u[r]=p;const m=Tl({inputs:{x:i},backend:t,attrs:{begin:u,size:h}});d[p]=Ut({inputs:{x:m},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(m)}return d}const dq={kernelName:Bp,backendName:"cpu",kernelFunc:hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pq(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,segmentIds:r}=e,{numSegments:a}=s;ze(i,"unsortedSegmentSum");const o=i.shape.length,l=r.shape.length,c=[],u=[],h=o-l;let d=r;for(let m=0;m<h;++m){const g=ug({inputs:{input:d},backend:t,attrs:{dim:m+1}});d=g,u.push(g)}for(let m=0;m<a;++m){const g=_a(m,"int32"),f=t.makeTensorInfo([],"int32",g),y=OR({inputs:{a:f,b:d},backend:t}),b=po({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=Jy({inputs:{a:b,b:i},backend:t}),v=Cf({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});c.push(v),u.push(f),u.push(y),u.push(b),u.push(x),u.push(v)}const p=DA({inputs:c,backend:t,attrs:{axis:0}});return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}const fq={kernelName:Xp,backendName:"cpu",kernelFunc:pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq=[uQ,jY,dQ,fQ,nj,gQ,bQ,vQ,SQ,TQ,CQ,EQ,NQ,LQ,DQ,zQ,VQ,$Q,BQ,lQ,HQ,KQ,jQ,JQ,ej,ij,e7,QY,n7,i7,r7,o7,c7,h7,p7,m7,y7,x7,w7,_7,I7,M7,k7,N7,A7,P7,F7,O7,z7,G7,$7,tQ,B7,rj,J7,aj,q7,lj,r8,a8,l8,uj,h8,p8,m8,y8,x8,dj,fj,JY,w8,s7,_8,I8,M8,nQ,gj,bj,k8,vj,R8,P8,F8,G8,W8,U8,B8,Sj,H8,K8,j8,J8,eJ,nJ,iJ,Tj,aJ,cJ,dJ,Cj,Ej,mJ,bJ,wJ,Nj,_J,IJ,CJ,FA,NJ,iQ,Lj,AJ,PJ,FJ,zJ,qY,V1,VJ,rQ,aQ,oQ,$J,BJ,HJ,KJ,jJ,QJ,qJ,Wj,t6,a6,l6,d6,Uj,f6,g6,b6,Bj,uJ,w6,_6,I6,M6,k6,R6,L6,D6,Zj,F6,Yj,z6,V6,$6,B6,H6,qj,V7,K6,j6,J6,eq,nq,Rj,uq,dq,fq,TJ];for(const n of mq)Fs(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho={},um={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function gq(n,e){Ho[n]=e}function lr(n,e){if(!(n in Ho)||e!=null){const s=bq(n,e);if(s!==null)Ho[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Ho[n];return t==null||t.isContextLost()?(delete Ho[n],lr(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ho[n])}function yq(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function bq(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??yq(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Ho[n]},!1),q().getBool("SOFTWARE_WEBGL_ENABLED")&&(um.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",um)||t.getContext("experimental-webgl",um):t.getContext("webgl2",um)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ed;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Ed||(Ed={}));var pi;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(pi||(pi={}));var Kn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Kn||(Kn={}));function Mf(n,e){return[e,n]}function xq(n,e){return n*e}function hm(n){const e=oe(n),t=Math.ceil(e/4);return Vm(t)}function Ch(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function vq(n,e){const[t,s]=Ch(n,e);return t*s*4}function uT(n,e){const t=n;let s,i,r,a,o,l,c,u,h,d;return q().getNumber("WEBGL_VERSION")===2?(s=t.R32F,i=t.R16F,r=t.RGBA16F,a=t.RGBA32F,o=t.RED,c=4,u=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,i=n.RGBA,r=n.RGBA,a=t.RGBA,o=n.RGBA,c=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Re(n,e){const t=e();return q().getBool("DEBUG")&&wq(n),t}function wq(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Iq(n,e))}const Sq=596e-10,_q=65504;function Tq(n){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||Sq<Math.abs(n)&&Math.abs(n)<_q)}function Iq(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function dm(n,e){return Na(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Cq(n,e){const t=Na(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Re(n,()=>n.shaderSource(t,e)),Re(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function Mq(n,e){const t=Na(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Re(n,()=>n.shaderSource(t,e)),Re(n,()=>n.compileShader(t)),q().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw OA(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const Eq=/ERROR: [0-9]+:([0-9]+):/g;function OA(n,e){const t=Eq.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],i=n.split(`
`),r=i.length.toString().length+2,a=i.map((h,d)=>tl((d+1).toString(),r)+h);let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,s-1),c=a.slice(s-1,s),u=a.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${tl(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function kq(n){return Na(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function Nq(n,e){if(Re(n,()=>n.linkProgram(e)),!q().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function gx(n,e){if(Re(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Rq(n,e){const t=Na(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Re(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function Aq(n,e){const t=Na(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Re(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Re(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function Lq(n){return Na(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function Pq(n,e){const t=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,i=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+i+".")}}function Dq(n){return Na(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function RC(n,e,t,s,i,r,a){const o=n.getAttribLocation(e,t);return o===-1?!1:(Re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Re(n,()=>n.vertexAttribPointer(o,i,n.FLOAT,!1,r,a)),Re(n,()=>n.enableVertexAttribArray(o)),!0)}function Fq(n,e,t){Wq(n,t),Re(n,()=>n.activeTexture(n.TEXTURE0+t)),Re(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function Oq(n,e,t){return Na(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function zq(n,e,t){return n.getUniformLocation(e,t)}function Gq(n,e,t,s){Re(n,()=>Fq(n,e,s)),Re(n,()=>n.uniform1i(t,s))}function yx(n,e,t){Re(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Re(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function AC(n,e){Re(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Re(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function pm(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Vq(n,e))}function Vq(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Na(n,e,t){const s=Re(n,()=>e());if(s==null)throw new Error(t);return s}function Wq(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const i=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${i}.`)}}function Qc(n,e=2){return oe(n.slice(0,n.length-e))}function Jc(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function fm(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Qc(n),...Jc(n)]),e}function $q(n,e=!1){let t=q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((o,l)=>l>=n.length-2?Dg(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Sa(n).newShape);let i=oe(n),r=null;n.length<=1&&i<=t?r=[1,i]:n.length===2&&n[0]<=t&&n[1]<=t?r=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(r=[n[0],n[1]*n[2]*n[3]]);const a=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||a)if(e){const o=Qc(n);let l=2,c=2;n.length&&([l,c]=Jc(n)),i=o*(l/2)*(c/2),r=Vm(i).map(u=>u*2)}else r=Vm(i);return r}function mm(n){return n%2===0}function dg(n,e){if(n=n.slice(-2),e=e.slice(-2),vt(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],s=e.slice(-1)[0];if(t===s||mm(t)&&mm(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&mm(n[0])&&mm(e[0])}let bx,xx;function Uq(n){if(bx==null){const e=lr(n);bx=e.getParameter(e.MAX_TEXTURE_SIZE)}return bx}function Bq(n){if(xx==null){const e=lr(n);xx=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,xx)}function Xq(n){if(n===0)return 0;let e;const t=lr(n);return Fi(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Fi(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Fi(n,e){return n.getExtension(e)!=null}function LC(n){try{if(lr(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Hq(n){if(n===0)return!1;const e=lr(n);if(n===1){if(!Fi(e,"OES_texture_float"))return!1}else if(!Fi(e,"EXT_color_buffer_float"))return!1;return $1(e)}function Zq(n){if(n===0)return!1;const e=lr(n);if(n===1){if(!Fi(e,"OES_texture_float")||!Fi(e,"WEBGL_color_buffer_float"))return!1}else{if(Fi(e,"EXT_color_buffer_float"))return $1(e);const t="EXT_color_buffer_half_float";if(Fi(e,t)){const s=e.getExtension(t);return Kq(e,s)}return!1}return $1(e)}function $1(n){const e=uT(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const s=1,i=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,s,i,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),a}function Kq(n,e){const t=uT(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const i=1,r=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,i,r,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),o}function Yq(n){return n!==2?!1:lr(n).fenceSync!=null}function Ef(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&E(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e=q();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>LC(2)?2:LC(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Uq($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Bq($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=$e.getNumber("WEBGL_VERSION");return n===0?0:Xq(n)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ov());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Hq($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Zq($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Yq($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ov()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);$e.registerFlag("WEBGL_EXP_CONV",()=>!1);$e.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>$e.getBool("IS_TEST"));$e.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);$e.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);$e.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);$e.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(){let n,e,t,s,i,r,a,o,l,c;return q().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",i="texture",r="outputColor",a="out vec4 outputColor;",o=q().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",i="texture2D",r="gl_FragColor",a="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:i,output:r,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(n,e,t="index"){const s=Xe(e);return s.map((i,r)=>{const a=`int ${n[r]} = ${t} / ${i}`,o=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * ${i}`:`index -= ${n[r]} * ${i}`;return`${a}; ${o};`}).join("")}function qy(n,e,t="index"){const s=Xe(e);return s.map((i,r)=>{const a=`int ${n[r]} = ${t} / outShapeStrides[${r}]`,o=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${a}; ${o};`}).join("")}function jq(n,e){const t=n.length,s=n.map(r=>`${e}[${r}]`),i=new Array(t-1);i[t-2]=s[t-1];for(let r=t-3;r>=0;--r)i[r]=`(${i[r+1]} * ${s[r+1]})`;return i}function Qq(n,e,t="index"){const s=n.map((r,a)=>a),i=jq(s,e);return i.map((r,a)=>{const o=`int ${n[a]} = ${t} / ${i[a]}`,l=a===i.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${i[a]}`:`index -= ${n[a]} * ${i[a]}`;return`${o}; ${l};`}).join("")}function hT(n){const e=Xe(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function dT(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const zA=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:GA}=fN;function Jq(n,e,t){const s=[];if(n.forEach(d=>{const p=oe(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?s.push(`uniform float ${d.name}${p>1?`[${p}]`:""};`):(s.push(`uniform sampler2D ${d.name};`),s.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){const{uniformShape:m}=pT(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${d.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${d.name}Shape;`);break}s.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{s.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});const i=s.join(`
`),r=n.map(d=>qq(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,o=Ss(),l=nee(o);let c,u,h=ree(o);return e.isPacked?(c=eee(e.logicalShape,a,t.enableShapeUniforms),u=iee(o)):(c=tee(e.logicalShape,a,t.enableShapeUniforms),u=see(o)),t.packedInputs&&(h+=cee),[h,l,u,i,c,r,t.userCode].join(`
`)}function Mh(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return wee(n,e);case 1:return _ee(n,e);case 2:return Iee(n,e);case 3:return Mee(n,e);case 4:return kee(n,e);case 5:return Nee(n);case 6:return Ree(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function VA(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return vee(n);case 1:return See(n,e);case 2:return Tee(n,e);case 3:return Cee(n,e);default:return Eee(n,e)}}function qq(n,e,t=!1,s){let i="";t?i+=VA(n,s):i+=Mh(n,s);const r=n.shapeInfo.logicalShape,a=e.logicalShape;return r.length<=a.length&&(t?i+=Aee(n,e):i+=Lee(n,e)),i}function eee(n,e,t){switch(n.length){case 0:return WA();case 1:return uee(n,e,t);case 2:return bee(n,e,t);case 3:return dee(n,e,t);default:return fee(n,e,t)}}function tee(n,e,t){switch(n.length){case 0:return WA();case 1:return hee(n,e,t);case 2:return xee(n,e,t);case 3:return pee(n,e,t);case 4:return mee(n,e,t);case 5:return gee(n,e);case 6:return yee(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function nee(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function see(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function iee(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function ree(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${aee}
    ${oee}
    ${lee}
  `}const aee=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,oee=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,lee=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,cee=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function WA(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function uee(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function hee(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function dee(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(n[2]/2),r=i*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function pee(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${qy(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Bl(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function fee(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(n[n.length-1]/2),r=i*Math.ceil(n[n.length-2]/2);let a=r,o="",l="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],o=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+o,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${n.length}(${l});
    }
  `}function mee(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${qy(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Bl(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function gee(n,e){const t=Bl(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function yee(n,e){const t=Bl(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function bee(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(vt(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const i=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function xee(n,e,t){return vt(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Xl(n){return`offset${n}`}function vee(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Ss();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function wee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[i,r]=n.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Xl(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[o,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function See(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=n.shapeInfo.texShape,r=Ss();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function _ee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Eh(n)}
      }
    `;const i=n.shapeInfo.texShape,r=i[0],a=i[1];if(a===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Xl(t);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${o});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${a}, index + ${o});
      return sampleTexture(${t}, uv);
    }
  `}function Tee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,a=r[0],o=r[1],l=Ss();if(r!=null&&vt(t,r))return e?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Iee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&vt(t,r)){if(e)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=r[0],p=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:o}=Sa(t),l=a;if(l.length<t.length){const d=kh(n,l),p=["row","col"];return`
      ${Mh(d,e)}
      float ${i}(int row, int col) {
        return ${i}(${Nh(p,o)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Eh(n)}
      }
    `;const c=r[0],u=r[1],h=Xl(s);return u===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function Cee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],m=kh(n,d),g=["b","row","col"];return`
        ${VA(m,e)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${Nh(g,p)});
        }
      `}const o=Ss();if(e)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;const l=a[0],c=a[1],u=Math.ceil(t[2]/2),h=u*Math.ceil(t[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function Mee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[1]*t[2],a=t[2],{newShape:o,keptDims:l}=Sa(t),c=o;if(c.length<t.length){const g=kh(n,c),f=["row","col","depth"];return`
        ${Mh(g,e)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${Nh(f,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${a}, 1)));
        ${Eh(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],p=n.shapeInfo.flatOffset;if(d===r&&p==null)return e?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===a&&p==null)return e?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const m=Xl(s);return e?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${a} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function Eee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=Ss();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${t}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,a=r.length,o=n.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[a-1]/2);let d=h*Math.ceil(r[a-2]/2),p="int b, int row, int col",m=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<a-1;g++)p=`int b${g}, `+p,d*=r[a-g-1],m=`b${g} * ${d} + `+m;return`
    vec4 ${s}(${p}) {
      int index = ${m};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${i.texture2D}(${t}, uv);
    }
  `}function kee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[3],a=t[2]*r,o=t[1]*a,{newShape:l,keptDims:c}=Sa(t);if(l.length<t.length){const b=kh(n,l),x=["row","col","depth","depth2"];return`
      ${Mh(b,e)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${Nh(x,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${a}, ${r}, 1)));
        ${Eh(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],m=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,f=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&u==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&u==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=Xl(s);return e?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${f}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function Nee(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=e[4],r=e[3]*i,a=e[2]*r,o=e[1]*a,{newShape:l,keptDims:c}=Sa(e);if(l.length<e.length){const g=kh(n,l),f=["row","col","depth","depth2","depth3"];return`
      ${Mh(g)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Nh(f,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${a}, ${r}, ${i})) +
          depth3;
        ${Eh(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Xl(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} + depth * ${r} +
          depth2 * ${i} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ree(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:i,keptDims:r}=Sa(e);if(i.length<e.length){const f=kh(n,i),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Mh(f)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Nh(y,r)});
      }
    `}const a=e[5],o=e[4]*a,l=e[3]*o,c=e[2]*l,u=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Eh(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],m=d[1];if(m===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${o}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===a&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Xl(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${o} + depth3 * ${a} + depth4 + ${g};
      vec2 uv = uvFromFlat(${p}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Eh(n){const e=n.name,t=oe(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Aee(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),i="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=GA(n.shapeInfo.logicalShape,e.logicalShape),l=Bt(a),c=a-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":a<2&&o.length>=1?u="coords = 0;":u=o.map(f=>`coords.${h[f+c]} = 0;`).join(`
`);let d="";a<2&&r>0?d="coords":d=n.shapeInfo.logicalShape.map((f,y)=>`coords.${h[y+c]}`).join(", ");let p="return outputValue;";const m=oe(n.shapeInfo.logicalShape)===1,g=oe(e.logicalShape)===1;if(r===1&&!m&&!g)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!g)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(o.length){const f=r-2,y=r-1;o.indexOf(f)>-1&&o.indexOf(y)>-1?p="return vec4(outputValue.x);":o.indexOf(f)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function Lee(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),i="get"+s+"AtOutCoords",r=e.texShape,a=n.shapeInfo.texShape,o=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&o===l&&n.shapeInfo.flatOffset==null&&vt(a,r))return`
      float ${i}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=Bt(l),u=GA(n.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];o===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(g=>`coords.${p[g+h]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=n.shapeInfo.logicalShape.map((g,f)=>`coords.${p[f+h]}`).join(", "),`
    float ${i}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${m});
    }
  `}function Bt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function pT(n,e,t){const{newShape:s,keptDims:i}=Sa(e),r=e.length,a=n&&r===3&&e[0]===1,o=a?e.slice(1):s,l=!n&&r>1&&!vt(e,t)&&s.length<r||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:i}}function kh(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Nh(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pee(n,e,t,s){const i=t.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=i.map(u=>u.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=Jq(i,a,e),l=Mq(n.gl,o),c=n.createProgram(l);return q().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:r,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:r,outShapeInfo:a},$A(n,e,c))}function $A(n,e,t){const s={},i={},r={},a=[];let o,l,c,u=null,h=null;h=n.getUniformLocation(t,"NAN",!1),q().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const d=!1;for(let p=0;p<e.variableNames.length;p++){const m=e.variableNames[p];s[m]=n.getUniformLocation(t,m,d),s[`offset${m}`]=n.getUniformLocation(t,`offset${m}`,d),e.enableShapeUniforms&&(i[`${m}Shape`]=n.getUniformLocation(t,`${m}Shape`,d),r[`${m}TexShape`]=n.getUniformLocation(t,`${m}TexShape`,d))}return e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",d),c=n.getUniformLocation(t,"outShapeStrides",d),l=n.getUniformLocation(t,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach((p,m)=>{a[m]=n.getUniformLocation(t,p.name,d)}),{uniformLocations:s,customUniformLocations:a,infLoc:u,nanLoc:h,inShapesLocations:i,inTexShapesLocations:r,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:l}}function PC(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const i=t.logicalShape,r=e[s],a=r.shape;if(!vt(i,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${a} must match`);if(t.isUniform&&r.isUniform)return;const o=t.texShape,l=r.isUniform?null:r.texData.texShape;if(!vt(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function Dee(n,e,t,s,i){e.program.enableShapeUniforms||(PC(e.inShapeInfos,t),PC([e.outShapeInfo],[s]));const r=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,a[0],a[1]):n.setOutputMatrixTexture(r.texture,a[0],a[1]),n.setProgram(e.webGLProgram),q().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((l,c)=>{const u=e.program.variableNames[c],h=e.uniformLocations[u],d=e.uniformLocations[`offset${u}`],p=e.inShapesLocations[`${u}Shape`],m=e.inTexShapesLocations[`${u}TexShape`];if(p){const{uniformShape:g}=pT(e.program.packedInputs,l.shape,l.texData.texShape);switch(g.length){case 1:n.gl.uniform1iv(p,new Int32Array(g));break;case 2:n.gl.uniform2iv(p,new Int32Array(g));break;case 3:n.gl.uniform3iv(p,new Int32Array(g));break;case 4:n.gl.uniform4iv(p,new Int32Array(g));break}}if(m&&n.gl.uniform2i(m,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(oe(l.shape)<2)n.gl.uniform1f(h,l.uniformValues[0]);else{let g=l.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),n.gl.uniform1fv(h,g)}return}l.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const o=e.outShapeLocation;if(o)switch(s.shape.length){case 1:n.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(o,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Xe(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&i&&e.program.customUniforms.forEach((l,c)=>{const u=e.customUniformLocations[c],h=i[c];if(l.type==="float")n.gl.uniform1fv(u,h);else if(l.type==="vec2")n.gl.uniform2fv(u,h);else if(l.type==="vec3")n.gl.uniform3fv(u,h);else if(l.type==="vec4")n.gl.uniform4fv(u,h);else if(l.type==="int")n.gl.uniform1iv(u,h);else if(l.type==="ivec2")n.gl.uniform2iv(u,h);else if(l.type==="ivec3")n.gl.uniform3iv(u,h);else if(l.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),n.executeProgram()}function Fee(n,e,t){let s="";e.concat(t).forEach(a=>{const o=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=pT(n.packedInputs,a.shape,l);let d="",p="",m="";if(u.length===1&&n.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const w=Xe(u);m=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const g=a.shape.length,f=u.length===2&&vt(a.shape,l),y=oe(a.shape)===1,b=bl(a.shape,t.shape),x=!n.packedInputs&&g===t.shape.length&&vt(l,t.texData.texShape),v=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${g}_${x}_${c?h:""}_${u.length}_${y}_${b}_${f}_${d}_${p}_${m}_${v}_${o}`}else{const l=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${l}_${o}`}});const i=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+i+`${q().getNumber("WEBGL_VERSION")}`,r}function _s(n){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oee{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ed.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ss();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?qy(["r","c","d"],e):Bl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ed.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ss();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?qy(["r","c","d"],e):Bl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gee{constructor(e){this.variableNames=["A"],this.outTexUsage=pi.DOWNLOAD;const t=Ss();this.outputShape=e,this.userCode=`
      ${zA}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=pi.DOWNLOAD;const t=Ss();this.outputShape=e,this.userCode=`
      ${zA}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wee={R:0,G:1,B:2,A:3};let DC=class{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=Ss();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let o=0;o<s.length;o++){const l=s[o];a+=`
          if(offset == ${o}) {
            result = values[${Wee[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?dT():hT(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${a}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ee{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Ss();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);let i="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){const l=a*2+o;i+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?dT():hT(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uee(n){const e=Ss(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Cq(n,t)}function Bee(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Rq(n,e)}function Xee(n){const e=new Uint16Array([0,1,2,2,1,3]);return Aq(n,e)}function kf(n,e,t,s,i,r){Pq(e,t);const a=Lq(n),o=n.TEXTURE_2D;return Re(n,()=>n.bindTexture(o,a)),Re(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Re(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Re(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),Re(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),q().getNumber("WEBGL_VERSION")===1?Re(n,()=>n.texImage2D(o,0,s,e,t,0,i,r,null)):Re(n,()=>n.texStorage2D(o,1,s,e,t)),Re(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function UA(n){return n.internalFormatFloat}function Hee(n,e,t,s){const[i,r]=Mf(e,t);return kf(n,i,r,UA(s),s.textureFormatFloat,n.FLOAT)}function BA(n){return n.internalFormatHalfFloat}function Zee(n,e,t,s){const[i,r]=Mf(e,t);return kf(n,i,r,BA(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function XA(n){return n.downloadTextureFormat}function Kee(n,e,t,s){const[i,r]=Mf(e,t);return kf(n,i,r,XA(s),n.RGBA,n.UNSIGNED_BYTE)}function HA(n){return n.internalFormatPackedFloat}function Yee(n,e,t,s){const[i,r]=Ch(e,t);return kf(n,i,r,HA(s),n.RGBA,n.FLOAT)}function ZA(n){return n.internalFormatPackedHalfFloat}function jee(n,e,t,s){const[i,r]=Ch(e,t);return kf(n,i,r,ZA(s),n.RGBA,s.textureTypeHalfFloat)}function Qee(n,e,t){return Re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),RC(n,e,"clipSpacePos",t,3,20,0)&&RC(n,e,"uv",t,2,20,12)}function Jee(n,e,t,s,i,r){Re(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,o,l;i instanceof Uint8Array?(a=new Uint8Array(t*s*4),o=n.UNSIGNED_BYTE,l=n.RGBA):(a=new Float32Array(t*s*4),o=n.FLOAT,l=r.internalFormatPackedFloat),a.set(i),q().getNumber("WEBGL_VERSION")===2?Re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,o,a)):Re(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,o,a)),Re(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function qee(n,e,t){Re(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?q().getNumber("WEBGL_VERSION")===2?Re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Re(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):q().getNumber("WEBGL_VERSION")===2?Re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Re(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Re(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function ete(n,e,t,s){const i=n.createBuffer();Re(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,i));const r=4*4*e*t;return Re(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,r,n.STREAM_READ)),Re(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Re(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),i}function tte(n,e,t){const s=n,i=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,i),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),i}function nte(n,e,t,s){const[i,r]=Mf(e,t),a=4,o=new Uint8Array(xq(e*t,a));return Re(n,()=>n.readPixels(0,0,i,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function ste(n,e,t,s,i,r,a,o){const l=n,c=new Float32Array(vq(r,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function ite(n,e,t){const s=new Float32Array(e*t*4);return Re(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vx{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=q().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,gq(t,e)):this.gl=lr(t),e=this.gl,q().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>Re(r,()=>r.createVertexArray()),this.bindVertexArray=a=>Re(r,()=>r.bindVertexArray(a)),this.deleteVertexArray=a=>Re(r,()=>r.deleteVertexArray(a)),this.getVertexArray=()=>Re(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Re(e,()=>r.createVertexArrayOES()),this.bindVertexArray=a=>Re(e,()=>r.bindVertexArrayOES(a)),this.deleteVertexArray=a=>Re(e,()=>r.deleteVertexArrayOES(a)),this.getVertexArray=()=>Re(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),q().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=dm(this.gl,r),Fi(this.gl,a))this.textureHalfFloatExtension=dm(this.gl,a);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Fi(this.gl,i))this.colorBufferHalfFloatExtension=dm(this.gl,i);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Fi(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Fi(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Bee(this.gl),this.indexBuffer=Xee(this.gl),this.framebuffer=Dq(this.gl),this.textureConfig=uT(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Re(e,()=>e.finish()),Re(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Re(e,()=>e.deleteFramebuffer(this.framebuffer)),Re(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Re(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Re(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Hee(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Zee(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Kee(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),qee(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,i){this.throwIfDisposed(),Jee(this.gl,e,t,s,i,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),jee(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Yee(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(AC(this.gl,this.framebuffer),this.outputTexture=null),Re(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>nte(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,i,r,a){return ste(this.gl,e,t,s,i,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return tte(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const i=ete(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const i=e,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=i.clientWaitSync(r,0,0);return a===i.ALREADY_SIGNALED||a===i.CONDITION_SATISFIED},t=r}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>ite(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=Uee(t));const s=kq(t);Re(t,()=>t.attachShader(s,this.vertexShader)),Re(t,()=>t.attachShader(s,e)),Nq(t,s);let i;return i=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(i.vao),Re(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(Qee(t,i,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&gx(t,i),this.setProgram(i),i}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Re(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&gx(this.gl,this.program)),Re(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?Oq(this.gl,e,t):zq(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Re(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),Gq(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[i,r]=Ch(t,s);this.setOutputMatrixTextureDriver(e,i,r)}setOutputMatrixWriteRegion(e,t,s,i){this.setOutputMatrixWriteRegionDriver(s,e,i,t)}setOutputPackedMatrixWriteRegion(e,t,s,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&gx(this.gl,this.program),pm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Re(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Re(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=dm(this.gl,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(i.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await u1(()=>this.disposed||this.isQueryAvailable(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),i=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=rte(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in q().platform&&(s=q().platform.setTimeoutCustom.bind(q().platform)),u1(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),yx(this.gl,e,this.framebuffer),this.debug&&pm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(yx(this.gl,this.outputTexture,this.framebuffer),this.debug&&pm(this.gl)):AC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const i=this.gl;yx(i,e,this.framebuffer),this.debug&&pm(i),this.outputTexture=e,Re(i,()=>i.viewport(0,0,t,s)),Re(i,()=>i.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,i){this.throwIfDisposed(),Re(this.gl,()=>this.gl.scissor(e,t,s,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function rte(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:ate,bincountImpl:KA,bincountReduceImpl:ote,castImpl:lte,ceilImpl:cte,concatImpl:ute,equalImpl:hte,expImpl:dte,expm1Impl:pte,floorImpl:fte,gatherNdImpl:mte,gatherV2Impl:gte,greaterImpl:yte,greaterEqualImpl:bte,lessImpl:xte,lessEqualImpl:vte,linSpaceImpl:wte,logImpl:Ste,maxImpl:_te,maximumImpl:Tte,minimumImpl:Ite,multiplyImpl:Cte,negImpl:Mte,notEqualImpl:Ete,prodImpl:kte,raggedGatherImpl:Nte,raggedRangeImpl:Rte,raggedTensorToTensorImpl:Ate,rangeImpl:Lte,rsqrtImpl:Pte,scatterImpl:Dte,sigmoidImpl:Fte,simpleAbsImpl:YA,sliceImpl:Ote,sparseFillEmptyRowsImpl:zte,sparseReshapeImpl:Gte,sparseSegmentReductionImpl:jA,sqrtImpl:Vte,stridedSliceImpl:Wte,stringNGramsImpl:$te,stringSplitImpl:Ute,stringToHashBucketFastImpl:Bte,subImpl:Xte,tileImpl:Hte,topKImpl:Zte,transposeImpl:fT,uniqueImpl:Kte}=eQ;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function ps(n,e){return e===1?[n]:QA(n,e)}function Yte(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jte{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=_s(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=ps("rc",this.rank),s=Bt(this.rank),i=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let r=`${s===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${i};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);let s="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${Qte(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?dT():hT(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function Qte(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?Qq(["r","c","d"],"inputShape"):Bl(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jte{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const i=OC(t,s),r=zC(e,i,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=FC(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[r].shift();return this.usedTextures[r].push(l),l}let o;return i===Kn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):i===Kn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):i===Kn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):i===Kn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):i===Kn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,s,i){if(this.freeTextures==null)return;const r=OC(s,i),a=zC(t,r,i);a in this.freeTextures||(this.freeTextures[a]=[]);const o=FC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[a],u=c.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function qte(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F||e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function FC(n,e,t,s,i){const r=ene(e,s);let a;if(i){const[l,c]=Ch(n[0],n[1]);a=l*c}else{const[l,c]=Mf(n[0],n[1]);a=l*c}const o=qte(t,r);return a*o}function ene(n,e){switch(n){case Kn.PACKED_2X2_FLOAT32:return HA(e);case Kn.PACKED_2X2_FLOAT16:return ZA(e);case Kn.UNPACKED_FLOAT32:return UA(e);case Kn.UNPACKED_FLOAT16:return BA(e);case Kn.PACKED_4X1_UNSIGNED_BYTE:return XA(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function tne(n){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Kn.PACKED_2X2_FLOAT32:Kn.UNPACKED_FLOAT32:n?Kn.PACKED_2X2_FLOAT16:Kn.UNPACKED_FLOAT16}function OC(n,e){if(n===pi.UPLOAD)return Kn.PACKED_2X2_FLOAT32;if(n===pi.RENDER||n==null)return tne(e);if(n===pi.DOWNLOAD||n===pi.PIXELS)return Kn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function zC(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const Xi="if (isnan(x)) return x;",nne="return x;",GC="return abs(x);",sne="return (x >= 0.0) ? x : (exp(x) - 1.0);",ine=Xi+`
  return (x < 0.0) ? 0.0 : x;
`,rne=Xi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,za="return x;",ane="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const one="return x;",lne=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,cne=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,une=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hne="return 1.0 / (1.0 + exp(-1.0 * x));";class Ba{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dne{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);const t=e.length,s=ps("rc",t),i=Bt(t),r=Yte(t,s),a=s.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pne=fy,fne=1e-7,mne=1e-4,wx={};function gne(n){return n in wx||(wx[n]={}),wx[n]}const yne=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),bne=600;function xne(){return q().global.screen==null?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*bne/1024/1024}class eb extends Pg{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof vx)t=e;else{const s=lr(q().getNumber("WEBGL_VERSION"),e);t=new vx(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=lr(q().getNumber("WEBGL_VERSION"));t=new vx(s),this.binaryCache=gne(q().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Jte(this.gpgpu),this.numMBBeforeWarning=xne(),this.texData=new Ev(this,Dt())}nextDataId(){return eb.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,i,r,a){const o=this.makeTensorInfo(t,s),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[i,r]},l.texShape=[i,r];const c=fm(t),u=new DC(c,!1,a),h=this.runWebGLProgram(u,[o],s,[[i,r]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(o),h.dataId}write(e,t,s){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:t,dtype:s,values:e,usage:pi.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,i,r){if(q().getBool("DEBUG")&&this.checkNumericalProblems(t),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:i,values:t,usage:pi.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:i,complexTensorInfos:r,slice:a,shape:o,isPacked:l}=t;if(a!=null){let d;l?d=new Ba(o,za):d=new Mr(o,za);const p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:i}],i),m=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),m}if(s!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=Zn());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);h=ya(d,p)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Zn()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const m=this.pendingRead.get(e);return new Promise(g=>m.push(g))}const t=this.texData.get(e),{values:s,shape:i,slice:r,dtype:a,complexTensorInfos:o,isPacked:l}=t;if(r!=null){let m;l?m=new Ba(i,za):m=new Mr(i,za);const g=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:a}],a),f=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(q().getBool("DEBUG")&&!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(a!=="complex64"&&q().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const m=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(m.texture.texture,...hm(i))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const m=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),g=m[0],f=m[1];h=ya(g,f)}else if(c==null)h=this.getValuesFromTexture(e);else{const m=oe(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,m)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const m=this.gpgpu.gl;Re(m,()=>m.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(m=>m(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Dt().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:i,shape:r,slice:a,dtype:o,isPacked:l,texture:c}=s;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;l?p=new Ba(r,za):p=new Mr(r,za);const m=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:o}],o),g=this.readToGPU(m,t);return this.disposeIntermediateTensorInfo(m),g}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),h=Dt().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(i=>da(i));return ct(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ct(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!Tq(s))throw q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:i}=this.texData.get(e),r=oe(t);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...hm(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),m}const a=q().getBool("WEBGL_PACK")&&i===!0,o=a?fm(t):t,l=a?new Vee(o):new Gee(o),c=this.runWebGLProgram(l,[{shape:o,dtype:s,dataId:e}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=s,i=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=Fr(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=Fr(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,i&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);o.kernelMs=SE(l),o.getExtraProfileInfo=()=>l.map((c,u)=>({name:a[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Zn(),endMs:null}}endTimer(e){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Zn(),e)}async getQueryTime(e){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:i,usage:r,isPacked:a,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(i,s),this.textureManager.releaseTexture(t,i,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=yne){return q().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&oe(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ui("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return pne(e.shape,t)}packedUnaryOp(e,t,s){const i=new Ba(e.shape,t),r=this.compileAndRun(i,[e],s);return Dt().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const i=YA(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,GC,e.dtype);const t=new Mr(e.shape,GC),s=this.compileAndRun(t,[e]);return Dt().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let i;if(t==="string"&&s!=null&&s.length>0&&Tr(s[0])){const r=s.map(a=>Nr(a));i=this.write(r,e,t)}else i=this.write(s,e,t);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:t}}makeOutput(e,t,s){return Dt().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new dne(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new jte(e.shape),s=!0;return this.runWebGLProgram(t,[e],e.dtype,null,s)}packedReshape(e,t){const s=[Qc(e.shape),...Jc(e.shape)],i={dtype:e.dtype,shape:s,dataId:e.dataId},r=[Qc(t),...Jc(t)],a=new JA(r,s),o=!0,l=[s],c=this.runWebGLProgram(a,[i],e.dtype,l,o);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:i,shape:r,dtype:a}=s;if(t!=null){const d=oe(r),p=t[0]*t[1]*4;E(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=fm(r);let l;i?l=new zee(o):l=new Oee(o);const c=!0,u=[t??hm(o)],h=this.runWebGLProgram(l,[{shape:o,dtype:a,dataId:e}],a,u,c,t);return{dtype:a,shape:r,dataId:h.dataId}}runWebGLProgram(e,t,s,i,r=!1,a){const o=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Ed.DENSE){const y=a??hm(e.outputShape);l.texShape=y.map(b=>b*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),oe(o.shape)===0)return l.values=Pn(o.dtype,0),o;const c=[],u=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!e.packedInputs&&oe(y.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!e.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!dg(b.shape,y.shape)){const x=y,v=y.shape;y.shape=b.shape,y=this.packedReshape(y,v),c.push(y),b=this.texData.get(y.dataId),x.shape=v}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:l,isUniform:!1},d=Fee(e,u,h),p=this.getAndSaveBinary(d,()=>Pee(this.gpgpu,e,u,h)),m=this.activeTimers!=null;let g;m&&(g=this.startTimer()),q().get("ENGINE_COMPILE_ONLY")||Dee(this.gpgpu,p,u,h,i),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const f=q().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const y=Zn();y-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(e,t,s,i,r=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,i,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Q(()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=q().getBool("DEBUG");q().set("DEBUG",!1);const t=this.abs(Ze(1e-8)).dataSync()[0];if(q().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?fne:mne}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:i,values:r,texture:a,usage:o,isPacked:l}=t;if(a!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Zn());let h=t.texShape;if(h==null&&(h=$q(s,l),t.texShape=h),r!=null){const d=fm(s);let p,m=h[1],g=h[0];const f=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!f)&&([m,g]=Ch(h[0],h[1])),l?p=new $ee(d,f):p=new DC(d,f);const y=f?[g,m]:h,b=this.makeTensorInfo(y,i),x=this.texData.get(b.dataId);f?x.usage=pi.PIXELS:x.usage=pi.UPLOAD,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),m,g,r);const v=[[g,m]],w=!0,_=this.runWebGLProgram(p,[b],i,v,w),T=this.texData.get(_.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,q().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=Zn()-u)}else{const d=this.acquireTexture(h,o,i,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:i}=s;return t!=null&&(s.values=vne(t,i)),s.values}acquireTexture(e,t,s,i){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,i)}computeBytes(e,t){return e[0]*e[1]*pd(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(i=>{try{this.checkCompletion_(t),i(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await pf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(OA(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:s,infLoc:i,nanLoc:r,inShapesLocations:a,inTexShapesLocations:o,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=$A(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=s,e.infLoc=i,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=o,e.outShapeLocation=l,e.outShapeStridesLocation=c,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:i,height:r,width:a,channels:o}=e,l=Dt().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(i,t,s,r,a,o);return Dt().makeTensorFromDataId(c,t,s,l)}}eb.nextDataId=0;function vne(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */zv()&&Hv("webgl",()=>new eb,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class qc{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=st(t,s),this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nf=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Rf{constructor(e,t,s,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=st(t,s);const r=this.outputShape.length;this.enableShapeUniforms=_s(r);let a="";if(i)if(r===0||oe(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Bt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const o=ps("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const wne={kernelName:Lu,backendName:"webgl",kernelFunc:ni};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _o(n){const{inputs:e,backend:t}=n,{real:s,imag:i}=e,r=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(r.dataId),o=ni({inputs:{x:s},backend:t}),l=ni({inputs:{x:i},backend:t});return a.complexTensorInfos={real:o,imag:l},r}const Sne={kernelName:Ug,backendName:"webgl",kernelFunc:_o};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA="return (a < 0.) ? b * a : a;",eL=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function _ne(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{alpha:r}=s,a=t.makeTensorInfo([],"float32",_a(r,"float32")),o=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rf(eL,i.shape,a.shape):new qc(qA,i.shape,a.shape),l=t.runWebGLProgram(o,[i,a],"float32");return t.disposeIntermediateTensorInfo(a),l}const Tne={kernelName:pp,backendName:"webgl",kernelFunc:_ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL="return (a < 0.) ? b * a : a;",nL=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ine(n){const{inputs:e,backend:t}=n,{x:s,alpha:i}=e,r=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rf(nL,s.shape,i.shape):new qc(tL,s.shape,i.shape);return t.runWebGLProgram(r,[s,i],"float32")}const Cne={kernelName:Ap,backendName:"webgl",kernelFunc:Ine};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rh="if (isnan(x)) return x;";function Et({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:i,backend:r})=>{const{x:a}=i,o=r,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){const h=o.texData.get(a.dataId),d=t(h.values,l);return o.makeTensorInfo(a.shape,l,d)}const c=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return c?u=new Ba(a.shape,e):u=new Mr(a.shape,n),o.runWebGLProgram(u,[a],l)}}function ts({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:i,dtype:r}){return({inputs:a,backend:o})=>{const{a:l,b:c}=a,u=o;if(s&&l.dtype==="complex64"){const m=u.texData.get(l.dataId),g=u.texData.get(c.dataId),[f,y]=[[m.complexTensorInfos.real,g.complexTensorInfos.real],[m.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(x=>{const[v,w]=x,_={dataId:v.dataId,dtype:v.dtype,shape:l.shape},T={dataId:w.dataId,dtype:w.dtype,shape:c.shape},C=new qc(n,l.shape,c.shape);return u.runWebGLProgram(C,[_,T],As(v.dtype,w.dtype))}),b=_o({inputs:{real:f,imag:y},backend:u});return u.disposeIntermediateTensorInfo(f),u.disposeIntermediateTensorInfo(y),b}const h=r||As(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&i!=null){const m=u.texData.get(l.dataId).values,g=u.texData.get(c.dataId).values,f=l.dtype==="string"?wl(m):m,y=l.dtype==="string"?wl(g):g,[b,x]=i(l.shape,c.shape,f,y,h),v=u.makeTensorInfo(x,h),w=u.texData.get(v.dataId);return w.values=b,v}const d=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Rf(e,l.shape,c.shape,t):p=new qc(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],h)}}function kd(n,e=!1){if(n==="linear")return e?one:nne;if(n==="relu")return e?cne:ine;if(n==="elu")return e?lne:sne;if(n==="relu6")return e?une:rne;if(n==="prelu")return e?nL:tL;if(n==="leakyrelu")return e?eL:qA;if(n==="sigmoid")return e?hne:ane;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sL{constructor(e,t,s,i=!1,r=!1,a=!1,o=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=_s(this.outputShape.length);const u=i?e[1]:e[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",m=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",y="";o&&(l?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:c?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:f=`vec4 activation(vec4 x) {
          ${o}
        }`,y="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let x="rc.x",v="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${f}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${x};
        int batchB = ${v};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${g[0]});
          result += (${m[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let WC=class{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=st(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $C="return a * b;";function gT(n){const{inputs:e,backend:t}=n,{a:s,b:i}=e,r=As(s.dtype,i.dtype);if(s.dtype==="complex64"){const o=t.texData.get(s.dataId),l=t.texData.get(i.dataId),c=new WC(VC.REAL,s.shape,i.shape),u=new WC(VC.IMAG,s.shape,i.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),m=_o({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),m}if(t.shouldExecuteOnCPU([s,i])){const o=t.texData.get(s.dataId),l=t.texData.get(i.dataId),[c,u]=Cte(s.shape,i.shape,o.values,l.values,r),h=t.makeTensorInfo(u,r),d=t.texData.get(h.dataId);return d.values=c,h}let a;return q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Rf($C,s.shape,i.shape):a=new qc($C,s.shape,i.shape),t.runWebGLProgram(a,[s,i],r)}const Mne={kernelName:$u,backendName:"webgl",kernelFunc:gT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ene(n,e,t){const s=[Qc(n.shape),...Jc(n.shape)],i={dtype:n.dtype,shape:s,dataId:n.dataId},r=[Qc(e),...Jc(e)],a=new JA(r,s),o=!0,l=[s],c=t.runWebGLProgram(a,[i],n.dtype,l,o);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{shape:r}=s,a=t,o=oe(i.shape),l=Nv(r,o),c=oe(l);E(o===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const u=a.texData.get(i.dataId);return u.isPacked&&!dg(i.shape,l)&&!(u.texture!==null&&dg(u.shape,l))?Ene(i,l,a):(a.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const kne={kernelName:Pp,backendName:"webgl",kernelFunc:ke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let UC=class{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:r,outSize:a}=e;this.outputShape=[i,a];const o=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${dl(h)?h.toPrecision(2):h}, ones);`}let u="";r%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nne{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:r,outSize:a}=e;this.outputShape=[i,a];let o="0.0",l="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",l="min"):t==="max"&&(o="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let m="";r%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rne(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=Cy(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Hl(n,e,t,s){const i=Rne(n.shape);let r=n;for(let a=0;a<i.length;a++){const{inSize:o,windowSize:l,outSize:c}=i[a];let u,h;t==="mean"?u=a===0?new UC({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c},o):new UC({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c}):u=new Nne({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c},t),h=r,r=s.runWebGLProgram(u,[r],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ane{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const i=Bt(this.rank),r=Lne(t);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function Lne(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let i=0;i<n.length;i++)s[n[i]]=t[i];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pne{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=Bt(this.rank),r=QA("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=r[u];const o=`vec2(${a.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(n,e,t){const s=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pne(n.shape,e):new Ane(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dne(n,e,t,s){const i=e,r=n.shape.length,a=ft(i,n.shape);let o=a;const l=an(o,r),c=l!=null;let u=n;c&&(u=tb(n,l,s),o=yn(o.length,r)),es("sum",o,r);const[h,d]=Un(u.shape,o);let p=h;t&&(p=gn(h,a));const m=oe(d),g=oe(n.shape)/m,f=ke({inputs:{x:u},attrs:{shape:[g,m]},backend:s}),y=V0(n.dtype),b=Hl(f,y,"sum",s),x=ke({inputs:{x:b},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(b),c&&s.disposeIntermediateTensorInfo(u),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nb(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s;return Dne(i,r,a,t)}const Fne={kernelName:Vp,backendName:"webgl",kernelFunc:nb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{perm:r}=s,a=t,o=i.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=i.shape[r[u]];let c;if(a.shouldExecuteOnCPU([i])){const u=a.texData.get(i.dataId).values,h=fT(u,i.shape,i.dtype,r,l);c=a.makeTensorInfo(l,i.dtype);const d=a.texData.get(c.dataId);d.values=h}else c=tb(i,r,a);return c}const One={kernelName:nl,backendName:"webgl",kernelFunc:xs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL=1e3;function pg({a:n,b:e,transposeA:t,transposeB:s,backend:i,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const c=n.shape.length,u=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=s?e.shape[u-1]:e.shape[u-2],p=t?n.shape[c-1]:n.shape[c-2],m=s?e.shape[u-2]:e.shape[u-1],g=n.shape.slice(0,-2),f=e.shape.slice(0,-2),y=oe(g),b=oe(f),x=st(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,m]);E(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=t?[y,h,p]:[y,p,h],w=s?[b,m,d]:[b,d,m],_=ke({inputs:{x:n},backend:i,attrs:{shape:v}}),T=ke({inputs:{x:e},backend:i,attrs:{shape:w}}),C=[_,T],S=Math.max(y,b),M=t?_.shape[1]:_.shape[2],A=r!=null,P=a!=null,D=l==="leakyrelu",N=l!=null?kd(l,!0):null,L=A||P||D||N!=null;let G;if((p===1||m===1)&&M>iL&&L===!1){let U=_,H=T;t&&(U=xs({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),C.push(U)),s&&(H=xs({inputs:{x:T},backend:i,attrs:{perm:[0,2,1]}}),C.push(H));const j=m!==1,O=m===1;let X=U;j&&(X=ke({inputs:{x:U},backend:i,attrs:{shape:[S,M,1]}}),C.push(X));const ee=m===1?2:1;let te=H;O&&(te=ke({inputs:{x:H},backend:i,attrs:{shape:[S,1,M]}}),C.push(te));const se=gT({inputs:{a:X,b:te},backend:i});G=nb({inputs:{x:se},backend:i,attrs:{axis:ee,keepDims:!0}}),C.push(se)}else{const U=As(n.dtype,e.dtype),H=new sL(v,w,[S,p,m],t,s,A,N,P,D),j=[_,T];if(r!=null&&j.push(r),P&&j.push(a),D){const O=i.makeTensorInfo([],"float32",_a(o,"float32"));j.push(O),C.push(O)}G=i.runWebGLProgram(H,j,U)}const V=ke({inputs:{x:G},backend:i,attrs:{shape:x}});C.push(G);for(const U of C)i.disposeIntermediateTensorInfo(U);return V}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zne(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return pg({a:i,b:r,transposeA:l,transposeB:c,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}const Gne={kernelName:fd,backendName:"webgl",kernelFunc:zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC="return abs(x);";function Vne(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=t.texData.get(s.dataId),a=YA(r.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let i;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Ba(s.shape,BC):i=new Mr(s.shape,BC),t.runWebGLProgram(i,[s],s.dtype)}const Wne={kernelName:Hd,backendName:"webgl",kernelFunc:Vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ne=Xi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Une=Et({opSnippet:$ne}),Bne={kernelName:pu,backendName:"webgl",kernelFunc:Une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xne=Xi+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Hne=Et({opSnippet:Xne}),Zne={kernelName:fu,backendName:"webgl",kernelFunc:Hne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XC="return a + b;",Kne=ts({opSnippet:XC,packedOpSnippet:XC,supportsComplex:!0,cpuKernelImpl:ate}),Yne={kernelName:Ll,backendName:"webgl",kernelFunc:Kne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jne{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qne{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function km(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return ni({inputs:{x:s[0]},backend:t});if(s.length>q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const o=Math.floor(s.length/2),l=km({inputs:s.slice(0,o),backend:t}),c=km({inputs:s.slice(o),backend:t});return km({inputs:[l,c],backend:t})}const i=s.map(o=>o.dtype).reduce((o,l)=>As(o,l)),r=s.map(o=>o.shape),a=q().getBool("WEBGL_PACK")?new Qne(s[0].shape,r):new jne(s[0].shape,r);return t.runWebGLProgram(a,s,i)}const Jne={kernelName:Zd,backendName:"webgl",kernelFunc:km};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qne(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s,o=i.shape.length,l=ft(r,i.shape);let c=l;const u=an(c,o);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:t,attrs:{perm:u}}),c=yn(c.length,o)),es("all",c,o);const[d,p]=Un(h.shape,c),m=oe(p),g=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),f=Hl(g,g.dtype,"all",t);let y;if(a){const b=gn(d,l);y=ke({inputs:{x:f},backend:t,attrs:{shape:b}})}else y=ke({inputs:{x:f},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),u!=null&&t.disposeIntermediateTensorInfo(h),y}const ese={kernelName:Og,backendName:"webgl",kernelFunc:qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s,o=i.shape.length,l=ft(r,i.shape);let c=l;const u=an(c,o);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:t,attrs:{perm:u}}),c=yn(c.length,o)),es("any",c,o);const[d,p]=Un(h.shape,c),m=oe(p),g=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),f=Hl(g,g.dtype,"any",t);let y;if(a){const b=gn(d,l);y=ke({inputs:{x:f},backend:t,attrs:{shape:b}})}else y=ke({inputs:{x:f},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),u!=null&&t.disposeIntermediateTensorInfo(h),y}const nse={kernelName:zg,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sse{constructor(e,t,s){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const o=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ise{constructor(e,t,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),i||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,c=Bt(l),u=ps("coords",l);let h,d;if(a===1){d=l+1;const C=Bt(d);h=`
        ${C} sourceLocR = ${C}(${u.join()}, 0);
        ++${u[l-1]};
        ${C} sourceLocG = ${C}(${u.join()}, 0);
        ++${u[l-2]};
        ${C} sourceLocA = ${C}(${u.join()}, 0);
        --${u[l-1]};
        ${C} sourceLocB = ${C}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),m="."+p[d-1],g=p.map(C=>"int "+C),f=ps("sourceLocR",d-1).concat("inIdx.r"),y=ps("sourceLocG",d-1).concat("inIdx.g"),b=ps("sourceLocB",d-1).concat("inIdx.b"),x=ps("sourceLocA",d-1).concat("inIdx.a"),v=s==="max"?"greaterThan":"lessThan",w=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()})));`,_=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,T=i?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${o[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n,e,t,s=null){let i=e.shape[0],r=e.shape[1];s!=null&&(i=s.shape[0],r=s.shape[1]);const a=Cy(r),o={windowSize:a,inSize:r,batchSize:i,outSize:Math.ceil(r/a)},l=new sse(o,t,s==null),c=[e];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=rL(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}function aL(n,e,t,s=null){const i=s!=null?s.shape:e.shape,r=i[i.length-1],a=Cy(r),o=new ise(i,a,t,s==null),l=s==null?[e]:[e,s],c=n.runWebGLProgram(o,l,"int32");if(c.shape.length===e.shape.length){const u=aL(n,e,t,c);return n.disposeIntermediateTensorInfo(c),u}return c}function oL(n,e,t,s){const i=[t];if(es("arg"+s.charAt(0).toUpperCase()+s.slice(1),i,e.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],a=n.texData.get(e.dataId),o=a!==null&&a.isPacked;let l=e;o&&(l=n.unpackTensor(e),r.push(l));const[c,u]=Un(l.shape,i),h=oe(u),d=ke({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});r.push(d);const p=rL(n,d,s);r.push(p);const m=ke({inputs:{x:p},backend:n,attrs:{shape:c}});return r.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}return aL(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;let a=ft(r,i.shape);const o=an(a,i.shape.length);let l=i;const c=[];o!=null&&(l=xs({inputs:{x:i},backend:t,attrs:{perm:o}}),c.push(l),a=yn(a.length,l.shape.length)),es("argMax",[a[0]],l.shape.length);const u=oL(t,l,a[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const ase={kernelName:Kd,backendName:"webgl",kernelFunc:rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ose(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;let a=ft(r,i.shape);const o=an(a,i.shape.length);let l=i;const c=[];o!=null&&(l=xs({inputs:{x:i},backend:t,attrs:{perm:o}}),c.push(l),a=yn(a.length,l.shape.length)),es("argMin",[a[0]],l.shape.length);const u=oL(t,l,a[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const lse={kernelName:Yd,backendName:"webgl",kernelFunc:ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cse=Xi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,use=Et({opSnippet:cse}),hse={kernelName:mu,backendName:"webgl",kernelFunc:use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dse=Xi+"return log(x + sqrt(x * x + 1.0));",pse=Et({opSnippet:dse}),fse={kernelName:gu,backendName:"webgl",kernelFunc:pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mse=Xi+`
  return atan(x);
`,gse=Et({opSnippet:mse}),yse={kernelName:yu,backendName:"webgl",kernelFunc:gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bse=mT+`
  return atan(a, b);
`,xse=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Nf+`
  return result;
`,vse=ts({opSnippet:bse,packedOpSnippet:xse}),wse={kernelName:xu,backendName:"webgl",kernelFunc:vse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sse=Xi+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,_se=Et({opSnippet:Sse}),Tse={kernelName:bu,backendName:"webgl",kernelFunc:_se};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nd{constructor(e,t,s,i=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(g||(b="-1.0 / 1e-20"),s){const C=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${p}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?f:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const x="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");const w=Math.floor(a/4)*4,_=a%4,T=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${p}, ${m});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${w};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${v});
      }
    `}}let yT=class{constructor(e,t,s,i=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,l=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,g=e.effectiveFilterWidth,f=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg";let v="0.0";if(x||(v="-1.0 / 1e-20"),s){const M=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${c});
        const ivec3 pads = ivec3(${f}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${M} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let _=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / max(count, 1.0)");const T=Math.floor(a/4)*4,C=a%4,S=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${c});
      const ivec3 pads = ivec3(${f}, ${y}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${T};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${S}
            }
          }
        }
        setOutput(${_});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ise(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;Ef(i,"avgPool");const{filterSize:r,strides:a,pad:o,dimRoundingMode:l}=s,c=1;E(qn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ui(i.shape,r,a,c,o,l);if(u.filterWidth===1&&u.filterHeight===1&&vt(u.inShape,u.outShape))return ni({inputs:{x:i},backend:t});const h=new Nd(u,"avg",!1);return t.runWebGLProgram(h,[i],"float32")}const Cse={kernelName:jd,backendName:"webgl",kernelFunc:Ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:a,pad:o,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=Ta(i.shape,r,a,u,o,l,c),d=new yT(h,"avg",!1);return t.runWebGLProgram(d,[i],"float32")}const Ese={kernelName:Qd,backendName:"webgl",kernelFunc:Mse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kse{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,i=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=l-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Nse{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,i=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=h-1-e.padInfo.front,g=d-1-e.padInfo.top,f=p-1-e.padInfo.left,y=1/(t*s*i);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${g}, ${f});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,a=r,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Ta(a.shape,o,l,h,c,u),p=new Nse(d);return t.runWebGLProgram(p,[i],a.dtype)}const Ase={kernelName:Vg,backendName:"webgl",kernelFunc:Rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,a=r;Ef([i,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:c}=s,u=Ui(a.shape,o,l,1,c),h=new kse(u);return t.runWebGLProgram(h,[i],a.dtype)}const Pse={kernelName:Gg,backendName:"webgl",kernelFunc:Lse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dse(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r}=e,{transposeA:a,transposeB:o}=s;return pg({a:i,b:r,transposeA:a,transposeB:o,backend:t})}const Fse={kernelName:Jd,backendName:"webgl",kernelFunc:Dse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ose{constructor(e,t,s,i,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],st(e,t),st(e,s);let o="0.0";i!=null&&(st(e,i),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";r!=null&&(st(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zse{constructor(e,t,s,i,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],st(e,t),st(e,s);let o="vec4(0.0)";i!=null&&(st(e,i),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(st(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gse=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:i,variance:r,offset:a,scale:o}=n;E(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[s,i,r];let u=null;a!=null&&(u=a.shape,c.push(a));let h=null;o!=null&&(h=o.shape,c.push(o));const d=q().getBool("WEBGL_PACK_NORMALIZATION")?new zse(s.shape,i.shape,r.shape,u,h,l):new Ose(s.shape,i.shape,r.shape,u,h,l);return e.runWebGLProgram(d,c,c[0].dtype)},Vse={kernelName:up,backendName:"webgl",kernelFunc:Gse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wse{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Bt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=$se(this.rank);let i;const r=e.map((a,o)=>`sourceLoc.${U1[o]} = start[${o}] + coords.${U1[o]};`);i=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${s}));
      }
    `}}const U1=["x","y","z","w","u","v"];function $se(n){if(n===1)return"sourceLoc";if(n<=6)return U1.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Use{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Bt(this.rank),s=ps("coords",this.rank),i=ps("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,a=`getChannel(getSource(${i.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${a};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${i[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(n,e,t,s){const i=s.texData.get(n.dataId),r=s.makeTensorInfo(t,n.dtype),a=s.texData.get(r.dataId);Object.assign(a,i),a.refCount=1,a.shape=t,a.dtype=n.dtype;let o=lS(e,Xe(n.shape));i.slice&&(o+=i.slice.flatOffset),a.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||n.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),r}function Ah(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,size:a}=s,[o,l]=Iy(i,r,a);if(rS(i,o,l),oe(l)===0)return t.makeTensorInfo(l,i.dtype,[]);if(t.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=t.texData.get(i.dataId),d=Ote(h.values,o,l,i.shape,i.dtype);return t.makeTensorInfo(l,i.dtype,d)}const{isPacked:c}=t.texData.get(i.dataId),u=oS(i.shape,o,l);if(c||!u){const h=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Use(l):new Wse(l),d=[o];return t.runWebGLProgram(h,[i],i.dtype,d)}return t.uploadToGPU(i.dataId),Bse(i,o,l,t)}const Xse={kernelName:Gp,backendName:"webgl",kernelFunc:Ah};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hse=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,crops:a}=s;E(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((b,x)=>b*x),l=ff(i.shape,r,o),c=mf(l.length,r.length),u=gf(i.shape,r,o),h=pS(a,r.length),d=fS(u,a,r.length),p=[],m=ke({inputs:{x:i},backend:t,attrs:{shape:l}}),g=xs({inputs:{x:m},backend:t,attrs:{perm:c}}),f=ke({inputs:{x:g},backend:t,attrs:{shape:u}}),y=Ah({inputs:{x:f},backend:t,attrs:{begin:h,size:d}});return p.push(m),p.push(g),p.push(f),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},Zse={kernelName:qd,backendName:"webgl",kernelFunc:Hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:a}=s,o=t.readSync(i.dataId),l=t.readSync(r.dataId),c=KA(o,l,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,c)}const Yse={kernelName:Wg,backendName:"webgl",kernelFunc:Kse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jse(n){const{inputs:e,backend:t}=n,{s0:s,s1:i}=e,r=t.readSync(s.dataId),a=t.readSync(i.dataId),o=st(Array.from(r),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const Qse={kernelName:$g,backendName:"webgl",kernelFunc:jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jse="return float(a != b);",lL=ts({opSnippet:Jse,cpuKernelImpl:Ete,dtype:"bool"}),qse={kernelName:Mp,backendName:"webgl",kernelFunc:lL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Af(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.texData.get(s.dataId);return ni({inputs:{x:i.complexTensorInfos.real},backend:t})}const eie={kernelName:w0,backendName:"webgl",kernelFunc:Af};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tie="return float(int(x));";function nie(n,e){const t=new Mr(n.shape,tie),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dtype:r}=s;if(r==="complex64"){if(i.dtype==="complex64")return ni({inputs:{x:i},backend:t});const a=Sn(i.shape),o=B1({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),l=_o({inputs:{real:o,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(o),l}if(i.dtype==="complex64"){const a=Af({inputs:{input:i},backend:t}),o=B1({inputs:{x:a},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(a),o}if(!Rv(i.dtype,r)){const a=ni({inputs:{x:i},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:r}}if(t.shouldExecuteOnCPU([i])){const a=t.texData.get(i.dataId).values,[o,l,c]=lte(a,i.shape,i.dtype,r);return t.makeTensorInfo(o,l,c)}if(r==="int32")return nie(i,t);if(r==="bool"){const a=t.makeTensorInfo([],"bool",Pn("bool",1)),o=lL({inputs:{a:i,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),o}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const sie={kernelName:vu,backendName:"webgl",kernelFunc:B1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC="return ceil(x);",iie=Et({opSnippet:HC,packedOpSnippet:HC,cpuKernelImpl:cte}),rie={kernelName:wu,backendName:"webgl",kernelFunc:iie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aie{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oie{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{clipValueMin:r,clipValueMax:a}=s;let o;q().getBool("WEBGL_PACK_CLIP")?o=new oie(i.shape):o=new aie(i.shape);const l=[[r],[a]];return t.runWebGLProgram(o,[i],i.dtype,l)}const cie={kernelName:Su,backendName:"webgl",kernelFunc:lie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uie{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZC(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function hie(n){const{inputs:e,backend:t}=n,{x:s}=e,i=t.texData.get(s.dataId),r=new uie(s.shape),a=[ZC(s,i.complexTensorInfos.real),ZC(s,i.complexTensorInfos.imag)];return t.runWebGLProgram(r,a,a[0].dtype)}const die={kernelName:ep,backendName:"webgl",kernelFunc:hie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pie{constructor(e){this.outputShape=[],this.outputShape=Ar(e,1),this.variableNames=e.map((a,o)=>`T${o}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const o=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}const i=t.length,r=t[t.length-1];s.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fie{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ar(e,t);const s=this.outputShape,i=s.length,r=Bt(i),a=ps("coords",i),o=["x","y","z","w","u","v"].slice(0,i);this.variableNames=e.map((g,f)=>`T${f}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let g=1;g<l.length;g++)l[g]=l[g-1]+e[g][t];const c=o[t],u=o.slice(-2),h=o.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let g=1;g<l.length;g++){const f=l[g-1];d+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${gm(o,c,f)}),
            vec2(${gm(u,c,f)}));
        }`}const p=l.length,m=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${gm(o,c,m)}),
          vec2(${gm(u,c,m)}));`,this.userCode=`
      float getValue(${o.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[i-1]} = ${a[i-1]} + 1;
        if (${a[i-1]} < ${s[i-1]}) {
          result.g = getValue(${a});
        }

        ${a[i-2]} = ${a[i-2]} + 1;
        if (${a[i-2]} < ${s[i-2]}) {
          result.a = getValue(${a});
        }

        ${a[i-1]} = ${a[i-1]} - 1;
        if (${a[i-2]} < ${s[i-2]} &&
            ${a[i-1]} < ${s[i-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function gm(n,e,t){const s=n.indexOf(e);return n.map((i,r)=>r===s?`${i} - ${t}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.texData.get(s.dataId);return ni({inputs:{x:i.complexTensorInfos.imag},backend:t})}const mie={kernelName:o0,backendName:"webgl",kernelFunc:sb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function td(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(b=>Af({inputs:{input:b},backend:t})),m=n.map(b=>sb({inputs:{input:b},backend:t})),g=td(p,e,t),f=td(m,e,t),y=_o({inputs:{real:g,imag:f},backend:t});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),m.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),y}let i=t.shouldExecuteOnCPU(n);if(s==="string"&&(i=!0),i){const p=n.map(v=>{const w=[-1,oe(v.shape.slice(e))];return ke({inputs:{x:v},backend:t,attrs:{shape:w}})}),m=p.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),g=Ar(p.map(v=>v.shape),1),f=p[0].shape[0]===1,y=ute(m,g,s,f),b=Ar(n.map(v=>v.shape),e),x=t.makeTensorInfo(b,s,y);return p.forEach(v=>t.disposeIntermediateTensorInfo(v)),x}const r=n.filter(p=>oe(p.shape)>0),a=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=a?new Mr(n[0].shape,za):new Ba(n[0].shape,za);return t.runWebGLProgram(p,n,s)}const o=q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>o){const p=[];for(let g=0;g<r.length;g+=o){const f=r.slice(g,g+o);p.push(td(f,e,t))}const m=td(p,e,t);for(const g of p)t.disposeIntermediateTensorInfo(g);return m}if(a){const p=new fie(r.map(m=>m.shape),e);return t.runWebGLProgram(p,r,s)}const{tensors2D:l,outShape:c}=gie(r,e,t),u=new pie(l.map(p=>p.shape)),h=t.runWebGLProgram(u,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=ke({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function gie(n,e,t){const s=Ar(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>ke({inputs:{x:i},attrs:{shape:[-1,oe(i.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s,r=ft(i,e[0].shape)[0],a=e.map(c=>c.shape);uS(a,r);const o=Ar(e.map(c=>c.shape),r);if(oe(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(c=>oe(c.shape)>0);return l.length===1?ni({inputs:{x:l[0]},backend:t}):td(l,r,t)}const yie={kernelName:tp,backendName:"webgl",kernelFunc:cL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uL{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,f=e.dataFormat==="channelsLast",y=f?1:2,b=f?2:3,x=f?3:1;let v="",w="";s&&(i?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:v=`
          float activation(float x) {
            ${s}
          }
        `,w="result = activation(result);");const _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}}class bie{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${s}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hL{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_s(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let f=0;f<u;f++)d+=`
           vec4 xTexelC${f*2};
           int xTexelC${f*2}Ready;
           vec4 xTexelC${f*2+1};
           int xTexelC${f*2+1}Ready;
           vec4 xC${f};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let f=0;f<u;f++)d+=`
           xTexelC${f*2} = vec4(0.0);
           xTexelC${f*2}Ready = 0;
           xTexelC${f*2+1} = vec4(0.0);
           xTexelC${f*2+1}Ready = 0;
           xC${f} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let f=0;f<(h+1)/2;f++){const y=f*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,o===1){if(y<u&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<u)){const b=a%2===0?Dg(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<u&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<u&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<u&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<u&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",m="";s&&(i?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xie{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);const{dataFormat:s}=t,i=Ss(),r=s==="channelsLast",a=r?1:2,o=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fg(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function dL({x:n,filter:e,convInfo:t,backend:s,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:o=null}){const l=n.shape,c=s.texData.get(n.dataId),u=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",m=!1,g=!1;let f;const y=[];if(r!=null){const b=fg(r.shape,p);b!=null&&(r=ke({inputs:{x:r},backend:s,attrs:{shape:b}}),y.push(r))}if(i!=null){const b=fg(i.shape,p);b!=null&&(i=ke({inputs:{x:i},backend:s,attrs:{shape:b}}),y.push(i))}if(!((h===1||d===1)&&u>iL)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&vt(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),x={dataId:n.dataId,shape:[1,b,t.inChannels],dtype:n.dtype},v=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,E(dg(c.shape,x.shape),()=>`packed reshape ${c.shape} to ${x.shape} isn't free`);const w=ke({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(w);const _=pg({a:x,b:w,backend:s,transposeA:m,transposeB:g,bias:i,activation:o,preluActivationWeights:r,leakyreluAlpha:a}),T=s.texData.get(_.dataId);E(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=v,T.shape=t.outShape,f=ni({inputs:{x:_},backend:s}),f.shape=t.outShape,y.push(_)}else{const b=t.outHeight*t.outWidth,x=ke({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,b,t.inChannels]:[t.batchSize,t.inChannels,b]}}),v=ke({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),w=pg({a:p?x:v,b:p?v:x,transposeA:!p,transposeB:g,backend:s,bias:i,activation:o,preluActivationWeights:r,leakyreluAlpha:a});f=ke({inputs:{x:w},backend:s,attrs:{shape:t.outShape}}),y.push(x),y.push(v),y.push(w)}for(const b of y)s.disposeIntermediateTensorInfo(b);return f}function pL({x:n,filter:e,convInfo:t,backend:s,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=t,m=p==="channelsLast",g=l*c*u,f=d*h,y=[t.batchSize,g,f],b=!0,x=!1,v=[];if(r!=null){const U=fg(r.shape,m);U!=null&&(r=ke({inputs:{x:r},backend:s,attrs:{shape:U}}),v.push(r))}if(i!=null){const U=fg(i.shape,m);U!=null&&(i=ke({inputs:{x:i},backend:s,attrs:{shape:U}}),v.push(i))}const w=ke({inputs:{x:e},backend:s,attrs:{shape:[1,g,oe(e.shape)/g]}});v.push(w);const _=new xie(y,t),T=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],C=s.runWebGLProgram(_,[n],"float32",T),S=ke({inputs:{x:C},backend:s,attrs:{shape:y}});v.push(C),v.push(S);const M=i!=null,A=r!=null,P=o==="leakyrelu",D=o?kd(o,!0):null,N=new sL(m?S.shape:w.shape,m?w.shape:S.shape,m?[t.batchSize,f,t.outChannels]:[t.batchSize,t.outChannels,f],b,x,M,D,A,P),L=m?[S,w]:[w,S];if(i&&L.push(i),A&&L.push(r),P){const U=s.makeTensorInfo([],"float32",_a(a,"float32"));L.push(U),v.push(U)}const G=s.runWebGLProgram(N,L,"float32"),V=ke({inputs:{x:G},backend:s,attrs:{shape:t.outShape}});v.push(G);for(const U of v)s.disposeIntermediateTensorInfo(U);return V}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:a,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=Ia(l),d=$n(i.shape,r.shape,a,c,o,u,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=dL({x:i,filter:r,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&q().getBool("WEBGL_EXP_CONV")){const g=new hL(d),f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(g,[i,r],"float32",f)}else if(q().getBool("WEBGL_CONV_IM2COL"))p=pL({x:i,filter:r,convInfo:d,backend:t});else{const g=new uL(d);p=t.runWebGLProgram(g,[i,r],"float32")}const m=ke({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),m}const wie={kernelName:np,backendName:"webgl",kernelFunc:vie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sie{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,i=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class _ie{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,i=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=a?1:2,u=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Tie{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,i=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Iie{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,i=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=t-1-e.padInfo.front,c=s-1-e.padInfo.top,u=i-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=Ia(l),d=$n(i.shape,u,a,1,o,c,!1,h),p=new Sie(d);return t.runWebGLProgram(p,[i,r],"float32")}const Mie={kernelName:Bg,backendName:"webgl",kernelFunc:Cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eie(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{inputShape:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=Ia(c),d=$n(a,r.shape,o,1,l,u,!1,h),p=new _ie(d);return t.runWebGLProgram(p,[i,r],"float32")}const kie={kernelName:sp,backendName:"webgl",kernelFunc:Eie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:a,pad:o,dilations:l}=s,c=bo(i.shape,r.shape,a,l,o),u=new bie(c);return t.runWebGLProgram(u,[i,r],"float32")}const Rie={kernelName:ip,backendName:"webgl",kernelFunc:Nie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:a,pad:o,filterShape:l}=s,c=bo(i.shape,l,a,1,o),u=new Tie(c);return t.runWebGLProgram(u,[i,r],"float32")}const Lie={kernelName:Xg,backendName:"webgl",kernelFunc:Aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pie(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{pad:a,strides:o,inputShape:l}=s,c=bo(l,r.shape,o,1,a),u=new Iie(c);return t.runWebGLProgram(u,[i,r],"float32")}const Die={kernelName:Hg,backendName:"webgl",kernelFunc:Pie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fie=Rh+`
  return cos(x);
`,Oie=Et({opSnippet:Fie}),zie={kernelName:_u,backendName:"webgl",kernelFunc:Oie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gie=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Vie=Et({opSnippet:Gie}),Wie={kernelName:Tu,backendName:"webgl",kernelFunc:Vie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ie{constructor(e,t,s,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,l,c]=e,[u]=t,[h,d]=s;this.outputShape=[u,h,d,c];const p=i==="bilinear"?1:0,[m,g]=[`${o-1}.0`,`${l-1}.0`],[f,y,b]=h>1?[`${(o-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[x,v,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uie=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:i,boxes:r,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:c}=s,u=new $ie(i.shape,r.shape,o,l,c);return t.runWebGLProgram(u,[i,r,a],"float32")},Bie={kernelName:Kg,backendName:"webgl",kernelFunc:Uie};var Rd;(function(n){n.Prod="*",n.Sum="+"})(Rd||(Rd={}));let KC=class{constructor(e,t,s,i){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===Rd.Prod?"1.0":"0.0",o=s?a:`getX(${YC(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=i?`end != ${l-1}`:"end != 0",u=i?"end + 1":"end - 1"):(c=i?`end + pow2 < ${l}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Bt(r)} coords = getOutputCoords();
        int end = ${jC(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${jC(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${YC(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function YC(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function jC(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n,e,t,s,i,r){const a=e.shape.length,o=an([s],a);let l=e;o!=null&&(l=xs({inputs:{x:e},backend:t,attrs:{perm:o}}));const c=yn(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=ni({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const p=new KC(n,l.shape,!1,r),m=[[d]],g=h;h=t.runWebGLProgram(p,[h],h.dtype,m),t.disposeIntermediateTensorInfo(g)}if(i){const d=new KC(n,l.shape,i,r),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(o!=null){const d=xo(o),p=xs({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:a,reverse:o}=s;return fL(Rd.Prod,i,t,r,a,o)}const Hie={kernelName:Zg,backendName:"webgl",kernelFunc:Xie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:a,reverse:o}=s;return fL(Rd.Sum,i,t,r,a,o)}const Kie={kernelName:rp,backendName:"webgl",kernelFunc:Zie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:a,binaryOutput:o}=s;if(i.shape.length===1){const l=t.readSync(i.dataId),c=t.readSync(r.dataId),u=KA(l,c,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,u)}else if(i.shape.length===2){const l=t.bufferSync(i),c=t.bufferSync(r),u=ote(l,c,a,o);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const jie={kernelName:Yg,backendName:"webgl",kernelFunc:Yie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qie{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockSize:r,dataFormat:a}=s,o=i.shape[0],l=a==="NHWC"?i.shape[1]:i.shape[2],c=a==="NHWC"?i.shape[2]:i.shape[3],u=a==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=c*r,p=u/(r*r),m=a==="NHWC"?[o,h,d,p]:[o,p,h,d],g=new Qie(m,r,a);return t.runWebGLProgram(g,[i],i.dtype)}const qie={kernelName:jg,backendName:"webgl",kernelFunc:Jie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mL{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_s(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let c="",u="";s&&(i?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gL{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_s(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let y=0;y<h;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){const b=y*2;if(p+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<h&&(o%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const x=o%2===0?Dg(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):x===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(o%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let m="",g="";s&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:m=`vec4 activation(vec4 x) {
          ${s}
        }`,g="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${f}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ere(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),E(qn(a,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const h=$n(i.shape,r.shape,a,u,o,c,!0);let d;q().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new gL(h):d=new mL(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[i,r],"float32",p)}const tre={kernelName:ap,backendName:"webgl",kernelFunc:ere};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nre{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,i=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class sre{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,i=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ire(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=s,h=$n(i.shape,u,a,o,l,c,!0),d=new nre(h);return t.runWebGLProgram(d,[i,r],"float32")}const rre={kernelName:Qg,backendName:"webgl",kernelFunc:ire};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function are(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=s,h=$n(u,r.shape,a,o,l,c,!0),d=new sre(h);return t.runWebGLProgram(d,[i,r],"float32")}const ore={kernelName:Jg,backendName:"webgl",kernelFunc:are};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lre{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cre(n){const{inputs:e,backend:t}=n,{x:s}=e,i=[...s.shape,...s.shape],r=oe(s.shape),a=ke({inputs:{x:s},backend:t,attrs:{shape:[r]}}),o=new lre(r),l=t.runWebGLProgram(o,[a],a.dtype),c=ke({inputs:{x:l},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const ure={kernelName:qg,backendName:"webgl",kernelFunc:cre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hre{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:i,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:l,dilationHeight:c,dilationWidth:u}=e,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dre(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:a,pad:o,dilations:l}=s,c=Yp(i.shape,r.shape,a,o,"NHWC",l);let u;const h=new hre(c);u=t.runWebGLProgram(h,[i,r],"float32");const d=ke({inputs:{x:u},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(u),d}const pre={kernelName:op,backendName:"webgl",kernelFunc:dre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fre(n){const{inputs:e,backend:t,attrs:s}=n,{equation:i}=s,r=e,{allDims:a,summedDims:o,idDims:l}=SS(i,r.length);TS(a.length,l,r);const{path:c,steps:u}=IS(o,l),h=u.length;let d=null,p=a.length;const m=[];for(let g=0;g<h;++g){for(const f of u[g]){const{permutationIndices:y,expandDims:b}=_S(p,l[f]);let x;CS(y)?x=r[f]:(x=xs({inputs:{x:r[f]},backend:t,attrs:{perm:y}}),m.push(x));const v=x.shape.slice();for(let w=0;w<b.length;++w)v.splice(b[w],0,1);vt(x.shape,v)||(x=ke({inputs:{x},backend:t,attrs:{shape:v}}),m.push(x)),d===null?d=x:(d=gT({inputs:{a:x,b:d},backend:t}),m.push(d))}g<h-1&&(c[g]>=0&&(d=nb({inputs:{x:d},backend:t,attrs:{axis:c[g]-(a.length-p),keepDims:!1}}),m.push(d)),p--)}for(const g of m)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const mre={kernelName:e0,backendName:"webgl",kernelFunc:fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gre="return (x >= 0.0) ? x : (exp(x) - 1.0);",yre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,bre=Et({opSnippet:gre,packedOpSnippet:yre}),xre={kernelName:Cu,backendName:"webgl",kernelFunc:bre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vre="return (b >= 1.0) ? a : a * (b + 1.0);",wre=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Sre=n=>{const{inputs:e,backend:t}=n,{dy:s,y:i}=e,r=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rf(wre,s.shape,i.shape):new qc(vre,s.shape,i.shape);return t.runWebGLProgram(r,[s,i],s.dtype)},_re={kernelName:t0,backendName:"webgl",kernelFunc:Sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tre=`
  return vec4(equal(a, b));
`,Ire="return float(a == b);",Cre=ts({opSnippet:Ire,packedOpSnippet:Tre,dtype:"bool",cpuKernelImpl:hte}),Mre={kernelName:lp,backendName:"webgl",kernelFunc:Cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ere=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${mS};
  float a1 = ${gS};
  float a2 = ${yS};
  float a3 = ${bS};
  float a4 = ${xS};
  float a5 = ${vS};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,kre=Et({opSnippet:Ere}),Nre={kernelName:Mu,backendName:"webgl",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rre=Rh+`
  return exp(x);
`,Are=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yL=Et({opSnippet:Rre,packedOpSnippet:Are,cpuKernelImpl:dte,dtype:"float32"}),Lre={kernelName:Eu,backendName:"webgl",kernelFunc:yL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1(n){const{inputs:e,attrs:t,backend:s}=n,{dim:i}=t,{input:r}=e,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(E(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),ke({inputs:{x:r},backend:s,attrs:{shape:o}})}const Pre={kernelName:cp,backendName:"webgl",kernelFunc:X1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QC="return exp(x) - 1.0;",Dre=Et({opSnippet:QC,packedOpSnippet:QC,cpuKernelImpl:pte}),Fre={kernelName:ku,backendName:"webgl",kernelFunc:Dre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let JC=class{constructor(e,t,s){this.variableNames=["real","imag"];const i=t[1];this.outputShape=t;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${i}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,e,t){const s=t.texData.get(n.dataId),i=oe(n.shape),r=n.shape[n.shape.length-1],a=i/r,o=ke({inputs:{x:n},backend:t,attrs:{shape:[a,r]}}),l=o.shape,c=new JC("real",l,e),u=new JC("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),m=_o({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const g=ke({inputs:{x:m},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(m),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ore(n){const{inputs:e,backend:t}=n,{input:s}=e;return bL(s,!1,t)}const zre={kernelName:n0,backendName:"webgl",kernelFunc:Ore};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gre{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n){const{backend:e,attrs:t}=n,{shape:s,value:i}=t;let{dtype:r}=t;if(r=r||du(i),r==="string"){const a=pn(r,oe(s));return a.fill(i),e.makeTensorInfo(s,r,a)}else{const a=new Gre(s,i),o=[[i]];return e.runWebGLProgram(a,[],r,o)}}const Vre={kernelName:s0,backendName:"webgl",kernelFunc:Lf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wre{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $re={kernelName:i0,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,i=new Wre(t.shape);return s.runWebGLProgram(i,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC="return floor(x);",Ure=Et({opSnippet:qC,packedOpSnippet:qC,cpuKernelImpl:fte}),Bre={kernelName:Nu,backendName:"webgl",kernelFunc:Ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xre=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Hre=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Zre=ts({opSnippet:Xre,packedOpSnippet:Hre,dtype:"int32"}),Kre={kernelName:Ru,backendName:"webgl",kernelFunc:Zre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yre{constructor(e){this.variableNames=["A"];const t=Ss(),[s,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jre{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Ss(),[s,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qre={kernelName:Xm,backendName:"webgl",kernelFunc:Jre};let hc,Sx=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Jre(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:i}=e;const{numChannels:r}=s,a=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,c]=a?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[c,l],h=[c,l,r];if(o||a){const g=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(hc==null||g!==Sx)&&(Sx=g,hc=document.createElement("canvas").getContext("2d",{willReadFrequently:Sx})),hc.canvas.width=l,hc.canvas.height=c,hc.drawImage(i,0,0,l,c),i=hc.canvas}const d=t.makeTensorInfo(u,"int32");t.texData.get(d.dataId).usage=pi.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),i);const p=q().getBool("WEBGL_PACK")?new jre(h):new Yre(h),m=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qre(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=s,g=Ia(u),f=$n(i.shape,r.shape,l,h,c,d,!1,g);let y;const b=[],x=a!=null,v=o!=null,w=p==="leakyrelu",_=()=>{const C=[i,r],S=(M,A)=>{if(A==="NCHW"&&M.shape.length===1&&M.shape[0]!==1){const P=ke({inputs:{x:M},backend:t,attrs:{shape:[M.shape[0],1,1]}});return b.push(P),P}return M};if(x&&C.push(S(a,u)),v&&C.push(S(o,u)),w){const M=t.makeTensorInfo([],"float32",_a(m,"float32"));C.push(M),b.push(M)}return C};if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))y=dL({x:i,filter:r,convInfo:f,backend:t,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:m});else if(f.strideWidth<=2&&g==="channelsLast"&&q().getBool("WEBGL_EXP_CONV")){const C=p?kd(p,!0):null,S=new hL(f,x,C,v,w),M=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]],A=_();y=t.runWebGLProgram(S,A,"float32",M)}else if(q().getBool("WEBGL_CONV_IM2COL"))y=pL({x:i,filter:r,convInfo:f,backend:t,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:m});else{const C=p?kd(p,!1):null,S=new uL(f,x,C,v,w),M=_();y=t.runWebGLProgram(S,M,"float32")}const T=ke({inputs:{x:y},backend:t,attrs:{shape:f.outShape}});return b.push(y),b.forEach(C=>t.disposeIntermediateTensorInfo(C)),T}const eae={kernelName:md,backendName:"webgl",kernelFunc:qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tae(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,m=[];let g=u;g==null&&(g=[1,1]),E(qn(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const f=$n(i.shape,r.shape,l,g,c,h,!0),y=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels===1,b=d?kd(d,y):null,x=[i,r],v=a!=null,w=o!=null,_=d==="leakyrelu";if(v&&x.push(a),w&&x.push(o),_){const M=t.makeTensorInfo([],"float32",_a(p,"float32"));x.push(M),m.push(M)}let T;y?T=new gL(f,v,b,w,_):T=new mL(f,v,b,w,_);const C=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]],S=t.runWebGLProgram(T,x,"float32",C);return m.forEach(M=>t.disposeIntermediateTensorInfo(M)),S}const nae={kernelName:gd,backendName:"webgl",kernelFunc:tae};class sae{constructor(e,t,s,i){this.sliceDim=e,this.strides=t,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=s;const r=Bt(s.length);let a=`
    int index;`;for(let o=0;o<this.sliceDim;o++)a+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iae(n){const{inputs:e,backend:t}=n,{params:s,indices:i}=e,r=i.shape,a=r[r.length-1],o=oe(s.shape),[l,c,u,h]=Ty(s,i),d=ke({inputs:{x:i},backend:t,attrs:{shape:[c,a]}}),p=ke({inputs:{x:s},backend:t,attrs:{shape:[oe(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,i])||s.dtype==="string"){const y=t.readSync(i.dataId),b=t.bufferSync(s),x=mte(y,b,s.dtype,c,a,u,h,s.shape,o);return t.makeTensorInfo(l,s.dtype,x.values)}const m=new sae(a,h,[c,u],s.shape),g=t.runWebGLProgram(m,[p,d],p.dtype),f=ke({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),f}const rae={kernelName:r0,backendName:"webgl",kernelFunc:iae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aae{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Bt(this.rank),i=oae(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function oae(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let i=0;i<n.length;i++)i===2?s.push("index"):s.push(`${t[i]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,indices:r}=e,{axis:a,batchDims:o}=s,l=ft(a,i.shape)[0];if(q().get("DEBUG")){const b=t.readSync(r.dataId),x=i.shape[l];for(let v=0;v<b.length;++v){const w=b[v];E(w<=x-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${x-1}]`)}}const c=ES(i,r,l,o),u=oe(r.shape),h=[],d=ke({inputs:{x:i},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=ke({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(p);const m=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const b=t.bufferSync(p),x=t.bufferSync(d),v=gte(x,b,m);return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(c.outputShape,v.dtype,v.values)}const g=new aae(d.shape,m),f=t.runWebGLProgram(g,[d,p],d.dtype);h.push(f);const y=ke({inputs:{x:f},backend:t,attrs:{shape:c.outputShape}});return h.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const lae={kernelName:hp,backendName:"webgl",kernelFunc:xL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cae="return float(a > b);",uae=`
  return vec4(greaterThan(a, b));
`,hae=ts({opSnippet:cae,packedOpSnippet:uae,cpuKernelImpl:yte,dtype:"bool"}),dae={kernelName:dp,backendName:"webgl",kernelFunc:hae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pae="return float(a >= b);",fae=`
  return vec4(greaterThanEqual(a, b));
`,mae=ts({opSnippet:pae,packedOpSnippet:fae,dtype:"bool",cpuKernelImpl:bte}),gae={kernelName:Au,backendName:"webgl",kernelFunc:mae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yae(n){const{inputs:e,backend:t}=n,{input:s}=e;return bL(s,!0,t)}const bae={kernelName:a0,backendName:"webgl",kernelFunc:yae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xae="return float(!isnan(x) && !isinf(x));",vae=Et({opSnippet:xae,dtype:"bool"}),wae={kernelName:Pu,backendName:"webgl",kernelFunc:vae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sae="return float(isinf(x));",_ae=Et({opSnippet:Sae,dtype:"bool"}),Tae={kernelName:Du,backendName:"webgl",kernelFunc:_ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iae="return float(isnan(x));",Cae=Et({opSnippet:Iae,dtype:"bool"}),Mae={kernelName:Fu,backendName:"webgl",kernelFunc:Cae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eae="return float(a < b);",kae=`
  return vec4(lessThan(a, b));
`,Nae=ts({opSnippet:Eae,packedOpSnippet:kae,cpuKernelImpl:xte,dtype:"bool"}),Rae={kernelName:fp,backendName:"webgl",kernelFunc:Nae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aae="return float(a <= b);",Lae=`
  return vec4(lessThanEqual(a, b));
`,Pae=ts({opSnippet:Aae,packedOpSnippet:Lae,cpuKernelImpl:vte,dtype:"bool"}),Dae={kernelName:mp,backendName:"webgl",kernelFunc:Pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fae(n){const{backend:e,attrs:t}=n,{start:s,stop:i,num:r}=t,a=wte(s,i,r);return e.makeTensorInfo([a.length],"float32",a)}const Oae={kernelName:l0,backendName:"webgl",kernelFunc:Fae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zae=Rh+`
  return x < 0.0 ? 0./0. : log(x);
`,Gae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Vae=Et({opSnippet:zae,packedOpSnippet:Gae,cpuKernelImpl:Ste}),Wae={kernelName:Ou,backendName:"webgl",kernelFunc:Vae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ae=Rh+`
  return log(1.0 + x);
`,Uae=Et({opSnippet:$ae}),Bae={kernelName:zu,backendName:"webgl",kernelFunc:Uae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xae="return float(a >= 1.0 && b >= 1.0);",Hae=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Zae=ts({opSnippet:Xae,packedOpSnippet:Hae,dtype:"bool"}),Kae={kernelName:gp,backendName:"webgl",kernelFunc:Zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yae="return float(!(x >= 1.0));",jae=Et({opSnippet:Yae}),Qae={kernelName:yp,backendName:"webgl",kernelFunc:jae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jae="return float(a >= 1.0 || b >= 1.0);",qae=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,eoe=ts({opSnippet:Jae,packedOpSnippet:qae,dtype:"bool"}),toe={kernelName:bp,backendName:"webgl",kernelFunc:eoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class noe{constructor(e,t,s,i,r){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class soe{constructor(e,t,s,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ioe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{depthRadius:r,bias:a,alpha:o,beta:l}=s,c=q().getBool("WEBGL_PACK_NORMALIZATION")?new soe(i.shape,r,a,o,l):new noe(i.shape,r,a,o,l);return t.runWebGLProgram(c,[i],i.dtype)},roe={kernelName:xp,backendName:"webgl",kernelFunc:ioe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aoe{constructor(e,t,s,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ooe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i,y:r,dy:a}=e,{depthRadius:o,bias:l,alpha:c,beta:u}=s,h=new aoe(i.shape,o,l,c,u);return t.runWebGLProgram(h,[i,r,a],i.dtype)},loe={kernelName:c0,backendName:"webgl",kernelFunc:ooe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function coe(n,e,t,s){const i=oe(e),r=oe(n.shape)/i,a=ke({inputs:{x:n},attrs:{shape:[r,i]},backend:s}),o=Hl(a,n.dtype,"max",s),l=ke({inputs:{x:o},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(o),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reductionIndices:r,keepDims:a}=s,o=i.shape.length,l=ft(r,i.shape);let c=l;const u=an(c,o),h=u!=null,d=t.shouldExecuteOnCPU([i]);let p=i;if(h){if(d){const b=t.texData.get(p.dataId).values,x=new Array(o);for(let _=0;_<x.length;_++)x[_]=i.shape[u[_]];const v=fT(b,i.shape,i.dtype,u,x);p=t.makeTensorInfo(x,i.dtype);const w=t.texData.get(p.dataId);w.values=v}else p=tb(i,u,t);c=yn(c.length,o)}es("max",c,o);const[m,g]=Un(p.shape,c);let f=m;a&&(f=gn(m,l));let y;if(d){const b=t.texData.get(p.dataId).values,x=_te(b,oe(g),f,i.dtype);y=t.makeTensorInfo(f,i.dtype);const v=t.texData.get(y.dataId);v.values=x}else y=coe(p,g,f,t);return h&&t.disposeIntermediateTensorInfo(p),y}const uoe={kernelName:vp,backendName:"webgl",kernelFunc:vL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hoe=mT+`
  return max(a, b);
`,doe=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Nf+`
  return result;
`,poe=ts({opSnippet:hoe,packedOpSnippet:doe,cpuKernelImpl:Tte}),foe={kernelName:Gu,backendName:"webgl",kernelFunc:poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moe(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;Ef(i,"maxPool");const{filterSize:r,strides:a,pad:o,dimRoundingMode:l}=s,c=1;E(qn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ui(i.shape,r,a,c,o,l);if(u.filterWidth===1&&u.filterHeight===1&&vt(u.inShape,u.outShape))return ni({inputs:{x:i},backend:t});const h=new Nd(u,"max",!1);return t.runWebGLProgram(h,[i],i.dtype)}const goe={kernelName:wp,backendName:"webgl",kernelFunc:moe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:a,pad:o,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=Ta(i.shape,r,a,u,o,c,l),d=new yT(h,"max",!1);return t.runWebGLProgram(d,[i],i.dtype)}const boe={kernelName:Sp,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xoe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,l=a-1-e.padInfo.left,c=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class voe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,i=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=c-1-e.padInfo.top,p=u-1-e.padInfo.left,m=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function woe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,a=r,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Ta(a.shape,o,l,h,c,u),p=new yT(d,"max",!0),m=t.runWebGLProgram(p,[a],a.dtype),g=new voe(d),f=t.runWebGLProgram(g,[i,m],a.dtype);return t.disposeIntermediateTensorInfo(m),f}const Soe={kernelName:h0,backendName:"webgl",kernelFunc:woe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _oe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r,output:a}=e,o=r;Ef([r,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Ui(o.shape,l,c,1,u,h),p=!0,m=new Nd(d,"max",p),g=t.runWebGLProgram(m,[o],o.dtype),f=new xoe(d),y=t.runWebGLProgram(f,[i,g],o.dtype);return t.disposeIntermediateTensorInfo(g),y}const Toe={kernelName:u0,backendName:"webgl",kernelFunc:_oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ioe(n,e,t,s){let i=new Nd(t,"max",!1);const r=s.runWebGLProgram(i,[n],"float32");i=new Nd(t,"max",!0,!0,e);const a=s.runWebGLProgram(i,[n],"float32");return[r,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Coe={kernelName:d0,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:i,strides:r,pad:a,includeBatchInIndex:o}=e,l=t;E(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];E(qn(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=Ui(s.shape,i,r,c,a),[h,d]=Ioe(s,o,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Moe(n,e,t,s){const i=oe(e),r=oe(n.shape)/i,a=ke({inputs:{x:n},attrs:{shape:[r,i]},backend:s}),o=Hl(a,"float32","mean",s),l=ke({inputs:{x:o},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(o),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eoe={kernelName:_p,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:i,axis:r}=e,a=t,o=s.shape.length,l=ft(r,s.shape);let c=l;const u=an(c,o),h=u!=null,d=a.shouldExecuteOnCPU([s]),p=[];let m=s;if(h){if(d){const x=a.texData.get(m.dataId).values,v=new Array(o);for(let T=0;T<v.length;T++)v[T]=s.shape[u[T]];const w=fT(x,s.shape,s.dtype,u,v);m=a.makeTensorInfo(v,s.dtype);const _=a.texData.get(m.dataId);_.values=w}else m=tb(s,u,a);p.push(m),c=yn(c.length,o)}es("sum",c,o);const[g,f]=Un(m.shape,c);let y=g;i&&(y=gn(g,l));const b=Moe(m,f,y,a);for(const x of p)a.disposeIntermediateTensorInfo(x);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function koe(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s,o=i.shape.length,l=ft(r,i.shape);let c=l;const u=an(c,o);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:t,attrs:{perm:u}}),c=yn(c.length,i.shape.length)),es("min",c,o);const[d,p]=Un(h.shape,c),m=oe(p),g=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),f=Hl(g,g.dtype,"min",t);let y;if(a){const b=gn(d,l);y=ke({inputs:{x:f},backend:t,attrs:{shape:b}})}else y=ke({inputs:{x:f},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),u!=null&&t.disposeIntermediateTensorInfo(h),y}const Noe={kernelName:Tp,backendName:"webgl",kernelFunc:koe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Roe=mT+`
  return min(a, b);
`,Aoe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Nf+`
  return result;
`,Loe=ts({opSnippet:Roe,packedOpSnippet:Aoe,cpuKernelImpl:Ite}),Poe={kernelName:Vu,backendName:"webgl",kernelFunc:Loe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Doe{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const i=e.length,r=Bt(i),a=t.map(u=>u[0]).join(","),o=t.map((u,h)=>u[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),c=s==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Foe{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const i=e.length,r=Bt(i),a=t.map(m=>m[0]).join(","),o=t.map((m,g)=>m[0]+e[g]).join(","),l=ps("rc",i),c=ps("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(i===1){const m=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const m=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${m}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[i-1]} += 1;
          if(${u}) {
            ${m}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ooe=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:i,mode:r}=t,a=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Foe(s.shape,i,r):new Doe(s.shape,i,r);return e.runWebGLProgram(a,[s],s.dtype)},zoe={kernelName:Ip,backendName:"webgl",kernelFunc:Ooe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Goe=`if (b == 0.0) return NAN;
  return mod(a, b);`,Voe=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Nf+`
  return result;
`,Woe=ts({opSnippet:Goe,packedOpSnippet:Voe}),$oe={kernelName:Wu,backendName:"webgl",kernelFunc:Woe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uoe{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Boe=`
if (a == b) {
  return 1.0;
};
return a / b;`,Xoe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,wL=ts({opSnippet:Boe,packedOpSnippet:Xoe,checkOutOfBounds:!0}),Hoe={kernelName:Iu,backendName:"webgl",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eM="return a - b;",SL=ts({opSnippet:eM,packedOpSnippet:eM,supportsComplex:!0,cpuKernelImpl:Xte}),Zoe={kernelName:sh,backendName:"webgl",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{dim:r}=s,a=ft([r],i.shape),o=vL({inputs:{x:i},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=gn(o.shape,a),c=ke({inputs:{x:o},backend:t,attrs:{shape:l}}),u=SL({inputs:{a:i,b:c},backend:t}),h=yL({inputs:{x:u},backend:t}),d=nb({inputs:{x:h},backend:t,attrs:{axis:a,keepDims:!1}}),p=ke({inputs:{x:d},backend:t,attrs:{shape:l}}),m=wL({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),m}const Koe={kernelName:Up,backendName:"webgl",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yoe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{numSamples:r,seed:a,normalized:o}=s,l=o?i:_L({inputs:{logits:i},backend:t,attrs:{dim:i.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new Uoe(c,u,r),d=[[a]],p=t.runWebGLProgram(h,[l],"int32",d);return o||t.disposeIntermediateTensorInfo(l),p}const joe={kernelName:p0,backendName:"webgl",kernelFunc:Yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qoe=Xi+`
  return -x;
`,Joe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function qoe(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const r=t.texData.get(s.dataId),[a,o]=Mte(r.values,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,a)}let i;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Ba(s.shape,Joe):i=new Mr(s.shape,Qoe),t.runWebGLProgram(i,[s],s.dtype)}const ele={kernelName:Cp,backendName:"webgl",kernelFunc:qoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tle=vy;function nle(n){ui("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,c=t.readSync(i.dataId),u=t.readSync(r.dataId),{selectedIndices:h}=tle(c,u,a,o,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const sle={kernelName:f0,backendName:"webgl",kernelFunc:nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ile=wy;function rle(n){ui("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=s,u=t.readSync(i.dataId),h=t.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=ile(u,h,a,o,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const ale={kernelName:m0,backendName:"webgl",kernelFunc:rle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ole=Sy;function lle(n){ui("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=s,u=t.readSync(i.dataId),h=t.readSync(r.dataId),d=a,p=o,m=l,g=c,{selectedIndices:f,selectedScores:y}=ole(u,h,d,p,m,g);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const cle={kernelName:g0,backendName:"webgl",kernelFunc:lle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ule{constructor(e,t,s,i){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hle=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:i}=e,{dtype:r,depth:a,onValue:o,offValue:l}=s,c=oe(i.shape),u=new ule(c,a,o,l),h=ke({inputs:{x:i},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(u,[h],r);t.disposeIntermediateTensorInfo(h);const p=[...i.shape,a],m=ke({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),m},dle={kernelName:kp,backendName:"webgl",kernelFunc:hle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mg(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const i=Af({inputs:{input:s},backend:t}),r=mg({inputs:{x:i},backend:t}),a=sb({inputs:{input:s},backend:t}),o=mg({inputs:{x:a},backend:t}),l=_o({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return Lf({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const ple={kernelName:Hp,backendName:"webgl",kernelFunc:mg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const i=Af({inputs:{input:s},backend:t}),r=TL({inputs:{x:i},backend:t}),a=sb({inputs:{input:s},backend:t}),o=mg({inputs:{x:a},backend:t}),l=_o({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return Lf({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const fle={kernelName:Ep,backendName:"webgl",kernelFunc:TL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mle(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s;if(e.length===1)return X1({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const r=e[0].shape,a=e[0].dtype;e.forEach(u=>{Jn(r,u.shape,"All tensors passed to stack must have matching shapes"),E(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(u=>{const h=X1({inputs:{input:u},backend:t,attrs:{dim:i}});return o.push(h),h}),c=cL({inputs:l,backend:t,attrs:{axis:i}});return o.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const gle={kernelName:Np,backendName:"webgl",kernelFunc:mle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yle{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);const i=e.length,r=Bt(i),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ble{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,f)=>g[0]+e[f]+g[1]);const i=e.length,r=Bt(i),a=t.map(g=>g[0]).join(","),o=t.map((g,f)=>g[0]+e[f]).join(","),l=ps("rc",i),c=ps("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${u}) {`],p=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let g=0,f=i===1?2:4;g<f;g++)m+=`
        ${d[g]}
        if (${p}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${h});
        }
      `;m+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{paddings:r,constantValue:a}=s;if(oe(i.shape)===0){const c=r.map((u,h)=>u[0]+i.shape[h]+u[1]);return Lf({backend:t,attrs:{shape:c,value:a,dtype:i.dtype}})}const o=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ble(i.shape,r,a):new yle(i.shape,r,a),l=[[a]];return t.runWebGLProgram(o,[i],i.dtype,l)},xle={kernelName:Rp,backendName:"webgl",kernelFunc:IL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vle=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,wle=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Nf+`
  return result;
`,Sle=ts({opSnippet:vle,packedOpSnippet:wle}),_le={kernelName:Uu,backendName:"webgl",kernelFunc:Sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tle(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:a}=s,o=i.shape.length,l=[],c=ft(r,i.shape);let u=c;const h=an(u,o);let d=i;h!=null&&(d=xs({inputs:{x:i},backend:t,attrs:{perm:h}}),u=yn(u.length,o),l.push(d)),es("prod",u,o);let p;if(t.shouldExecuteOnCPU([d])){const m=t.texData.get(d.dataId).values,{outVals:g,outShape:f,outDtype:y}=kte(d.shape,d.dtype,m,u);p=t.makeTensorInfo(f,y,g)}else{const[m,g]=Un(d.shape,u),f=oe(g),y=ke({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),b=V0(i.dtype),x=Hl(y,b,"prod",t);p=ke({inputs:{x},backend:t,attrs:{shape:m}}),l.push(y),l.push(x)}if(a){l.push(p);const m=gn(p.shape,c);p=ke({inputs:{x:p},backend:t,attrs:{shape:m}})}return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}const Ile={kernelName:Lp,backendName:"webgl",kernelFunc:Tle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cle(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:i,paramsDenseValues:r,indices:a}=e,{outputRaggedRank:o}=s,l=i.map(y=>t.readSync(y.dataId)),c=i.map(y=>y.shape),u=t.readSync(r.dataId),h=t.readSync(a.dataId),[d,p,m]=Nte(l,c,u,r.shape,r.dtype,h,a.shape,o),g=d.map(y=>t.makeTensorInfo([y.length],"int32",y)),f=t.makeTensorInfo(m,r.dtype,p);return g.concat([f])}const Mle={kernelName:y0,backendName:"webgl",kernelFunc:Cle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ele(n){const{inputs:e,backend:t}=n,{starts:s,limits:i,deltas:r}=e,a=t.readSync(s.dataId),o=t.readSync(i.dataId),l=t.readSync(r.dataId),[c,u]=Rte(a,s.shape,s.dtype,o,i.shape,l,r.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const kle={kernelName:b0,backendName:"webgl",kernelFunc:Ele};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nle(n){const{inputs:e,backend:t,attrs:s}=n,{shape:i,values:r,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,c=t.readSync(i.dataId),u=t.readSync(r.dataId),h=t.readSync(a.dataId),d=o.map(f=>t.readSync(f.dataId)),p=o.map(f=>f.shape),[m,g]=Ate(c,i.shape,u,r.shape,r.dtype,h,a.shape,d,p,l);return t.makeTensorInfo(m,r.dtype,g)}const Rle={kernelName:x0,backendName:"webgl",kernelFunc:Nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CL=n=>{const{backend:e,attrs:t}=n,{start:s,stop:i,step:r,dtype:a}=t,o=Lte(s,i,r,a);return e.makeTensorInfo([o.length],a,o)},Ale={kernelName:v0,backendName:"webgl",kernelFunc:CL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lle="return 1.0 / x;",Ple=Et({opSnippet:Lle}),Dle={kernelName:Bu,backendName:"webgl",kernelFunc:Ple};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fle=Xi+`
  return (x < 0.0) ? 0.0 : x;
`,Ole=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zle=Et({opSnippet:Fle,packedOpSnippet:Ole}),Gle={kernelName:Xu,backendName:"webgl",kernelFunc:zle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vle=Xi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Wle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$le=Et({opSnippet:Vle,packedOpSnippet:Wle}),Ule={kernelName:Hu,backendName:"webgl",kernelFunc:$le};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ble{constructor(e,t,s,i,r){this.variableNames=["A"],this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const u=[i&&t>1?o-1:o,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xle{constructor(e,t,s,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const u=[i&&t>1?o-1:o,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hle(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:a,size:o}=s,[l,c]=o,u=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Xle(i.shape,l,c,r,a):new Ble(i.shape,l,c,r,a);return t.runWebGLProgram(u,[i],"float32")}const Zle={kernelName:Fp,backendName:"webgl",kernelFunc:Hle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kle{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,r]=t,[,a,o]=e,l=[s&&a>1?i-1:i,s&&o>1?r-1:r],c=[s&&a>1?a-1:a,s&&o>1?o-1:o],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,m=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yle(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:a}=s,o=new Kle(r.shape,i.shape,a);return t.runWebGLProgram(o,[r],r.dtype)}const jle={kernelName:_0,backendName:"webgl",kernelFunc:Yle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qle{constructor(e,t,s,i,r){this.variableNames=["A"],this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const u=[i&&t>1?o-1:o,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s],d=i?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jle{constructor(e,t,s,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const u=[i&&t>1?o-1:o,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s],d=i?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qle(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:a,size:o}=s,[l,c]=o,u=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Jle(i.shape,l,c,r,a):new Qle(i.shape,l,c,r,a);return t.runWebGLProgram(u,[i],i.dtype)}const ece={kernelName:Dp,backendName:"webgl",kernelFunc:qle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tce{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,r]=t,[,a,o]=e,l=[s&&a>1?i-1:i,s&&o>1?r-1:r],c=[s&&a>1?a-1:a,s&&o>1?o-1:o],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,m=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nce(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:a}=s,o=new tce(r.shape,i.shape,a);return t.runWebGLProgram(o,[r],r.dtype)}const sce={kernelName:S0,backendName:"webgl",kernelFunc:nce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ice{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const i=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,l)=>i(l)).join(","),a=Bt(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rce{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const i=ps("rc",s),r=`${i[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${i[s-2]} + 1 < ${this.outputShape[s-2]}`,o=Bt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${c(i.slice())};
          }
          if(${a}) {
            result.b = ${u(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(m){return d(m)}function c(m){return m[s-1]="("+m[s-1]+" + 1)",d(m)}function u(m){return m[s-2]="("+m[s-2]+" + 1)",d(m)}function h(m){return m[s-1]="("+m[s-1]+" + 1)",m[s-2]="("+m[s-2]+" + 1)",d(m)}function d(m){const g=e.map((b,x)=>p(x,m)),f=g.join(","),y=g.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${y}))`}function p(m,g){return t.indexOf(m)!==-1&&e[m]!==1?`${e[m]} - ${g[m]} - 1`:`${g[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ace(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dims:r}=s,a=i.shape.length,o=ft(r,i.shape);if(a===0)return ni({inputs:{x:i},backend:t});const l=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rce(i.shape,o):new ice(i.shape,o);return t.runWebGLProgram(l,[i],i.dtype)}const oce={kernelName:Op,backendName:"webgl",kernelFunc:ace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lce{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],i=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cce={kernelName:G0,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:i,fillValue:r,center:a}=e,o=t,l=new lce(s.shape,r),[c,u]=dS(a,s.shape[1],s.shape[2]),h=[[c,u,Math.sin(i),Math.cos(i)]];return o.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uce=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,hce=Et({opSnippet:uce}),dce={kernelName:Zu,backendName:"webgl",kernelFunc:hce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pce="return inversesqrt(x);",fce=Et({opSnippet:pce,cpuKernelImpl:Pte}),mce={kernelName:Ku,backendName:"webgl",kernelFunc:fce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ML{constructor(e,t,s,i,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=Bt(r.length),c=Bt(a.length);let u="";s===1?u="i":s===2&&(u="i, j");const h=`getIndices(${u})`;let d="";i===1?d="i":i===2&&(d="i, coords[1]");const p=`getUpdates(${d})`,m=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gce(n){const{inputs:e,backend:t,attrs:s}=n,{indices:i,updates:r}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=yh(r,i,a),d=[h/c,c];if(h===0)return t.makeTensorInfo(a,i.dtype);const p=ke({inputs:{x:i},backend:t,attrs:{shape:[l,o]}}),m=ke({inputs:{x:r},backend:t,attrs:{shape:[l,c]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0])),f=new ML(l,o,p.shape.length,m.shape.length,u,d),y=t.runWebGLProgram(f,[m,p,g],m.dtype),b=ke({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),b}const yce={kernelName:T0,backendName:"webgl",kernelFunc:gce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bce{constructor(e,t,s,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=q().getNumber("WEBGL_VERSION")===2?r:a,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xce(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:i,values:r}=e,{side:a}=s,o=new bce(i.shape[0],i.shape[1],r.shape[1],a),l=[[i.shape[1]]];return t.runWebGLProgram(o,[i,r],"int32",l)}const vce={kernelName:I0,backendName:"webgl",kernelFunc:xce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wce{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let i,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",i="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<t.length;u++)c.push(`${o[u]}`),u<e&&l.push(`${o[u]}`);i=l.join(),r=c.join()}const a=Bt(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sce(n){const{inputs:e,backend:t}=n,{condition:s,t:i,e:r}=e,a=new wce(s.shape.length,i.shape,i.shape.length);return t.runWebGLProgram(a,[s,i,r],As(i.dtype,r.dtype))}const _ce={kernelName:zp,backendName:"webgl",kernelFunc:Sce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tce=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${My};
  float scale = ${Ey};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Ice=Et({opSnippet:Tce}),Cce={kernelName:Yu,backendName:"webgl",kernelFunc:Ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mce=Rh+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Ece=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kce=Et({opSnippet:Mce,packedOpSnippet:Ece,cpuKernelImpl:Fte}),Nce={kernelName:qu,backendName:"webgl",kernelFunc:kce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rce=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Ace=Et({opSnippet:Rce}),Lce={kernelName:Ju,backendName:"webgl",kernelFunc:Ace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pce=Rh+`
  return sin(x);
`,Dce=Et({opSnippet:Pce}),Fce={kernelName:ju,backendName:"webgl",kernelFunc:Dce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oce=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,zce=Et({opSnippet:Oce}),Gce={kernelName:Qu,backendName:"webgl",kernelFunc:zce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vce=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Wce=Et({opSnippet:Vce}),$ce={kernelName:eh,backendName:"webgl",kernelFunc:Wce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uce=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,paddings:a}=s;E(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((y,b)=>y*b),l=[[0,0]];l.push(...a);for(let y=1+r.length;y<i.shape.length;++y)l.push([0,0]);const c=[],u=IL({inputs:{x:i},backend:t,attrs:{paddings:l,constantValue:0}}),h=ff(u.shape,r,o,!1),d=mf(h.length,r.length,!1),p=gf(u.shape,r,o,!1),m=ke({inputs:{x:u},backend:t,attrs:{shape:h}}),g=xs({inputs:{x:m},backend:t,attrs:{perm:d}}),f=ke({inputs:{x:g},backend:t,attrs:{shape:p}});return c.push(u),c.push(m),c.push(g),c.forEach(y=>t.disposeIntermediateTensorInfo(y)),f},Bce={kernelName:Wp,backendName:"webgl",kernelFunc:Uce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xce(n){const{inputs:e,backend:t}=n,{indices:s,values:i,denseShape:r,defaultValue:a}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.readSync(s.dataId),l=t.readSync(i.dataId),c=t.readSync(r.dataId),u=t.readSync(a.dataId)[0],[h,d,p,m,g]=zte(o,s.shape,s.dtype,l,i.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],i.dtype,p),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(f=>Number(f)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const Hce={kernelName:C0,backendName:"webgl",kernelFunc:Xce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zce(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:i,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const a=Array.from(t.readSync(i.dataId)),o=t.readSync(s.dataId),l=Array.from(t.readSync(r.dataId)),[c,u,h]=Gte(o,s.shape,s.dtype,a,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const Kce={kernelName:M0,backendName:"webgl",kernelFunc:Zce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yce(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const a=t.readSync(s.dataId),o=t.readSync(i.dataId),l=t.readSync(r.dataId),[c,u]=jA(a,s.shape,s.dtype,o,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const jce={kernelName:E0,backendName:"webgl",kernelFunc:Yce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qce(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const a=t.readSync(s.dataId),o=t.readSync(i.dataId),l=t.readSync(r.dataId),[c,u]=jA(a,s.shape,s.dtype,o,l);return t.makeTensorInfo(u,s.dtype,c)}const Jce={kernelName:k0,backendName:"webgl",kernelFunc:Qce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qce(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:i,sparseValues:r,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=yh(r,i,o),p=!1;if(r.dtype==="string"){const y=t.bufferSync(i),b=t.bufferSync(r),x=da(t.readSync(a.dataId)[0]),v=Dte(y,b,o,d,u,c,l,h,x,p);return t.makeTensorInfo(o,v.dtype,v.values)}const m=new ML(c,l,i.shape.length,r.shape.length,h,[d,1],p),g=t.runWebGLProgram(m,[r,i,a],r.dtype),f=ke({inputs:{x:g},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(g),f}const eue={kernelName:N0,backendName:"webgl",kernelFunc:qce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tue(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{numOrSizeSplits:r,axis:a}=s,o=ft(a,i.shape)[0],l=MS(i,r,o),c=i.shape.length,u=new Array(c).fill(0),h=i.shape.slice();return l.map(d=>{const p=[...h];p[o]=d;const m=Ah({inputs:{x:i},backend:t,attrs:{begin:u,size:p}});return u[o]+=d,m})}const nue={kernelName:$p,backendName:"webgl",kernelFunc:tue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tM="return sqrt(x);",sue=Et({opSnippet:tM,packedOpSnippet:tM,cpuKernelImpl:Vte}),iue={kernelName:th,backendName:"webgl",kernelFunc:sue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rue="return x * x;",aue=Et({opSnippet:rue}),oue={kernelName:R0,backendName:"webgl",kernelFunc:aue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nM="return (a - b) * (a - b);",lue=ts({opSnippet:nM,packedOpSnippet:nM}),cue={kernelName:nh,backendName:"webgl",kernelFunc:lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uue({inputs:n,attrs:e,backend:t}){const{x:s}=n,i=Xi+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new Mr(s.shape,i);return t.runWebGLProgram(r,[s],s.dtype)}const hue={kernelName:oh,backendName:"webgl",kernelFunc:uue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class due{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const i=s.length,r=Bt(s.length),a=Bt(s.length);let o="";if(i===1)o="coords * strides + begin";else{let l=0;o=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pue(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,end:a,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:m,isIdentity:g,sliceDim0:f,isSimpleSlice:y,begin:b,end:x,strides:v}=cS(i.shape,r,a,o,l,c,u,h,d);let w;if(g)w=ke({inputs:{x:i},backend:t,attrs:{shape:m}});else if(f||y){E(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const T=aS(b,x,v),C=Ah({inputs:{x:i},backend:t,attrs:{begin:b,size:T}});w=ke({inputs:{x:C},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(C)}else if(t.shouldExecuteOnCPU([i])){const T=t.readSync(i.dataId),C=ct(i.shape,i.dtype,T),S=Wte(p,C,v,b);w=t.makeTensorInfo(m,i.dtype,S.values)}else{const T=new due(b,v,p);w=t.runWebGLProgram(T,[i],i.dtype)}const _=ke({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(w),_}const fue={kernelName:A0,backendName:"webgl",kernelFunc:pue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mue(n){const{inputs:e,backend:t,attrs:s}=n,{separator:i,nGramWidths:r,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),p=t.readSync(h.dataId),[m,g]=$te(d,p,i,r,a,o,l,c);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(h.shape,"int32",g)]}const gue={kernelName:L0,backendName:"webgl",kernelFunc:mue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yue(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:i}=s,{input:r,delimiter:a}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.readSync(r.dataId),l=t.readSync(a.dataId)[0],[c,u,h]=Ute(o,l,i),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const bue={kernelName:P0,backendName:"webgl",kernelFunc:yue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xue(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:i}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(r.dataId),o=Bte(a,i);return t.makeTensorInfo(r.shape,"int32",o)}const vue={kernelName:D0,backendName:"webgl",kernelFunc:xue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wue="return tan(x);",Sue=Et({opSnippet:wue}),_ue={kernelName:ih,backendName:"webgl",kernelFunc:Sue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tue=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Iue=Et({opSnippet:Tue}),Cue={kernelName:rh,backendName:"webgl",kernelFunc:Iue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mue{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const i=Bt(this.rank),r=Eue(e);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function Eue(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let i=0;i<n.length;i++)s.push(`imod(${t[i]}, ${n[i]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reps:r}=s;if(i.dtype==="string"||i.shape.length>5){const o=t.readSync(i.dataId),l=i.dtype==="string"?o.map(h=>da(h)):o,c=ct(i.shape,i.dtype,l),u=Hte(c,r);return t.makeTensorInfo(u.shape,u.dtype,u.values)}const a=new Mue(i.shape,r);return t.runWebGLProgram(a,[i],i.dtype)}const kue={kernelName:ah,backendName:"webgl",kernelFunc:EL};class Nue{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Rue{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Do(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function sM(n){let e=1;for(;e<n;)e*=2;return e}function Aue(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{k:r,sorted:a}=s,o=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=i.shape,u=c[c.length-1];if(t.shouldExecuteOnCPU([i])||u<o||r>l){const S=t.readSync(i.dataId),[M,A]=Zte(S,c,i.dtype,r,a);return[t.makeTensorInfo(M.shape,M.dtype,M.values),t.makeTensorInfo(A.shape,A.dtype,A.values)]}if(r===0)return c[c.length-1]=0,[t.makeTensorInfo(c,i.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(u===1)return[i,Lf({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(i.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(i):i,m=oe(c)/u,g=ke({inputs:{x:p},attrs:{shape:[m,u]},backend:t});d&&Do(t,p);const f=sM(r),y=sM(u);let b=null;const x=()=>b===null?[g,g]:[g,b],v=(S,M,A)=>{const P=x(),D=new Nue(A),N=[[u],[b===null?1:0],[Number.NEGATIVE_INFINITY],[S],[M]],L=b;b=t.runWebGLProgram(D,P,"int32",N),Do(t,L)};for(let S=1;S<f;S*=2){const M=S*2;for(let A=S;A>=1;A/=2)v(M,A,[m,y])}for(let S=y;S>f;S/=2){const M=x(),A=new Rue([m,S/2]),P=[[u],[b===null?1:0],[f]],D=b;b=t.runWebGLProgram(A,M,"int32",P),Do(t,D);const N=f/2,L=N*2;for(let G=N;G>=1;G/=2)v(L,G,b.shape)}let w=b;b=Ah({inputs:{x:b},backend:t,attrs:{begin:0,size:[m,r]}}),Do(t,w);let _=xL({inputs:{x:g,indices:b},backend:t,attrs:{axis:1,batchDims:1}});Do(t,g);const T=c.slice(0,-1);T.push(r),w=b,b=ke({inputs:{x:b},attrs:{shape:T},backend:t}),Do(t,w);const C=_;return _=ke({inputs:{x:_},attrs:{shape:T},backend:t}),Do(t,C),[_,b]}const Lue={kernelName:F0,backendName:"webgl",kernelFunc:Aue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pue{constructor(e,t,s,i,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o=s==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Due(n){const{inputs:e,backend:t,attrs:s}=n,{image:i,transforms:r}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:c}=s,[u,h,d,p]=i.shape,[m,g]=c??[h,d],f=[u,m,g,p],y=new Pue(h,d,a,o,l,f);return t.runWebGLProgram(y,[i,r],"float32")}const Fue={kernelName:O0,backendName:"webgl",kernelFunc:Due};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oue(n){const{inputs:e,attrs:t,backend:s}=n,{axis:i}=t,{x:r}=e;Ef(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(r.dataId),{outputValues:o,outputShape:l,indices:c}=Kte(a,i,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([c.length],"int32",c)]}const zue={kernelName:z0,backendName:"webgl",kernelFunc:Oue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gue(n){const{inputs:e,backend:t,attrs:s}=n,{value:i}=e;let{axis:r}=s;r<0&&(r+=i.shape.length);const a=i,o=a.shape.length,l=i.shape[r],c=new Array(o-1);let u=0;for(let g=0;g<o;g++)g!==r&&(c[u++]=a.shape[g]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[r]=1;const m=new Array(l);for(let g=0;g<m.length;g++){d[r]=g;const f=Ah({inputs:{x:a},backend:t,attrs:{begin:d,size:p}}),y=ke({inputs:{x:f},backend:t,attrs:{shape:c}});m[g]=y,h.push(f)}return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const Vue={kernelName:Bp,backendName:"webgl",kernelFunc:Gue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wue{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,i=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/s);this.outputShape=[i,o];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let m="";r%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ue(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,segmentIds:r}=e,{numSegments:a}=s,o=i.shape.length,l=[];let c=0;const u=an([c],o);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:t,attrs:{perm:u}}),l.push(h),c=yn(1,o)[0]);const d=dN(h.shape,c,a),p=oe([h.shape[c]]),m=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(m);const g=V0(i.dtype),f=(v,w,_,T,C)=>{const S=v.shape[0],M=v.shape[1],A=hN(M,C),P={windowSize:A,inSize:M,batchSize:S,numSegments:C},D=new Wue(P,w),N=t.compileAndRun(D,[v,_],T);if(l.push(N),N.shape[1]===C)return N;const L=CL({backend:t,attrs:{start:0,stop:C,step:1,dtype:"float32"}}),G=EL({inputs:{x:L},backend:t,attrs:{reps:[M/A]}});return l.push(L),l.push(G),f(N,w,G,T,C)},y=f(m,"unsortedSegmentSum",r,g,a),b=ke({inputs:{x:y},backend:t,attrs:{shape:d}});let x=b;if(u!=null){l.push(b);const v=xo(u);x=xs({inputs:{x},backend:t,attrs:{perm:v}})}return l.forEach(v=>t.disposeIntermediateTensorInfo(v)),x}const Uue={kernelName:Xp,backendName:"webgl",kernelFunc:$ue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bue=[Gne,Wne,Bne,Zne,Yne,Jne,ese,nse,ase,lse,hse,fse,yse,wse,Tse,Cse,Ese,Ase,Pse,Fse,Vse,Zse,Yse,Qse,sie,rie,cie,Sne,die,yie,wie,Mie,kie,Rie,Lie,Die,zie,Wie,Bie,Hie,Kie,jie,qie,tre,rre,ore,ure,pre,mre,xre,_re,Mre,Nre,Lre,Pre,Fre,zre,Vre,$re,Bre,Kre,Qre,eae,nae,rae,lae,dae,gae,wne,bae,mie,wae,Tae,Mae,Tne,Rae,Dae,Oae,Wae,Bae,Kae,Qae,toe,roe,loe,uoe,foe,goe,boe,Soe,Toe,Coe,Eoe,Noe,Poe,zoe,$oe,joe,Mne,ele,sle,ale,cle,qse,dle,fle,gle,xle,_le,Cne,Ile,Mle,kle,Rle,Ale,eie,Hoe,Dle,Gle,Ule,kne,Zle,jle,ece,sce,oce,cce,dce,mce,yce,vce,_ce,Cce,Nce,Lce,Fce,Gce,Xse,Koe,$ce,Bce,Hce,Kce,jce,Jce,eue,nue,iue,oue,cue,hue,fue,gue,bue,vue,Zoe,Fne,_ue,Cue,kue,Lue,Fue,One,zue,Vue,Uue,ple];for(const n of Bue)Fs(n);const kL="",iM=typeof window<"u"&&window.Blob&&new Blob([atob(kL)],{type:"text/javascript;charset=utf-8"});function Xue(){let n;try{if(n=iM&&(window.URL||window.webkitURL).createObjectURL(iM),!n)throw"";return new Worker(n)}catch{return new Worker("data:application/javascript;base64,"+kL)}finally{n&&(window.URL||window.webkitURL).revokeObjectURL(n)}}const Hue=(n,e)=>[[n[0][0]*e[0][0]+n[0][2]*e[2][0],n[0][0]*e[0][1]+n[0][2]*e[2][1],n[0][0]*e[0][2]+n[0][2]*e[2][2],n[0][0]*e[0][3]+n[0][2]*e[2][3]],[n[1][1]*e[1][0]+n[1][2]*e[2][0],n[1][1]*e[1][1]+n[1][2]*e[2][1],n[1][1]*e[1][2]+n[1][2]*e[2][2],n[1][1]*e[1][3]+n[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],Zue=(n,e,t,s)=>{const i=n[0][0]*e+n[0][1]*t+n[0][3],r=n[1][0]*e+n[1][1]*t+n[1][3],a=n[2][0]*e+n[2][1]*t+n[2][3];return{x:i,y:r,z:a}},Kue=(n,e,t,s)=>{const{x:i,y:r,z:a}=Zue(n,e,t);return{x:i/a,y:r/a}},Yue=6,jue=1,Que=10,Jue=1,que=.8,ehe=1,mr=1e3;class the{constructor(e,t,s,i,r,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=s,this.debugMode=a,this.trackingKeyframeList=[];for(let l=0;l<t.length;l++)this.trackingKeyframeList.push(t[l][ehe]);let o=0;for(let l=0;l<this.trackingKeyframeList.length;l++)o=Math.max(o,this.trackingKeyframeList[l].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let l=0;l<this.trackingKeyframeList.length;l++){const{featurePoints:c,imagePixels:u,imageProperties:h}=this._prebuild(this.trackingKeyframeList[l],o);this.featurePointsListT[l]=c,this.imagePixelsListT[l]=u,this.imagePropertiesListT[l]=h}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let s=0;s<this.featurePointsListT.length;s++)this.track(e,t,s)}track(e,t,s){let i={};const r=Hue(this.projectionTransform,t),a=this._buildAdjustedModelViewTransform(r);this.markerDimensions[s][0],this.markerDimensions[s][1],this.trackingKeyframeList[s].width,this.trackingKeyframeList[s].height;const o=this.featurePointsListT[s],l=this.imagePixelsListT[s],c=this.imagePropertiesListT[s],u=this._computeProjection(a,e,s),{matchingPointsT:h,simT:d}=this._computeMatching(o,l,c,u),p=h.arraySync(),m=d.arraySync(),g=this.trackingKeyframeList[s],f=[],y=[],b=[];for(let x=0;x<p.length;x++)if(m[x]>que&&x<g.points.length){b.push(x);const v=Kue(r,p[x][0],p[x][1]);y.push(v),f.push({x:g.points[x].x/g.scale,y:g.points[x].y/g.scale,z:0})}return this.debugMode&&(i={projectedImage:u.arraySync(),matchingPoints:h.arraySync(),goodTrack:b,trackedPoints:y}),a.dispose(),u.dispose(),h.dispose(),d.dispose(),{worldCoords:f,screenCoords:y,debugExtra:i}}_computeMatching(e,t,s,i){const r=Yue,a=r*2+1,o=Que*jue,l=Jue,c=o*2+1,u=i.shape[0],h=i.shape[1],d=e.shape[0];if(!this.kernelCaches.computeMatching){const p={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[d,c*c],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    int featureIndex = coords[0];
	    int searchOffsetIndex = coords[1];

	    int markerWidth = int(getMarkerProperties(0));
	    int markerHeight = int(getMarkerProperties(1));
	    float markerScale = getMarkerProperties(2);

	    int searchOffsetX = imod(searchOffsetIndex, ${c}) * ${l};
	    int searchOffsetY = searchOffsetIndex / ${c} * ${l};

	    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);
	    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);

	    int sx = sCenterX + searchOffsetX - ${o};
	    int sy = sCenterY + searchOffsetY - ${o};

	    if (sx < ${r} || sx >= (${h} - ${r}) || sy < ${r} || sy >= (${u} - ${r})) {
	      setOutput(-2.);
	    } 
	    else {
	      float sumPoint = 0.;
	      float sumPointSquare = 0.;
	      float sumTemplate = 0.;
	      float sumTemplateSquare = 0.;
	      float sumPointTemplate = 0.;

	      for (int templateOffsetY = 0; templateOffsetY < ${a}; templateOffsetY++) {
		for (int templateOffsetX = 0; templateOffsetX < ${a}; templateOffsetX++) {
		  int fx2 = sCenterX + templateOffsetX - ${r};
		  int fy2 = sCenterY + templateOffsetY - ${r};

		  int sx2 = sx + templateOffsetX - ${r};
		  int sy2 = sy + templateOffsetY - ${r};

		  int markerPixelIndex = fy2 * markerWidth + fx2;
		  float markerPixel = getMarkerPixels(markerPixelIndex);
		  float targetPixel = getTargetPixels(sy2, sx2);

		  sumTemplate += markerPixel;
		  sumTemplateSquare += markerPixel * markerPixel;
		  sumPoint += targetPixel;
		  sumPointSquare += targetPixel * targetPixel;
		  sumPointTemplate += targetPixel * markerPixel;
		}
	      }

	      // Normalized cross-correlation
	      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)
	      float count = float(${a} * ${a});
	      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);
	      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);

	      if (pointVariance < 0.0000001) {
		setOutput(-3.);
	      } else if (templateVariance < 0.0000001) {
		//setOutput(sumTemplate);
		setOutput(-4.);
	      } else {
		sumPointTemplate -= sumPoint / count * sumTemplate;
		float sim = sumPointTemplate / pointVariance / templateVariance;  
		setOutput(sim);
	      }
	    }
	  }
	`},m={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[d,2],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    float markerScale = getMarkerProperties(2);

	    int featureIndex = coords[0];

	    int maxIndex = int(getMaxIndex(featureIndex));
	    int searchLocationIndex = maxIndex / ${c*c};
	    int searchOffsetIndex = imod(maxIndex, ${c*c});

	    if (coords[1] == 0) {
	      int searchOffsetX = imod(searchOffsetIndex, ${c}) * ${l};
	      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${o}) / markerScale);
	    }
	    else if (coords[1] == 1) {
	      int searchOffsetY = searchOffsetIndex / ${c} * ${l};
	      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${o}) / markerScale);
	    }
	  }
	`},g={variableNames:["sims","maxIndex"],outputShape:[d],userCode:`
	  void main() {
	    int featureIndex = getOutputCoords();
	    int maxIndex = int(getMaxIndex(featureIndex));
	    setOutput(getSims(featureIndex, maxIndex));
	  }
	`};this.kernelCaches.computeMatching=[p,m,g]}return Q(()=>{const p=this.kernelCaches.computeMatching,m=this._compileAndRun(p[0],[e,t,s,i]),g=m.argMax(1),f=this._compileAndRun(p[1],[e,s,g]),y=this._compileAndRun(p[2],[m,g]);return{matchingPointsT:f,simT:y}})}_computeProjection(e,t,s){const i=this.trackingKeyframeList[s].width,r=this.trackingKeyframeList[s].height,a=this.trackingKeyframeList[s].scale,o=i+"-"+r+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[o]){const l={variableNames:["M","pixel"],outputShape:[r,i],userCode:`
	  void main() {
	      ivec2 coords = getOutputCoords();

	      float m00 = getM(0, 0) * ${mr}.;
	      float m01 = getM(0, 1) * ${mr}.;
	      float m03 = getM(0, 3) * ${mr}.;
	      float m10 = getM(1, 0) * ${mr}.;
	      float m11 = getM(1, 1) * ${mr}.;
	      float m13 = getM(1, 3) * ${mr}.;
	      float m20 = getM(2, 0) * ${mr}.;
	      float m21 = getM(2, 1) * ${mr}.;
	      float m23 = getM(2, 3) * ${mr}.;

	      float y = float(coords[0]) / float(${a});
	      float x = float(coords[1]) / float(${a});
	      float uz = (x * m20) + (y * m21) + m23;
	      float oneOverUz = 1. / uz;

	      float ux = (x * m00) + (y * m01) + m03;
	      float uy = (x * m10) + (y * m11) + m13;

	      ux = floor(ux * oneOverUz + 0.5);
	      uy = floor(uy * oneOverUz + 0.5);
	      setOutput(getPixel(int(uy), int(ux)));
	    }
	`};this.kernelCaches.computeProjection[o]=l}return Q(()=>{const l=this.kernelCaches.computeProjection[o];return this._compileAndRun(l,[e,t])})}_buildAdjustedModelViewTransform(e){return Q(()=>{let t=[];for(let s=0;s<e.length;s++){t.push([]);for(let i=0;i<e[s].length;i++)t[s].push(e[s][i]/mr)}return Jt(t,[3,4])})}_prebuild(e,t){return Q(()=>{const s=e.scale,i=[];for(let o=0;o<t;o++)o<e.points.length?i.push([e.points[o].x/s,e.points[o].y/s]):i.push([-1,-1]);const r=Jt(e.data,[e.width*e.height]),a=Jt([e.width,e.height,e.scale],[3]);return{featurePoints:Jt(i,[i.length,2],"float32"),imagePixels:r,imageProperties:a}})}_compileAndRun(e,t){const s=la().compileAndRun(e,t);return Dt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}const ym=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],Il=[];for(let n=0;n<ym.length;n++){const e=ym[n].sigma;for(let t=0;t<ym[n].points.length;t++){const s=ym[n].points[t];Il.push([e,s[0],s[1]])}}const _x={};function nhe(n){const e=n.shape[1],t=n.shape[0],s="w"+e+"h"+t;if(!_x.hasOwnProperty(s)){const i={variableNames:["p"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0], coords[1]-2);
          sum += getP(coords[0], coords[1]-1) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0], coords[1]+1) * 4.;
          sum += getP(coords[0], coords[1]+2);
          setOutput(sum);
        }
      `},r={variableNames:["p"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0]-2, coords[1]);
          sum += getP(coords[0]-1, coords[1]) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0]+1, coords[1]) * 4.;
          sum += getP(coords[0]+2, coords[1]);
          sum /= 256.;
          setOutput(sum);
        }
      `};_x[s]=[i,r]}return _x[s]}const she=n=>{const e=n.inputs.image,t=n.backend,[s,i]=nhe(e),r=t.runWebGLProgram(s,[e],e.dtype),a=t.runWebGLProgram(i,[r],e.dtype);return t.disposeIntermediateTensorInfo(r),a},ihe={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:she},bm=7,rM=3,rhe=rM*rM,Tx=4,ahe=(Tx+1)*(Tx+1)/Tx,Ix={};function ohe(n){const e=n.shape[1],t=n.shape[0],s="w"+e+"h"+t;if(!Ix.hasOwnProperty(s)){const i={variableNames:["image0","image1","image2"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();
    
          int y = coords[0];
          int x = coords[1];
    
          float value = getImage1(y, x);
    
          // Step 1: find local maxima/minima
          if (value * value < ${rhe}.) {
            setOutput(0.);
            return;
          }
          if (y < ${bm} || y > ${t-1-bm}) {
            setOutput(0.);
            return;
          }
          if (x < ${bm} || x > ${e-1-bm}) {
            setOutput(0.);
            return;
          }
    
          bool isMax = true;
          bool isMin = true;
          for (int dy = -1; dy <= 1; dy++) {
            for (int dx = -1; dx <= 1; dx++) {
              float value0 = getImage0(y+dy, x+dx);
              float value1 = getImage1(y+dy, x+dx);
              float value2 = getImage2(y+dy, x+dx);
    
        if (value < value0 || value < value1 || value < value2) {
          isMax = false;
        }
        if (value > value0 || value > value1 || value > value2) {
          isMin = false;
        }
            }
          }
    
          if (!isMax && !isMin) {
            setOutput(0.);
            return;
          }
    
          // compute edge score and reject based on threshold
          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);
          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);
          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));
    
          float det = (dxx * dyy) - (dxy * dxy);
    
          if (abs(det) < 0.0001) { // determinant undefined. no solution
            setOutput(0.);
            return;
          }
    
          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;
    
          if (abs(edgeScore) >= ${ahe} ) {
            setOutput(0.);
            return;
          }
          setOutput(getImage1(y,x));
        }
      `};Ix[s]=i}return Ix[s]}const lhe=n=>{let{image0:e,image1:t,image2:s}=n.inputs;const i=n.backend,r=ohe(t);return e=Dt().runKernel("DownsampleBilinear",{image:e}),s=Dt().runKernel("UpsampleBilinear",{image:s,targetImage:t}),i.runWebGLProgram(r,[e,t,s],t.dtype)},che={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:lhe},Uh=36,Cx={};function uhe(n){const e=n.shape[0];if(!Cx.hasOwnProperty(e)){const t={variableNames:["histogram"],outputShape:[n.shape[0]],userCode:`
            void main() {
                int featureIndex = getOutputCoords();

                int maxIndex = 0;
                for (int i = 1; i < ${Uh}; i++) {
                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {
                        maxIndex = i;
                    }
                }

                int prev = imod(maxIndex - 1 + ${Uh}, ${Uh});
                int next = imod(maxIndex + 1, ${Uh});

                /**
                 * Fit a quatratic to 3 points. The system of equations is:
                 *
                 * y0 = A*x0^2 + B*x0 + C
                 * y1 = A*x1^2 + B*x1 + C
                 * y2 = A*x2^2 + B*x2 + C
                 *
                 * This system of equations is solved for A,B,C.
                 */
                float p10 = float(maxIndex - 1);
                float p11 = getHistogram(featureIndex, prev); 
                float p20 = float(maxIndex);
                float p21 = getHistogram(featureIndex, maxIndex); 
                float p30 = float(maxIndex + 1);
                float p31 = getHistogram(featureIndex, next); 

                float d1 = (p30-p20)*(p30-p10);
                float d2 = (p10-p20)*(p30-p10);
                float d3 = p10-p20;

                // If any of the denominators are zero then, just use maxIndex.
                    float fbin = float(maxIndex);
                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {
                float a = p10*p10;
                float b = p20*p20;

                // Solve for the coefficients A,B,C
                float A = ((p31-p21)/d1)-((p11-p21)/d2);
                float B = ((p11-p21)+(A*(b-a)))/d3;
                float C = p11-(A*a)-(B*p10);
                fbin = -B / (2. * A);
                }

                float an = 2.0 *${Math.PI} * (fbin + 0.5) / ${Uh}. - ${Math.PI};
                setOutput(an);
            }
            `};Cx[e]=t}return Cx[e]}const hhe=n=>{const{histograms:e}=n.inputs,t=n.backend,s=uhe(e);return t.runWebGLProgram(s,[e],e.dtype)},dhe={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:hhe},aM=7,Mx={};function phe(n,e){const t=`${n}|${e.shape[0]}`;if(!Mx.hasOwnProperty(t)){const s=[];for(let a=1;a<n;a++)s.push("image"+a);let i="float getPixel(int octave, int y, int x) {";for(let a=1;a<n;a++)i+=`
  if (octave == ${a}) {
	return getImage${a}(y, x);
  }
`;i+="}";const r={variableNames:[...s,"extrema","angles","freakPoints"],outputShape:[e.shape[0],Il.length],userCode:`
  ${i}
  void main() {
	ivec2 coords = getOutputCoords();
	int featureIndex = coords[0];
	int freakIndex = coords[1];

	float freakSigma = getFreakPoints(freakIndex, 0);
	float freakX = getFreakPoints(freakIndex, 1);
	float freakY = getFreakPoints(freakIndex, 2);

	int octave = int(getExtrema(featureIndex, 1));
	float inputY = getExtrema(featureIndex, 2);
	float inputX = getExtrema(featureIndex, 3);
	float inputAngle = getAngles(featureIndex);
	float cos = ${aM}. * cos(inputAngle);
	float sin = ${aM}. * sin(inputAngle);

	float yp = inputY + freakX * sin + freakY * cos;
	float xp = inputX + freakX * cos + freakY * -sin;

	int x0 = int(floor(xp));
	int x1 = x0 + 1;
	int y0 = int(floor(yp));
	int y1 = y0 + 1;

	float f1 = getPixel(octave, y0, x0);
	float f2 = getPixel(octave, y0, x1);
	float f3 = getPixel(octave, y1, x0);
	float f4 = getPixel(octave, y1, x1);

	float x1f = float(x1);
	float y1f = float(y1);
	float x0f = float(x0);
	float y0f = float(y0);

	// ratio for interpolation between four neighbouring points
	float value = (x1f - xp) * (y1f - yp) * f1
		+ (xp - x0f) * (y1f - yp) * f2
		+ (x1f - xp) * (yp - y0f) * f3
		+ (xp - x0f) * (yp - y0f) * f4;

	setOutput(value);
  }
`};Mx[t]=r}return Mx[t]}const fhe=n=>{const{gaussianImagesT:e,prunedExtremas:t,prunedExtremasAngles:s,freakPointsT:i,pyramidImagesLength:r}=n.inputs,a=n.backend,o=phe(r,t);return a.runWebGLProgram(o,[...e,t,s,i],"float32")},mhe={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:fhe},NL=(Il.length-1)*Il.length/2,ghe=Math.ceil(NL/8),Ex={};function yhe(n){const e=`${n.shape[0]}`;if(!Ex.hasOwnProperty(e)){const t={variableNames:["freak","p"],outputShape:[n.shape[0],ghe],userCode:`
  void main() {
    ivec2 coords = getOutputCoords();
    int featureIndex = coords[0];
    int descIndex = coords[1] * 8;

    int sum = 0;
    for (int i = 0; i < 8; i++) {
      if (descIndex + i >= ${NL}) {
        continue;
      }

      int p1 = int(getP(descIndex + i, 0));
      int p2 = int(getP(descIndex + i, 1));

      float v1 = getFreak(featureIndex, p1);
      float v2 = getFreak(featureIndex, p2);

      if (v1 < v2 + 0.01) {
        sum += int(pow(2.0, float(7 - i)));
      }
    }
    setOutput(float(sum));
  }
`};Ex[e]=t}return Ex[e]}const bhe=n=>{const{extremaFreaks:e,positionT:t}=n.inputs,{backend:s}=n,i=yhe(e);return s.runWebGLProgram(i,[e,t],"int32")},xhe={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:bhe},kx={};function vhe(n,e){const t=`${n}|${e}`;if(!kx.hasOwnProperty(t)){const s=[];let i="float getPixel(int octave, int y, int x) {";for(let r=1;r<n;r++)s.push("image"+r),i+=`
				if (octave == ${r}) {
					return getImage${r}(y, x);
				}
			`;i+="}",kx[t]={variableNames:[...s,"extrema"],outputShape:[e,3,3],userCode:`
			${i}
		
			void main() {
				ivec3 coords = getOutputCoords();
				int featureIndex = coords[0];
				float score = getExtrema(featureIndex, 0);
				if (score == 0.0) {
					return;
				}
		
				int dy = coords[1]-1;
				int dx = coords[2]-1;
				int octave = int(getExtrema(featureIndex, 1));
				int y = int(getExtrema(featureIndex, 2));
				int x = int(getExtrema(featureIndex, 3));
				setOutput(getPixel(octave, y+dy, x+dx));
			}
			`}}return kx[t]}const whe=n=>{const{prunedExtremasList:e,dogPyramidImagesT:t}=n.inputs,s=n.backend,i=vhe(t.length,e.length),r=Jt(e,[e.length,e[0].length],"int32");return s.runWebGLProgram(i,[...t.slice(1),r],t[0].dtype)},She={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:whe},_he=.159154943091895,dc=36,Nx={};function The(n,e,t){const s=`${t}|${n.shape[0]}|${e.shape[0]}`;if(!Nx.hasOwnProperty(s)){const i=[];for(let l=1;l<t;l++)i.push("image"+l);let r="float getPixel(int octave, int y, int x) {";for(let l=1;l<t;l++)r+=`
            if (octave == ${l}) {
                return getImage${l}(y, x);
            }
            `;r+="}";const a={variableNames:[...i,"extrema","radial"],outputShape:[n.shape[0],e.shape[0],2],userCode:`
                ${r}

                void main() {
                    ivec3 coords = getOutputCoords();
                    int featureIndex = coords[0];
                    int radialIndex = coords[1];
                    int propertyIndex = coords[2];

                    int radialY = int(getRadial(radialIndex, 0));
                    int radialX = int(getRadial(radialIndex, 1));
                    float radialW = getRadial(radialIndex, 2);

                    int octave = int(getExtrema(featureIndex, 1));
                    int y = int(getExtrema(featureIndex, 2));
                    int x = int(getExtrema(featureIndex, 3));

                    int xp = x + radialX;
                    int yp = y + radialY;

                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);
                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);

                    if (propertyIndex == 0) {
                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0
                    
                    float angle = atan(dy, dx) + ${Math.PI};
                    float fbin = angle * ${dc}. * ${_he};
                    setOutput(fbin);
                    return;
                    }

                    if (propertyIndex == 1) {
                        float mag = sqrt(dx * dx + dy * dy);
                        float magnitude = radialW * mag;
                        setOutput(magnitude);
                        return;
                    }
                }

                `},o={variableNames:["fbinMag"],outputShape:[n.shape[0],dc],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int featureIndex = coords[0];
                int binIndex = coords[1];

                float sum = 0.;
                for (int i = 0; i < ${e.shape[0]}; i++) {
                    float fbin = getFbinMag(featureIndex, i, 0);
                    int bin = int(floor(fbin - 0.5));
                    int b1 = imod(bin + ${dc}, ${dc});
                    int b2 = imod(bin + 1 + ${dc}, ${dc});

                    if (b1 == binIndex || b2 == binIndex) {
                        float magnitude = getFbinMag(featureIndex, i, 1);
                        float w2 = fbin - float(bin) - 0.5;
                        float w1 = w2 * -1. + 1.;

                        if (b1 == binIndex) {
                            sum += w1 * magnitude;
                        }
                        if (b2 == binIndex) {
                            sum += w2 * magnitude;
                        }
                    }
                }
                setOutput(sum);
            }
            `};Nx[s]=[a,o]}return Nx[s]}const Ihe=n=>{const{gaussianImagesT:e,prunedExtremasT:t,radialPropertiesT:s,pyramidImagesLength:i}=n.inputs,r=n.backend,[a,o]=The(t,s,i),l=r.runWebGLProgram(a,[...e,t,s],s.dtype),c=r.runWebGLProgram(o,[l],s.dtype);return r.disposeIntermediateTensorInfo(l),c},Che={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:Ihe},Rx={};function Mhe(n){const e=n.shape[1],t=n.shape[0],s="w"+e+"h"+t;if(!Rx.hasOwnProperty(s)){const i={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(e/2)],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int y = coords[0] * 2;
                int x = coords[1] * 2;
        
                float sum = getP(y, x) * 0.25;
                sum += getP(y+1,x) * 0.25; 
                sum += getP(y, x+1) * 0.25; 
                sum += getP(y+1,x+1) * 0.25;
                setOutput(sum);
            }
            `};Rx[s]=i}return Rx[s]}const Ehe=n=>{const e=n.inputs.image,t=n.backend,s=Mhe(e);return t.runWebGLProgram(s,[e],e.dtype)},khe={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:Ehe},Nhe=n=>{const{extremasResultT:e}=n.inputs,t=n.backend,s=e.shape[0],i=e.shape[1],r={variableNames:["extrema"],outputShape:[Math.floor(s/2),Math.floor(i/2)],userCode:`
		  void main() {
			ivec2 coords = getOutputCoords();
			int y = coords[0] * 2;
			int x = coords[1] * 2;
  
			float location = 0.0;
			float values = getExtrema(y, x);
  
			if (getExtrema(y+1, x) != 0.0) {
			  location = 1.0;
		  values = getExtrema(y+1, x);
			}
			else if (getExtrema(y, x+1) != 0.0) {
			  location = 2.0;
		  values = getExtrema(y, x+1);
			}
			else if (getExtrema(y+1, x+1) != 0.0) {
			  location = 3.0;
		  values = getExtrema(y+1, x+1);
			}
  
			if (values < 0.0) {
			  setOutput(location * -1000.0 + values);
			} else {
			  setOutput(location * 1000.0 + values);
			}
		  }
		`};return t.runWebGLProgram(r,[e],e.dtype)},Rhe={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:Nhe},xm=36,Ahe=5,Ax={};function Lhe(n){const e=`h${n.shape[0]}`;if(!Ax.hasOwnProperty(e)){const t={variableNames:["histogram"],outputShape:[n.shape[0],xm],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();

                int featureIndex = coords[0];
                int binIndex = coords[1];

                int prevBin = imod(binIndex - 1 + ${xm}, ${xm});
                int nextBin = imod(binIndex + 1, ${xm});
                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);

                setOutput(result);
            }
            `};Ax[e]=t}return Ax[e]}const Phe=n=>{let{histograms:e}=n.inputs;const t=n.backend,s=Lhe(e);for(let i=0;i<Ahe;i++){const r=e;e=t.runWebGLProgram(s,[e],e.dtype),i>0&&t.disposeIntermediateTensorInfo(r)}return e},Dhe={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:Phe},Lx={};function Fhe(n,e){const t=e.shape[1],s=e.shape[0],i="w"+t+"h"+s;if(!Lx.hasOwnProperty(i)){const r={variableNames:["p"],outputShape:[s,t],userCode:`
              void main() {
                ivec2 coords = getOutputCoords();
                int j = coords[0];
                int i = coords[1];
        
                float sj = 0.5 * float(j) - 0.25; 
                float si = 0.5 * float(i) - 0.25;
        
                float sj0 = floor(sj);
                float sj1 = ceil(sj);
                float si0 = floor(si);
                float si1 = ceil(si);
        
                int sj0I = int(sj0);
                int sj1I = int(sj1);
                int si0I = int(si0);
                int si1I = int(si1);
        
                float sum = 0.0;
                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);
                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);
                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);
                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);
                setOutput(sum);
              }
            `};Lx[i]=r}return Lx[i]}const Ohe=n=>{const{image:e,targetImage:t}=n.inputs,s=n.backend,i=Fhe(e,t);return s.runWebGLProgram(i,[e],e.dtype)},zhe={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:Ohe};Fs(ihe);Fs(che);Fs(dhe);Fs(mhe);Fs(xhe);Fs(She);Fs(Che);Fs(khe);Fs(Rhe);Fs(Dhe);Fs(zhe);const oM=8,Ghe=5,Bh=10,Vhe=5,Px=3,Whe=1.5;(Il.length-1)*Il.length/2;class RL{constructor(e,t,s=!1){this.debugMode=s,this.width=e,this.height=t;let i=0;for(;e>=oM&&t>=oM&&(e/=2,t/=2,i++,i!==Ghe););this.numOctaves=i,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let i=0;i<e.length;i++)t[4*i]=e[i],t[4*i+1]=e[i],t[4*i+2]=e[i],t[4*i+3]=255;const s=new ImageData(t,this.width,this.height);return this.detect(s)}detect(e){let t=null;const s=[];for(let y=0;y<this.numOctaves;y++){let b,x;y===0?b=this._applyFilter(e):b=this._downsampleBilinear(s[y-1][s[y-1].length-1]),x=this._applyFilter(b),s.push([b,x])}const i=[];for(let y=0;y<this.numOctaves;y++){let b=this._differenceImageBinomial(s[y][0],s[y][1]);i.push(b)}const r=[];for(let y=1;y<this.numOctaves-1;y++){const b=this._buildExtremas(i[y-1],i[y],i[y+1]);r.push(b)}const a=this._applyPrune(r),o=this._computeLocalization(a,i),l=this._computeOrientationHistograms(o,s),c=this._smoothHistograms(l),u=this._computeExtremaAngles(c),h=this._computeExtremaFreak(s,o,u),d=this._computeFreakDescriptors(h),p=o.arraySync(),m=u.arraySync(),g=d.arraySync();this.debugMode&&(t={pyramidImages:s.map(y=>y.map(b=>b.arraySync())),dogPyramidImages:i.map(y=>y?y.arraySync():null),extremasResults:r.map(y=>y.arraySync()),extremaAngles:u.arraySync(),prunedExtremas:a,localizedExtremas:o.arraySync()}),s.forEach(y=>y.forEach(b=>b.dispose())),i.forEach(y=>y&&y.dispose()),r.forEach(y=>y.dispose()),o.dispose(),l.dispose(),c.dispose(),u.dispose(),h.dispose(),d.dispose();const f=[];for(let y=0;y<p.length;y++){if(p[y][0]==0)continue;const b=[];for(let C=0;C<g[y].length;C+=4){const S=g[y][C],M=g[y][C+1],A=g[y][C+2],P=g[y][C+3];let D=S*16777216+M*65536+A*256+P;b.push(D)}const x=p[y][1],v=p[y][2],w=p[y][3]*Math.pow(2,x)+Math.pow(2,x-1)-.5,_=v*Math.pow(2,x)+Math.pow(2,x-1)-.5,T=Math.pow(2,x);f.push({maxima:p[y][0]>0,x:w,y:_,scale:T,angle:m[y],descriptors:b})}return{featurePoints:f,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const s=[],i=[];for(let o=0;o<e.shape[1];o++)for(let l=o+1;l<e.shape[1];l++)s.push(o),i.push(l);const r=Jt(s,[s.length]).cast("int32"),a=Jt(i,[i.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:cn(bs([r,a],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;return Q(()=>Dt().runKernel("ComputeFreakDescriptors",{extremaFreaks:e,positionT:t}))}_computeExtremaFreak(e,t,s){this.tensorCaches._computeExtremaFreak||Q(()=>{const a=Jt(Il);this.tensorCaches._computeExtremaFreak={freakPointsT:cn(a)}});const{freakPointsT:i}=this.tensorCaches._computeExtremaFreak,r=[];for(let a=1;a<e.length;a++)r.push(e[a][1]);return Q(()=>Dt().runKernel("ComputeExtremaFreak",{gaussianImagesT:r,prunedExtremas:t,prunedExtremasAngles:s,freakPointsT:i,pyramidImagesLength:e.length}))}_computeExtremaAngles(e){return Q(()=>Dt().runKernel("ComputeExtremaAngles",{histograms:e}))}_computeOrientationHistograms(e,t){const s=[];for(let r=1;r<t.length;r++)s.push(t[r][1]);this.tensorCaches.orientationHistograms||Q(()=>{const r=-1/(2*Px*Px),a=Px*Whe,o=Math.ceil(a),l=[];for(let c=-o;c<=o;c++)for(let u=-o;u<=o;u++){const h=u*u+c*c;if(h<=a*a){const d=h*r;let p=(720+d*(720+d*(360+d*(120+d*(30+d*(6+d))))))*.0013888888;l.push([c,u,p])}}this.tensorCaches.orientationHistograms={radialPropertiesT:cn(Jt(l,[l.length,3]))}});const{radialPropertiesT:i}=this.tensorCaches.orientationHistograms;return Q(()=>Dt().runKernel("ComputeOrientationHistograms",{gaussianImagesT:s,prunedExtremasT:e,radialPropertiesT:i,pyramidImagesLength:t.length}))}_smoothHistograms(e){return Q(()=>Dt().runKernel("SmoothHistograms",{histograms:e}))}_computeLocalization(e,t){return Q(()=>{const s=Dt().runKernel("ComputeLocalization",{prunedExtremasList:e,dogPyramidImagesT:t}).arraySync(),i=[];for(let a=0;a<s.length;a++){i.push([]);for(let o=0;o<s[a].length;o++)i[a].push([])}const r=[];for(let a=0;a<e.length;a++)r[a]=[e[a][0],e[a][1],e[a][2],e[a][3]];for(let a=0;a<r.length;a++){if(r[a][0]===0)continue;const o=s[a],l=.5*(o[1][2]-o[1][0]),c=.5*(o[2][1]-o[0][1]),u=o[1][2]+o[1][0]-2*o[1][1],h=o[2][1]+o[0][1]-2*o[1][1],d=.25*(o[0][0]+o[2][2]-o[0][2]-o[2][0]),p=u*h-d*d,m=(h*-l+-d*-c)/p,g=(-d*-l+u*-c)/p,f=r[a][2]+g,y=r[a][3]+m;Math.abs(p)<1e-4||(r[a][2]=f,r[a][3]=y)}return Jt(r,[r.length,r[0].length],"float32")})}_applyPrune(e){const t=Bh*Bh,s=Vhe,i=[],r=[];for(let o=0;o<t;o++){r.push([]),i.push([]);for(let l=0;l<s;l++)r[o].push([0,0,0,0]),i[o].push(0)}Q(()=>{for(let o=0;o<e.length;o++){const l=Dt().runKernel("ExtremaReduction",{extremasResultT:e[o]}),c=o+1,u=l.arraySync(),h=l.shape[0],d=l.shape[1],p=d*2/Bh,m=h*2/Bh;for(let g=0;g<h;g++)for(let f=0;f<d;f++){const y=u[g][f];if(y==0)continue;const b=y%1e3,x=Math.floor(Math.abs(y)/1e3),v=f*2+(x===2||x===3?1:0),w=g*2+(x===1||x===3?1:0),_=Math.floor(v/p),T=Math.floor(w/m)*Bh+_,C=Math.abs(b);let S=s;for(;S>=1&&C>i[T][S-1];)S-=1;if(S<s){for(let M=s-1;M>=S+1;M--)i[T][M]=i[T][M-1],r[T][M][0]=r[T][M-1][0],r[T][M][1]=r[T][M-1][1],r[T][M][2]=r[T][M-1][2],r[T][M][3]=r[T][M-1][3];i[T][S]=C,r[T][S][0]=b,r[T][S][1]=c,r[T][S][2]=w,r[T][S][3]=v}}}});const a=[];for(let o=0;o<t;o++)for(let l=0;l<s;l++)a.push(r[o][l]);return a}_buildExtremas(e,t,s){return Q(()=>Dt().runKernel("BuildExtremas",{image0:e,image1:t,image2:s}))}_differenceImageBinomial(e,t){return Q(()=>e.sub(t))}_applyFilter(e){return Q(()=>Dt().runKernel("BinomialFilter",{image:e}))}_downsampleBilinear(e){return Q(()=>Dt().runKernel("DownsampleBilinear",{image:e}))}_compileAndRun(e,t){const s=la().compileAndRun(e,t);return Dt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}_runWebGLProgram(e,t,s){const i=la().runWebGLProgram(e,t,s);return Dt().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}}class $he{constructor(e,t,s=!1){this.debugMode=s,this.width=e,this.height=t;let i=Math.min(e,t)/2,r=Math.pow(2,Math.round(Math.log(i)/Math.log(2)));this.cropSize=r,this.detector=new RL(r,r,s),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),s=Math.floor(this.width/2-this.cropSize/2),i=this._detect(e,s,t);return this.debugMode&&(i.debugExtra.crop={startX:s,startY:t,cropSize:this.cropSize}),i}detectMoving(e){const t=this.lastRandomIndex%3,s=Math.floor(this.lastRandomIndex/3);let i=Math.floor(this.height/2-this.cropSize+s*this.cropSize/2),r=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return r<0&&(r=0),i<0&&(i=0),r>=this.width-this.cropSize&&(r=this.width-this.cropSize-1),i>=this.height-this.cropSize&&(i=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,r,i)}_detect(e,t,s){const i=e.slice([s,t],[this.cropSize,this.cropSize]),{featurePoints:r,debugExtra:a}=this.detector.detect(i);return r.forEach(o=>{o.x+=t,o.y+=s}),this.debugMode&&(a.projectedImage=i.arraySync()),i.dispose(),{featurePoints:r,debugExtra:a}}}const AL=({image:n,ratio:e})=>{const t=Math.round(n.width*e),s=Math.round(n.height*e),i=new Uint8Array(t*s);for(let r=0;r<t;r++){let a=Math.round(1*r/e),o=Math.round(1*(r+1)/e)-1;o>=n.width&&(o=n.width-1);for(let l=0;l<s;l++){let c=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=n.height&&(u=n.height-1);let h=0,d=0;for(let p=a;p<=o;p++)for(let m=c;m<=u;m++)h+=1*n.data[m*n.width+p],d+=1;i[l*t+r]=Math.floor(h/d)}}return{data:i,width:t,height:s}},Uhe=100,Bhe=n=>{const e=Uhe/Math.min(n.width,n.height),t=[];let s=e;for(;;)if(t.push(s),s*=Math.pow(2,1/3),s>=.95){s=1;break}t.push(s),t.reverse();const i=[];for(let r=0;r<t.length;r++)n.width*t[r],n.height*t[r],i.push(Object.assign(AL({image:n,ratio:t[r]}),{scale:t[r]}));return i},Xhe=n=>{const e=Math.min(n.width,n.height),t=[],s=[];t.push(256/e),t.push(128/e);for(let i=0;i<t.length;i++)s.push(Object.assign(AL({image:n,ratio:t[i]}),{scale:t[i]}));return s},Hhe=n=>{const{v1:e,v2:t}=n;let s=0;for(let i=0;i<e.length;i++){let r=(e[i]^t[i])>>>0;s+=Zhe(r)}return s},Zhe=n=>{var e=n-(n>>1&1431655765);return e=(e>>2&858993459)+(e&858993459),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},Khe=1234,Yhe=()=>({seed:Khe,arrayShuffle(n){const{arr:e,sampleSize:t}=n;for(let s=0;s<t;s++){this.seed=(214013*this.seed+2531011)%-2147483648;let i=this.seed>>16&32767;i=i%e.length;let r=e[s];e[s]=e[i],e[i]=r}},nextInt(n){this.seed=(214013*this.seed+2531011)%-2147483648;let e=this.seed>>16&32767;return e=e%n,e}}),jhe=16,Qhe=128,H1=8,Jhe=n=>{const{points:e,pointIndexes:t,randomizer:s}=n,i=[];for(let l=0;l<t.length;l++)i.push(l);let r=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let l=0;l<Qhe;l++){s.arrayShuffle({arr:i,sampleSize:H1});let c=0;const u=[];for(let h=0;h<t.length;h++){let d=Number.MAX_SAFE_INTEGER;for(let p=0;p<H1;p++){const m=t[i[p]],g=Hhe({v1:e[t[h]].descriptors,v2:e[m].descriptors});g<d&&(u[h]=i[p],d=g)}c+=d}o.push(u),c<r&&(r=c,a=l)}return o[a]},lM=({points:n})=>{const e=[];for(let s=0;s<n.length;s++)e.push(s);const t=Yhe();return{rootNode:LL({points:n,pointIndexes:e,centerPointIndex:null,randomizer:t})}},LL=n=>{const{points:e,pointIndexes:t,centerPointIndex:s,randomizer:i}=n;let r=!1;(t.length<=H1||t.length<=jhe)&&(r=!0);const a={};if(!r){const l=Jhe({points:e,pointIndexes:t,randomizer:i});for(let c=0;c<l.length;c++)a[t[l[c]]]===void 0&&(a[t[l[c]]]=[]),a[t[l[c]]].push(t[c])}Object.keys(a).length===1&&(r=!0);const o={centerPointIndex:s};if(r){o.leaf=!0,o.pointIndexes=[];for(let l=0;l<t.length;l++)o.pointIndexes.push(t[l]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach(l=>{o.children.push(LL({points:e,pointIndexes:a[l],centerPointIndex:l,randomizer:i}))}),o};var Zo=4294967295;function qhe(n,e,t){var s=t/4294967296,i=t;n.setUint32(e,s),n.setUint32(e+4,i)}function PL(n,e,t){var s=Math.floor(t/4294967296),i=t;n.setUint32(e,s),n.setUint32(e+4,i)}function DL(n,e){var t=n.getInt32(e),s=n.getUint32(e+4);return t*4294967296+s}function ede(n,e){var t=n.getUint32(e),s=n.getUint32(e+4);return t*4294967296+s}var Dx,Fx,Ox,ib=(typeof process>"u"||((Dx=process==null?void 0:process.env)===null||Dx===void 0?void 0:Dx.TEXT_ENCODING)!=="never")&&typeof TextEncoder<"u"&&typeof TextDecoder<"u";function cM(n){for(var e=n.length,t=0,s=0;s<e;){var i=n.charCodeAt(s++);if(i&4294967168)if(!(i&4294965248))t+=2;else{if(i>=55296&&i<=56319&&s<e){var r=n.charCodeAt(s);(r&64512)===56320&&(++s,i=((i&1023)<<10)+(r&1023)+65536)}i&4294901760?t+=4:t+=3}else{t++;continue}}return t}function tde(n,e,t){for(var s=n.length,i=t,r=0;r<s;){var a=n.charCodeAt(r++);if(a&4294967168)if(!(a&4294965248))e[i++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&r<s){var o=n.charCodeAt(r);(o&64512)===56320&&(++r,a=((a&1023)<<10)+(o&1023)+65536)}a&4294901760?(e[i++]=a>>18&7|240,e[i++]=a>>12&63|128,e[i++]=a>>6&63|128):(e[i++]=a>>12&15|224,e[i++]=a>>6&63|128)}else{e[i++]=a;continue}e[i++]=a&63|128}}var gg=ib?new TextEncoder:void 0,nde=ib?typeof process<"u"&&((Fx=process==null?void 0:process.env)===null||Fx===void 0?void 0:Fx.TEXT_ENCODING)!=="force"?200:0:Zo;function sde(n,e,t){e.set(gg.encode(n),t)}function ide(n,e,t){gg.encodeInto(n,e.subarray(t))}var rde=gg!=null&&gg.encodeInto?ide:sde,ade=4096;function FL(n,e,t){for(var s=e,i=s+t,r=[],a="";s<i;){var o=n[s++];if(!(o&128))r.push(o);else if((o&224)===192){var l=n[s++]&63;r.push((o&31)<<6|l)}else if((o&240)===224){var l=n[s++]&63,c=n[s++]&63;r.push((o&31)<<12|l<<6|c)}else if((o&248)===240){var l=n[s++]&63,c=n[s++]&63,u=n[s++]&63,h=(o&7)<<18|l<<12|c<<6|u;h>65535&&(h-=65536,r.push(h>>>10&1023|55296),h=56320|h&1023),r.push(h)}else r.push(o);r.length>=ade&&(a+=String.fromCharCode.apply(String,r),r.length=0)}return r.length>0&&(a+=String.fromCharCode.apply(String,r)),a}var ode=ib?new TextDecoder:null,lde=ib?typeof process<"u"&&((Ox=process==null?void 0:process.env)===null||Ox===void 0?void 0:Ox.TEXT_DECODER)!=="force"?200:0:Zo;function cde(n,e,t){var s=n.subarray(e,e+t);return ode.decode(s)}var vm=function(){function n(e,t){this.type=e,this.data=t}return n}(),ude=globalThis&&globalThis.__extends||function(){var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(s,i){s.__proto__=i}||function(s,i){for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(s[r]=i[r])},n(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");n(e,t);function s(){this.constructor=e}e.prototype=t===null?Object.create(t):(s.prototype=t.prototype,new s)}}(),xr=function(n){ude(e,n);function e(t){var s=n.call(this,t)||this,i=Object.create(e.prototype);return Object.setPrototypeOf(s,i),Object.defineProperty(s,"name",{configurable:!0,enumerable:!1,value:e.name}),s}return e}(Error),hde=-1,dde=4294967296-1,pde=17179869184-1;function fde(n){var e=n.sec,t=n.nsec;if(e>=0&&t>=0&&e<=pde)if(t===0&&e<=dde){var s=new Uint8Array(4),i=new DataView(s.buffer);return i.setUint32(0,e),s}else{var r=e/4294967296,a=e&4294967295,s=new Uint8Array(8),i=new DataView(s.buffer);return i.setUint32(0,t<<2|r&3),i.setUint32(4,a),s}else{var s=new Uint8Array(12),i=new DataView(s.buffer);return i.setUint32(0,t),PL(i,4,e),s}}function mde(n){var e=n.getTime(),t=Math.floor(e/1e3),s=(e-t*1e3)*1e6,i=Math.floor(s/1e9);return{sec:t+i,nsec:s-i*1e9}}function gde(n){if(n instanceof Date){var e=mde(n);return fde(e)}else return null}function yde(n){var e=new DataView(n.buffer,n.byteOffset,n.byteLength);switch(n.byteLength){case 4:{var t=e.getUint32(0),s=0;return{sec:t,nsec:s}}case 8:{var i=e.getUint32(0),r=e.getUint32(4),t=(i&3)*4294967296+r,s=i>>>2;return{sec:t,nsec:s}}case 12:{var t=DL(e,4),s=e.getUint32(0);return{sec:t,nsec:s}}default:throw new xr("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(n.length))}}function bde(n){var e=yde(n);return new Date(e.sec*1e3+e.nsec/1e6)}var xde={type:hde,encode:gde,decode:bde},OL=function(){function n(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(xde)}return n.prototype.register=function(e){var t=e.type,s=e.encode,i=e.decode;if(t>=0)this.encoders[t]=s,this.decoders[t]=i;else{var r=1+t;this.builtInEncoders[r]=s,this.builtInDecoders[r]=i}},n.prototype.tryToEncode=function(e,t){for(var s=0;s<this.builtInEncoders.length;s++){var i=this.builtInEncoders[s];if(i!=null){var r=i(e,t);if(r!=null){var a=-1-s;return new vm(a,r)}}}for(var s=0;s<this.encoders.length;s++){var i=this.encoders[s];if(i!=null){var r=i(e,t);if(r!=null){var a=s;return new vm(a,r)}}}return e instanceof vm?e:null},n.prototype.decode=function(e,t,s){var i=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return i?i(e,t,s):new vm(t,e)},n.defaultCodec=new n,n}();function yg(n){return n instanceof Uint8Array?n:ArrayBuffer.isView(n)?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):n instanceof ArrayBuffer?new Uint8Array(n):Uint8Array.from(n)}function vde(n){if(n instanceof ArrayBuffer)return new DataView(n);var e=yg(n);return new DataView(e.buffer,e.byteOffset,e.byteLength)}var wde=100,Sde=2048,_de=function(){function n(e,t,s,i,r,a,o,l){e===void 0&&(e=OL.defaultCodec),t===void 0&&(t=void 0),s===void 0&&(s=wde),i===void 0&&(i=Sde),r===void 0&&(r=!1),a===void 0&&(a=!1),o===void 0&&(o=!1),l===void 0&&(l=!1),this.extensionCodec=e,this.context=t,this.maxDepth=s,this.initialBufferSize=i,this.sortKeys=r,this.forceFloat32=a,this.ignoreUndefined=o,this.forceIntegerToFloat=l,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return n.prototype.reinitializeState=function(){this.pos=0},n.prototype.encodeSharedRef=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.subarray(0,this.pos)},n.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.slice(0,this.pos)},n.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth ".concat(t));e==null?this.encodeNil():typeof e=="boolean"?this.encodeBoolean(e):typeof e=="number"?this.encodeNumber(e):typeof e=="string"?this.encodeString(e):this.encodeObject(e,t)},n.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(t*2)},n.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),s=new Uint8Array(t),i=new DataView(t);s.set(this.bytes),this.view=i,this.bytes=s},n.prototype.encodeNil=function(){this.writeU8(192)},n.prototype.encodeBoolean=function(e){e===!1?this.writeU8(194):this.writeU8(195)},n.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},n.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else if(e<4294967296)this.writeU8(219),this.writeU32(e);else throw new Error("Too long string: ".concat(e," bytes in UTF-8"))},n.prototype.encodeString=function(e){var t=5,s=e.length;if(s>nde){var i=cM(e);this.ensureBufferSizeToWrite(t+i),this.writeStringHeader(i),rde(e,this.bytes,this.pos),this.pos+=i}else{var i=cM(e);this.ensureBufferSizeToWrite(t+i),this.writeStringHeader(i),tde(e,this.bytes,this.pos),this.pos+=i}},n.prototype.encodeObject=function(e,t){var s=this.extensionCodec.tryToEncode(e,this.context);if(s!=null)this.encodeExtension(s);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else if(typeof e=="object")this.encodeMap(e,t);else throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(e)))},n.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else if(t<4294967296)this.writeU8(198),this.writeU32(t);else throw new Error("Too large binary: ".concat(t));var s=yg(e);this.writeU8a(s)},n.prototype.encodeArray=function(e,t){var s=e.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else if(s<4294967296)this.writeU8(221),this.writeU32(s);else throw new Error("Too large array: ".concat(s));for(var i=0,r=e;i<r.length;i++){var a=r[i];this.doEncode(a,t+1)}},n.prototype.countWithoutUndefined=function(e,t){for(var s=0,i=0,r=t;i<r.length;i++){var a=r[i];e[a]!==void 0&&s++}return s},n.prototype.encodeMap=function(e,t){var s=Object.keys(e);this.sortKeys&&s.sort();var i=this.ignoreUndefined?this.countWithoutUndefined(e,s):s.length;if(i<16)this.writeU8(128+i);else if(i<65536)this.writeU8(222),this.writeU16(i);else if(i<4294967296)this.writeU8(223),this.writeU32(i);else throw new Error("Too large map object: ".concat(i));for(var r=0,a=s;r<a.length;r++){var o=a[r],l=e[o];this.ignoreUndefined&&l===void 0||(this.encodeString(o),this.doEncode(l,t+1))}},n.prototype.encodeExtension=function(e){var t=e.data.length;if(t===1)this.writeU8(212);else if(t===2)this.writeU8(213);else if(t===4)this.writeU8(214);else if(t===8)this.writeU8(215);else if(t===16)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else if(t<4294967296)this.writeU8(201),this.writeU32(t);else throw new Error("Too large extension object: ".concat(t));this.writeI8(e.type),this.writeU8a(e.data)},n.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},n.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},n.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},n.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},n.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},n.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},n.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},n.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},n.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},n.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),qhe(this.view,this.pos,e),this.pos+=8},n.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),PL(this.view,this.pos,e),this.pos+=8},n}(),Tde={};function Ide(n,e){e===void 0&&(e=Tde);var t=new _de(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined,e.forceIntegerToFloat);return t.encodeSharedRef(n)}function zx(n){return"".concat(n<0?"-":"","0x").concat(Math.abs(n).toString(16).padStart(2,"0"))}var Cde=16,Mde=16,Ede=function(){function n(e,t){e===void 0&&(e=Cde),t===void 0&&(t=Mde),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var s=0;s<this.maxKeyLength;s++)this.caches.push([])}return n.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},n.prototype.find=function(e,t,s){var i=this.caches[s-1];e:for(var r=0,a=i;r<a.length;r++){for(var o=a[r],l=o.bytes,c=0;c<s;c++)if(l[c]!==e[t+c])continue e;return o.str}return null},n.prototype.store=function(e,t){var s=this.caches[e.length-1],i={bytes:e,str:t};s.length>=this.maxLengthPerKey?s[Math.random()*s.length|0]=i:s.push(i)},n.prototype.decode=function(e,t,s){var i=this.find(e,t,s);if(i!=null)return this.hit++,i;this.miss++;var r=FL(e,t,s),a=Uint8Array.prototype.slice.call(e,t,t+s);return this.store(a,r),r},n}(),kde=globalThis&&globalThis.__awaiter||function(n,e,t,s){function i(r){return r instanceof t?r:new t(function(a){a(r)})}return new(t||(t=Promise))(function(r,a){function o(u){try{c(s.next(u))}catch(h){a(h)}}function l(u){try{c(s.throw(u))}catch(h){a(h)}}function c(u){u.done?r(u.value):i(u.value).then(o,l)}c((s=s.apply(n,e||[])).next())})},Gx=globalThis&&globalThis.__generator||function(n,e){var t={label:0,sent:function(){if(r[0]&1)throw r[1];return r[1]},trys:[],ops:[]},s,i,r,a;return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(c){return function(u){return l([c,u])}}function l(c){if(s)throw new TypeError("Generator is already executing.");for(;t;)try{if(s=1,i&&(r=c[0]&2?i.return:c[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,c[1])).done)return r;switch(i=0,r&&(c=[c[0]&2,r.value]),c[0]){case 0:case 1:r=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,i=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(r=t.trys,!(r=r.length>0&&r[r.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!r||c[1]>r[0]&&c[1]<r[3])){t.label=c[1];break}if(c[0]===6&&t.label<r[1]){t.label=r[1],r=c;break}if(r&&t.label<r[2]){t.label=r[2],t.ops.push(c);break}r[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(n,t)}catch(u){c=[6,u],i=0}finally{s=r=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}},uM=globalThis&&globalThis.__asyncValues||function(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=n[Symbol.asyncIterator],t;return e?e.call(n):(n=typeof __values=="function"?__values(n):n[Symbol.iterator](),t={},s("next"),s("throw"),s("return"),t[Symbol.asyncIterator]=function(){return this},t);function s(r){t[r]=n[r]&&function(a){return new Promise(function(o,l){a=n[r](a),i(o,l,a.done,a.value)})}}function i(r,a,o,l){Promise.resolve(l).then(function(c){r({value:c,done:o})},a)}},Ec=globalThis&&globalThis.__await||function(n){return this instanceof Ec?(this.v=n,this):new Ec(n)},Nde=globalThis&&globalThis.__asyncGenerator||function(n,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s=t.apply(n,e||[]),i,r=[];return i={},a("next"),a("throw"),a("return"),i[Symbol.asyncIterator]=function(){return this},i;function a(d){s[d]&&(i[d]=function(p){return new Promise(function(m,g){r.push([d,p,m,g])>1||o(d,p)})})}function o(d,p){try{l(s[d](p))}catch(m){h(r[0][3],m)}}function l(d){d.value instanceof Ec?Promise.resolve(d.value.v).then(c,u):h(r[0][2],d)}function c(d){o("next",d)}function u(d){o("throw",d)}function h(d,p){d(p),r.shift(),r.length&&o(r[0][0],r[0][1])}},Rde=function(n){var e=typeof n;return e==="string"||e==="number"},Xh=-1,bT=new DataView(new ArrayBuffer(0)),Ade=new Uint8Array(bT.buffer),Z1=function(){try{bT.getInt8(0)}catch(n){return n.constructor}throw new Error("never reached")}(),hM=new Z1("Insufficient data"),Lde=new Ede,Pde=function(){function n(e,t,s,i,r,a,o,l){e===void 0&&(e=OL.defaultCodec),t===void 0&&(t=void 0),s===void 0&&(s=Zo),i===void 0&&(i=Zo),r===void 0&&(r=Zo),a===void 0&&(a=Zo),o===void 0&&(o=Zo),l===void 0&&(l=Lde),this.extensionCodec=e,this.context=t,this.maxStrLength=s,this.maxBinLength=i,this.maxArrayLength=r,this.maxMapLength=a,this.maxExtLength=o,this.keyDecoder=l,this.totalPos=0,this.pos=0,this.view=bT,this.bytes=Ade,this.headByte=Xh,this.stack=[]}return n.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=Xh,this.stack.length=0},n.prototype.setBuffer=function(e){this.bytes=yg(e),this.view=vde(this.bytes),this.pos=0},n.prototype.appendBuffer=function(e){if(this.headByte===Xh&&!this.hasRemaining(1))this.setBuffer(e);else{var t=this.bytes.subarray(this.pos),s=yg(e),i=new Uint8Array(t.length+s.length);i.set(t),i.set(s,t.length),this.setBuffer(i)}},n.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},n.prototype.createExtraByteError=function(e){var t=this,s=t.view,i=t.pos;return new RangeError("Extra ".concat(s.byteLength-i," of ").concat(s.byteLength," byte(s) found at buffer[").concat(e,"]"))},n.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},n.prototype.decodeMulti=function(e){return Gx(this,function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}})},n.prototype.decodeAsync=function(e){var t,s,i,r;return kde(this,void 0,void 0,function(){var a,o,l,c,u,h,d,p;return Gx(this,function(m){switch(m.label){case 0:a=!1,m.label=1;case 1:m.trys.push([1,6,7,12]),t=uM(e),m.label=2;case 2:return[4,t.next()];case 3:if(s=m.sent(),!!s.done)return[3,5];if(l=s.value,a)throw this.createExtraByteError(this.totalPos);this.appendBuffer(l);try{o=this.doDecodeSync(),a=!0}catch(g){if(!(g instanceof Z1))throw g}this.totalPos+=this.pos,m.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=m.sent(),i={error:c},[3,12];case 7:return m.trys.push([7,,10,11]),s&&!s.done&&(r=t.return)?[4,r.call(t)]:[3,9];case 8:m.sent(),m.label=9;case 9:return[3,11];case 10:if(i)throw i.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,o]}throw u=this,h=u.headByte,d=u.pos,p=u.totalPos,new RangeError("Insufficient data in parsing ".concat(zx(h)," at ").concat(p," (").concat(d," in the current buffer)"))}})})},n.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},n.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},n.prototype.decodeMultiAsync=function(e,t){return Nde(this,arguments,function(){var s,i,r,a,o,l,c,u,h;return Gx(this,function(d){switch(d.label){case 0:s=t,i=-1,d.label=1;case 1:d.trys.push([1,13,14,19]),r=uM(e),d.label=2;case 2:return[4,Ec(r.next())];case 3:if(a=d.sent(),!!a.done)return[3,12];if(o=a.value,t&&i===0)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o),s&&(i=this.readArraySize(),s=!1,this.complete()),d.label=4;case 4:d.trys.push([4,9,,10]),d.label=5;case 5:return[4,Ec(this.doDecodeSync())];case 6:return[4,d.sent()];case 7:return d.sent(),--i===0?[3,8]:[3,5];case 8:return[3,10];case 9:if(l=d.sent(),!(l instanceof Z1))throw l;return[3,10];case 10:this.totalPos+=this.pos,d.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return c=d.sent(),u={error:c},[3,19];case 14:return d.trys.push([14,,17,18]),a&&!a.done&&(h=r.return)?[4,Ec(h.call(r))]:[3,16];case 15:d.sent(),d.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}})})},n.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){var s=e-128;if(s!==0){this.pushMapState(s),this.complete();continue e}else t={}}else if(e<160){var s=e-144;if(s!==0){this.pushArrayState(s),this.complete();continue e}else t=[]}else{var i=e-160;t=this.decodeUtf8String(i,0)}else if(e===192)t=null;else if(e===194)t=!1;else if(e===195)t=!0;else if(e===202)t=this.readF32();else if(e===203)t=this.readF64();else if(e===204)t=this.readU8();else if(e===205)t=this.readU16();else if(e===206)t=this.readU32();else if(e===207)t=this.readU64();else if(e===208)t=this.readI8();else if(e===209)t=this.readI16();else if(e===210)t=this.readI32();else if(e===211)t=this.readI64();else if(e===217){var i=this.lookU8();t=this.decodeUtf8String(i,1)}else if(e===218){var i=this.lookU16();t=this.decodeUtf8String(i,2)}else if(e===219){var i=this.lookU32();t=this.decodeUtf8String(i,4)}else if(e===220){var s=this.readU16();if(s!==0){this.pushArrayState(s),this.complete();continue e}else t=[]}else if(e===221){var s=this.readU32();if(s!==0){this.pushArrayState(s),this.complete();continue e}else t=[]}else if(e===222){var s=this.readU16();if(s!==0){this.pushMapState(s),this.complete();continue e}else t={}}else if(e===223){var s=this.readU32();if(s!==0){this.pushMapState(s),this.complete();continue e}else t={}}else if(e===196){var s=this.lookU8();t=this.decodeBinary(s,1)}else if(e===197){var s=this.lookU16();t=this.decodeBinary(s,2)}else if(e===198){var s=this.lookU32();t=this.decodeBinary(s,4)}else if(e===212)t=this.decodeExtension(1,0);else if(e===213)t=this.decodeExtension(2,0);else if(e===214)t=this.decodeExtension(4,0);else if(e===215)t=this.decodeExtension(8,0);else if(e===216)t=this.decodeExtension(16,0);else if(e===199){var s=this.lookU8();t=this.decodeExtension(s,1)}else if(e===200){var s=this.lookU16();t=this.decodeExtension(s,2)}else if(e===201){var s=this.lookU32();t=this.decodeExtension(s,4)}else throw new xr("Unrecognized type byte: ".concat(zx(e)));this.complete();for(var r=this.stack;r.length>0;){var a=r[r.length-1];if(a.type===0)if(a.array[a.position]=t,a.position++,a.position===a.size)r.pop(),t=a.array;else continue e;else if(a.type===1){if(!Rde(t))throw new xr("The type of key must be string or number but "+typeof t);if(t==="__proto__")throw new xr("The key __proto__ is not allowed");a.key=t,a.type=2;continue e}else if(a.map[a.key]=t,a.readCount++,a.readCount===a.size)r.pop(),t=a.map;else{a.key=null,a.type=1;continue e}}return t}},n.prototype.readHeadByte=function(){return this.headByte===Xh&&(this.headByte=this.readU8()),this.headByte},n.prototype.complete=function(){this.headByte=Xh},n.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:{if(e<160)return e-144;throw new xr("Unrecognized array type byte: ".concat(zx(e)))}}},n.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new xr("Max length exceeded: map length (".concat(e,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},n.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new xr("Max length exceeded: array length (".concat(e,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:e,array:new Array(e),position:0})},n.prototype.decodeUtf8String=function(e,t){var s;if(e>this.maxStrLength)throw new xr("Max length exceeded: UTF-8 byte length (".concat(e,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+t+e)throw hM;var i=this.pos+t,r;return this.stateIsMapKey()&&!((s=this.keyDecoder)===null||s===void 0)&&s.canBeCached(e)?r=this.keyDecoder.decode(this.bytes,i,e):e>lde?r=cde(this.bytes,i,e):r=FL(this.bytes,i,e),this.pos+=t+e,r},n.prototype.stateIsMapKey=function(){if(this.stack.length>0){var e=this.stack[this.stack.length-1];return e.type===1}return!1},n.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new xr("Max length exceeded: bin length (".concat(e,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(e+t))throw hM;var s=this.pos+t,i=this.bytes.subarray(s,s+e);return this.pos+=t+e,i},n.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new xr("Max length exceeded: ext length (".concat(e,") > maxExtLength (").concat(this.maxExtLength,")"));var s=this.view.getInt8(this.pos+t),i=this.decodeBinary(e,t+1);return this.extensionCodec.decode(i,s,this.context)},n.prototype.lookU8=function(){return this.view.getUint8(this.pos)},n.prototype.lookU16=function(){return this.view.getUint16(this.pos)},n.prototype.lookU32=function(){return this.view.getUint32(this.pos)},n.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},n.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},n.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},n.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},n.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},n.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},n.prototype.readU64=function(){var e=ede(this.view,this.pos);return this.pos+=8,e},n.prototype.readI64=function(){var e=DL(this.view,this.pos);return this.pos+=8,e},n.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},n.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},n}(),Dde={};function Fde(n,e){e===void 0&&(e=Dde);var t=new Pde(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength);return t.decode(n)}const dM=2;class Ode{constructor(){this.data=null}compileImageTargets(e,t){return new Promise(async(s,i)=>{const r=[];for(let c=0;c<e.length;c++){const u=e[c],h=this.createProcessCanvas(u).getContext("2d");h.drawImage(u,0,0,u.width,u.height);const d=h.getImageData(0,0,u.width,u.height),p=new Uint8Array(u.width*u.height);for(let g=0;g<p.length;g++){const f=g*4;p[g]=Math.floor((d.data[f]+d.data[f+1]+d.data[f+2])/3)}const m={data:p,height:u.height,width:u.width};r.push(m)}const a=50/r.length;let o=0;this.data=[];for(let c=0;c<r.length;c++){const u=r[c],h=Bhe(u),d=a/h.length,p=await zde(h,()=>{o+=d,t(o)});this.data.push({targetImage:u,imageList:h,matchingData:p})}for(let c=0;c<r.length;c++){const u=Xhe(r[c]);this.data[c].trackingImageList=u}const l=await this.compileTrack({progressCallback:t,targetImages:r,basePercent:50});for(let c=0;c<r.length;c++)this.data[c].trackingData=l[c];s(this.data)})}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return Ide({v:dM,dataList:e})}importData(e){const t=Fde(new Uint8Array(e));if(!t.v||t.v!==dM)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:s}=t;this.data=[];for(let i=0;i<s.length;i++)this.data.push({targetImage:s[i].targetImage,trackingData:s[i].trackingData,matchingData:s[i].matchingData});return this.data}createProcessCanvas(e){console.warn("missing createProcessCanvas implementation")}compileTrack({progressCallback:e,targetImages:t,basePercent:s}){console.warn("missing compileTrack implementation")}}const zde=async(n,e)=>{const t=[];for(let s=0;s<n.length;s++){const i=n[s],r=new RL(i.width,i.height);await pf(),Q(()=>{const a=Jt(i.data,[i.data.length],"float32").reshape([i.height,i.width]),{featurePoints:o}=r.detect(a),l=o.filter(d=>d.maxima),c=o.filter(d=>!d.maxima),u=lM({points:l}),h=lM({points:c});t.push({maximaPoints:l,minimaPoints:c,maximaPointsCluster:u,minimaPointsCluster:h,width:i.width,height:i.height,scale:i.scale}),e(s)})}return t},zL="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NsYXNzIHp7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY3Vtc3VtPVtdO2ZvcihsZXQgZT0wO2U8bztlKyspe3RoaXMuY3Vtc3VtLnB1c2goW10pO2ZvcihsZXQgbj0wO248dDtuKyspdGhpcy5jdW1zdW1bZV0ucHVzaCgwKX10aGlzLmN1bXN1bVswXVswXT1zWzBdO2ZvcihsZXQgZT0xO2U8dDtlKyspdGhpcy5jdW1zdW1bMF1bZV09dGhpcy5jdW1zdW1bMF1bZS0xXStzW2VdO2ZvcihsZXQgZT0xO2U8bztlKyspdGhpcy5jdW1zdW1bZV1bMF09dGhpcy5jdW1zdW1bZS0xXVswXStzW2UqdF07Zm9yKGxldCBlPTE7ZTxvO2UrKylmb3IobGV0IG49MTtuPHQ7bisrKXRoaXMuY3Vtc3VtW2VdW25dPXNbZSp0K25dK3RoaXMuY3Vtc3VtW2UtMV1bbl0rdGhpcy5jdW1zdW1bZV1bbi0xXS10aGlzLmN1bXN1bVtlLTFdW24tMV19cXVlcnkocyx0LG8sZSl7bGV0IG49dGhpcy5jdW1zdW1bZV1bb107cmV0dXJuIHQ+MCYmKG4tPXRoaXMuY3Vtc3VtW3QtMV1bb10pLHM+MCYmKG4tPXRoaXMuY3Vtc3VtW2VdW3MtMV0pLHM+MCYmdD4wJiYobis9dGhpcy5jdW1zdW1bdC0xXVtzLTFdKSxufX1jb25zdCBDPTEwLGI9MixNPTYsRj01LEk9Ljk1LEw9LjksTz0uMixaPTgsTj0yNCoyLzMsVT1yPT57Y29uc3R7ZGF0YTpzLHdpZHRoOnQsaGVpZ2h0Om8sc2NhbGU6ZX09cixuPVt0Km9dO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKW5baV09ITE7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWFbaV09LTEsYVt0KihvLTEpK2ldPS0xO2ZvcihsZXQgaT0wO2k8bztpKyspYVtpKnRdPS0xLGFbaSp0K3QtMV09LTE7Zm9yKGxldCBpPTE7aTx0LTE7aSsrKWZvcihsZXQgcD0xO3A8by0xO3ArKyl7bGV0IGY9aSt0KnAsaD0wLGM9MDtmb3IobGV0IHU9LTE7dTw9MTt1KyspaCs9c1tmK3QqdSsxXS1zW2YrdCp1LTFdLGMrPXNbZit0K3VdLXNbZi10K3VdO2gvPTMqMjU2LGMvPTMqMjU2LGFbZl09TWF0aC5zcXJ0KChoKmgrYypjKS8yKX1jb25zdCBnPW5ldyBVaW50MzJBcnJheSgxZTMpO2ZvcihsZXQgaT0wO2k8MWUzO2krKylnW2ldPTA7Y29uc3QgZD1bLTEsMSwtdCx0XTtmb3IobGV0IGk9MTtpPHQtMTtpKyspZm9yKGxldCBwPTE7cDxvLTE7cCsrKXtsZXQgZj1pK3QqcCxoPSEwO2ZvcihsZXQgYz0wO2M8ZC5sZW5ndGg7YysrKWlmKGFbZl08PWFbZitkW2NdXSl7aD0hMTticmVha31pZihoKXtsZXQgYz1NYXRoLmZsb29yKGFbZl0qMWUzKTtjPjk5OSYmKGM9OTk5KSxjPDAmJihjPTApLGdbY10rPTEsbltmXT0hMH19Y29uc3Qgdz0uMDIqdCpvO2xldCBqPTk5OSxFPTA7Zm9yKDtqPj0wJiYoRSs9Z1tqXSwhKEU+dykpOylqLS07Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDtpKyspbltpXSYmYVtpXSoxZTM8aiYmKG5baV09ITEpO2NvbnN0IGw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspbFtpXT1zW2ldKnNbaV07Y29uc3QgUz1uZXcgeihzLHQsbyksRD1uZXcgeihsLHQsbyksaz1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IGY9cCp0K2k7aWYoIW5bZl0pe2tbZl09MTtjb250aW51ZX1jb25zdCBoPVAoe2ltYWdlOnIsY3g6aSxjeTpwLHNkVGhyZXNoOkYsaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KTtpZihoPT09bnVsbCl7a1tmXT0xO2NvbnRpbnVlfWxldCBjPS0xO2ZvcihsZXQgdT0tQzt1PD1DO3UrKyl7Zm9yKGxldCBtPS1DO208PUM7bSsrKXtpZihtKm0rdSp1PD1iKmIpY29udGludWU7Y29uc3QgeD1SKHtpbWFnZTpyLGN4OmkrbSxjeTpwK3UsdmxlbjpoLHR4OmksdHk6cCxpbWFnZURhdGFDdW1zdW06UyxpbWFnZURhdGFTcXJDdW1zdW06RH0pO2lmKHghPT1udWxsJiZ4PmMmJihjPXgsYz5JKSlicmVha31pZihjPkkpYnJlYWt9a1tmXT1jfXJldHVybiBWKHtpbWFnZTpyLGZlYXR1cmVNYXA6ayx0ZW1wbGF0ZVNpemU6TSxzZWFyY2hTaXplOmIsb2NjU2l6ZTpOLG1heFNpbVRocmVzaDpMLG1pblNpbVRocmVzaDpPLHNkVGhyZXNoOlosaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KX0sVj1yPT57bGV0e2ltYWdlOnMsZmVhdHVyZU1hcDp0LHRlbXBsYXRlU2l6ZTpvLHNlYXJjaFNpemU6ZSxvY2NTaXplOm4sbWF4U2ltVGhyZXNoOmEsbWluU2ltVGhyZXNoOmcsc2RUaHJlc2g6ZCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an09cjtjb25zdHtkYXRhOkUsd2lkdGg6bCxoZWlnaHQ6UyxzY2FsZTpEfT1zO249TWF0aC5mbG9vcihNYXRoLm1pbihzLndpZHRoLHMuaGVpZ2h0KS8xMCk7Y29uc3Qgaz0obyoyKzEpKjMsQT1NYXRoLmZsb29yKGwvayksaT1NYXRoLmZsb29yKFMvayk7bGV0IHA9TWF0aC5mbG9vcihsL24pKk1hdGguZmxvb3IoUy9uKStBKmk7Y29uc3QgZj1bXSxoPW5ldyBGbG9hdDMyQXJyYXkoRS5sZW5ndGgpO2ZvcihsZXQgdT0wO3U8aC5sZW5ndGg7dSsrKWhbdV09dFt1XTtsZXQgYz0wO2Zvcig7YzxwOyl7bGV0IHU9YSxtPS0xLHg9LTE7Zm9yKGxldCB5PTA7eTxTO3krKylmb3IobGV0IFQ9MDtUPGw7VCsrKWhbeSpsK1RdPHUmJih1PWhbeSpsK1RdLG09VCx4PXkpO2lmKG09PT0tMSlicmVhaztjb25zdCB2PVAoe2ltYWdlOnMsY3g6bSxjeTp4LHNkVGhyZXNoOjAsaW1hZ2VEYXRhQ3Vtc3VtOncsaW1hZ2VEYXRhU3FyQ3Vtc3VtOmp9KTtpZih2PT09bnVsbCl7aFt4KmwrbV09MTtjb250aW51ZX1pZih2LyhvKjIrMSk8ZCl7aFt4KmwrbV09MTtjb250aW51ZX1sZXQgcT0xLF89LTE7Zm9yKGxldCB5PS1lO3k8PWU7eSsrKXtmb3IobGV0IFQ9LWU7VDw9ZTtUKyspe2lmKFQqVCt5Knk+ZSplfHxUPT09MCYmeT09PTApY29udGludWU7Y29uc3QgSD1SKHtpbWFnZTpzLHZsZW46dixjeDptK1QsY3k6eCt5LHR4Om0sdHk6eCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an0pO2lmKEghPT1udWxsJiYoSDxxJiYocT1ILHE8ZyYmcTx1KXx8SD5fJiYoXz1ILF8+Ljk5KSkpYnJlYWt9aWYocTxnJiZxPHV8fF8+Ljk5KWJyZWFrfWlmKHE8ZyYmcTx1fHxfPi45OSl7aFt4KmwrbV09MTtjb250aW51ZX1mLnB1c2goe3g6bSx5Onh9KSxjKz0xO2ZvcihsZXQgeT0tbjt5PD1uO3krKylmb3IobGV0IFQ9LW47VDw9bjtUKyspeCt5PDB8fHgreT49U3x8bStUPDB8fG0rVD49bHx8KGhbKHgreSkqbCsobStUKV09MSl9cmV0dXJuIGZ9LFA9KHtpbWFnZTpyLGN4OnMsY3k6dCxzZFRocmVzaDpvLGltYWdlRGF0YUN1bXN1bTplLGltYWdlRGF0YVNxckN1bXN1bTpufSk9PntpZihzLU08MHx8cytNPj1yLndpZHRofHx0LU08MHx8dCtNPj1yLmhlaWdodClyZXR1cm4gbnVsbDtjb25zdCBhPTIqTSsxLGc9YSphO2xldCBkPWUucXVlcnkocy1NLHQtTSxzK00sdCtNKTtkLz1nO2xldCB3PW4ucXVlcnkocy1NLHQtTSxzK00sdCtNKTtyZXR1cm4gdy09MipkKmUucXVlcnkocy1NLHQtTSxzK00sdCtNKSx3Kz1nKmQqZCx3L2c8bypvP251bGw6KHc9TWF0aC5zcXJ0KHcpLHcpfSxSPXI9Pntjb25zdHtpbWFnZTpzLGN4OnQsY3k6byx2bGVuOmUsdHg6bix0eTphLGltYWdlRGF0YUN1bXN1bTpnLGltYWdlRGF0YVNxckN1bXN1bTpkfT1yLHtkYXRhOncsd2lkdGg6aixoZWlnaHQ6RX09cyxsPU07aWYodC1sPDB8fHQrbD49anx8by1sPDB8fG8rbD49RSlyZXR1cm4gbnVsbDtjb25zdCBTPTIqbCsxO2xldCBEPWcucXVlcnkodC1sLG8tbCx0K2wsbytsKSxrPWQucXVlcnkodC1sLG8tbCx0K2wsbytsKSxBPTAsaT0oby1sKSpqKyh0LWwpLHA9KGEtbCkqaisobi1sKSxmPWotUztmb3IobGV0IG09MDttPFM7bSsrKXtmb3IobGV0IHg9MDt4PFM7eCsrKUErPXdbaV0qd1twXSxpKz0xLHArPTE7aSs9ZixwKz1mfWxldCBoPWcucXVlcnkobi1sLGEtbCxuK2wsYStsKTtoLz1TKlMsQS09aCpEO2xldCBjPWstRCpELyhTKlMpO3JldHVybiBjPT0wP251bGw6KGM9TWF0aC5zcXJ0KGMpLDEqQS8oZSpjKSl9LFc9KHIscyk9Pntjb25zdCB0PVtdO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBlPXJbb10sbj1VKGUpLGE9e2RhdGE6ZS5kYXRhLHNjYWxlOmUuc2NhbGUsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQscG9pbnRzOm59O3QucHVzaChhKSxzKG8pfXJldHVybiB0fSxYPSh7aW1hZ2U6cixyYXRpbzpzfSk9Pntjb25zdCB0PU1hdGgucm91bmQoci53aWR0aCpzKSxvPU1hdGgucm91bmQoci5oZWlnaHQqcyksZT1uZXcgVWludDhBcnJheSh0Km8pO2ZvcihsZXQgbj0wO248dDtuKyspe2xldCBhPU1hdGgucm91bmQoMSpuL3MpLGc9TWF0aC5yb3VuZCgxKihuKzEpL3MpLTE7Zz49ci53aWR0aCYmKGc9ci53aWR0aC0xKTtmb3IobGV0IGQ9MDtkPG87ZCsrKXtsZXQgdz1NYXRoLnJvdW5kKDEqZC9zKSxqPU1hdGgucm91bmQoMSooZCsxKS9zKS0xO2o+PXIuaGVpZ2h0JiYoaj1yLmhlaWdodC0xKTtsZXQgRT0wLGw9MDtmb3IobGV0IFM9YTtTPD1nO1MrKylmb3IobGV0IEQ9dztEPD1qO0QrKylFKz0xKnIuZGF0YVtEKnIud2lkdGgrU10sbCs9MTtlW2QqdCtuXT1NYXRoLmZsb29yKEUvbCl9fXJldHVybntkYXRhOmUsd2lkdGg6dCxoZWlnaHQ6b319LFk9cj0+e2NvbnN0IHM9TWF0aC5taW4oci53aWR0aCxyLmhlaWdodCksdD1bXSxvPVtdO3QucHVzaCgyNTYvcyksdC5wdXNoKDEyOC9zKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylvLnB1c2goT2JqZWN0LmFzc2lnbihYKHtpbWFnZTpyLHJhdGlvOnRbZV19KSx7c2NhbGU6dFtlXX0pKTtyZXR1cm4gb307b25tZXNzYWdlPXI9Pntjb25zdHtkYXRhOnN9PXI7aWYocy50eXBlPT09ImNvbXBpbGUiKXtjb25zdHt0YXJnZXRJbWFnZXM6dH09cyxvPTEwMC90Lmxlbmd0aDtsZXQgZT0wO2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGc9dFthXSxkPVkoZyksdz1vL2QubGVuZ3RoLGo9VyhkLEU9PntlKz13LHBvc3RNZXNzYWdlKHt0eXBlOiJwcm9ncmVzcyIscGVyY2VudDplfSl9KTtuLnB1c2goail9cG9zdE1lc3NhZ2Uoe3R5cGU6ImNvbXBpbGVEb25lIixsaXN0Om59KX19fSkoKTsK",pM=typeof window<"u"&&window.Blob&&new Blob([atob(zL)],{type:"text/javascript;charset=utf-8"});function Gde(){let n;try{if(n=pM&&(window.URL||window.webkitURL).createObjectURL(pM),!n)throw"";return new Worker(n)}catch{return new Worker("data:application/javascript;base64,"+zL)}finally{n&&(window.URL||window.webkitURL).revokeObjectURL(n)}}class Vde extends Ode{createProcessCanvas(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,t}compileTrack({progressCallback:e,targetImages:t,basePercent:s}){return new Promise((i,r)=>{const a=new Gde;a.onmessage=o=>{o.data.type==="progress"?e(s+o.data.percent*s/100):o.data.type==="compileDone"&&i(o.data.list)},a.postMessage({type:"compile",targetImages:t})})}}class Wde{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const s=document.createElement("canvas").getContext("2d");s.canvas.width=e,s.canvas.height=t,this.context=s,this.program=this.buildProgram(e,t);const i=la();this.tempPixelHandle=i.makeTensorInfo(this.texShape,"float32"),i.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return Q(()=>{let t=iS(e);return t=t.mean(2),t})}loadInput(e){const t=this.context;if(t.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),e.width===this.height&&e.height===this.width){let i=this.context.canvas.width/2,r=this.context.canvas.height/2,a=90;t.save(),t.translate(i,r),t.rotate(a*Math.PI/180),t.drawImage(e,-e.width/2,-e.height/2),t.restore()}else this.context.drawImage(e,0,0,e.width,e.height);const s=la();return s.gpgpu.uploadPixelDataToTexture(s.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const s=q().getNumber("WEBGL_VERSION")===2?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`
	void main() {
	  ivec2 coords = getOutputCoords();
	  int texR = coords[0];
	  int texC = coords[1];
	  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);

	  vec4 values = ${s}(A, uv);
	  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);
	}
      `}}_compileAndRun(e,t){const s=la().compileAndRun(e,t);return Dt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}_runWebGLProgram(e,t,s){const i=la().runWebGLProgram(e,t,s);return Dt().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}}const Vx={memory:vd,nextFrame:pf},$de=.001,Ude=1e3,Bde=5,Xde=5;class Hde{constructor({inputWidth:e,inputHeight:t,onUpdate:s=null,debugMode:i=!1,maxTrack:r=1,warmupTolerance:a=null,missTolerance:o=null,filterMinCF:l=null,filterBeta:c=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=r,this.filterMinCF=l===null?$de:l,this.filterBeta=c===null?Ude:c,this.warmupTolerance=a===null?Bde:a,this.missTolerance=o===null?Xde:o,this.cropDetector=new $he(this.inputWidth,this.inputHeight,i),this.inputLoader=new Wde(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=s,this.debugMode=i,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=10,h=1e5,d=45*Math.PI/180,p=this.inputHeight/2/Math.tan(d/2);this.projectionTransform=[[p,0,this.inputWidth/2],[0,p,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:u,far:h}),this.worker=new Xue,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=m=>{m.data.type==="matchDone"&&this.workerMatchDone!==null&&this.workerMatchDone(m.data),m.data.type==="trackUpdateDone"&&this.workerTrackDone!==null&&this.workerTrackDone(m.data)}}showTFStats(){console.log(Vx.memory().numTensors),console.table(Vx.memory())}addImageTargets(e){return new Promise(async(t,s)=>{const i=await(await fetch(e)).arrayBuffer(),r=this.addImageTargetsFromBuffer(i);t(r)})}addImageTargetsFromBuffer(e){const t=new Vde().importData(e),s=[],i=[],r=[];for(let a=0;a<t.length;a++)i.push(t[a].matchingData),s.push(t[a].trackingData),r.push([t[a].targetImage.width,t[a].targetImage.height]);return this.tracker=new the(r,s,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:i}),this.markerDimensions=r,{dimensions:r,matchingDataList:i,trackingDataList:s}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getRotatedZ90Matrix(e){return[-e[1],e[0],e[2],e[3],-e[5],e[4],e[6],e[7],-e[9],e[8],e[10],e[11],-e[13],e[12],e[14],e[15]]}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:s}=this.cropDetector.detectMoving(e),{targetIndex:i,modelViewTransform:r}=await this._workerMatch(s,t);return{targetIndex:i,modelViewTransform:r}}async _trackAndUpdate(e,t,s){const{worldCoords:i,screenCoords:r}=this.tracker.track(e,t,s);return i.length<4?null:await this._workerTrackUpdate(t,{worldCoords:i,screenCoords:r})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.markerDimensions.length;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new _W({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce((s,i)=>s+(i.isTracking?1:0),0)<this.maxTrack){const s=[];for(let a=0;a<this.trackingStates.length;a++)this.trackingStates[a].isTracking!==!0&&(this.interestedTargetIndex!==-1&&this.interestedTargetIndex!==a||s.push(a));const{targetIndex:i,modelViewTransform:r}=await this._detectAndMatch(t,s);i!==-1&&(this.trackingStates[i].isTracking=!0,this.trackingStates[i].currentModelViewTransform=r)}for(let s=0;s<this.trackingStates.length;s++){const i=this.trackingStates[s];if(i.isTracking){let r=await this._trackAndUpdate(t,i.currentModelViewTransform,s);r===null?i.isTracking=!1:i.currentModelViewTransform=r}if(i.showing||i.isTracking&&(i.trackMiss=0,i.trackCount+=1,i.trackCount>this.warmupTolerance&&(i.showing=!0,i.trackingMatrix=null,i.filter.reset())),i.showing&&(i.isTracking?i.trackMiss=0:(i.trackCount=0,i.trackMiss+=1,i.trackMiss>this.missTolerance&&(i.showing=!1,i.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:s,worldMatrix:null})))),i.showing){const r=this._glModelViewMatrix(i.currentModelViewTransform,s);i.trackingMatrix=i.filter.filter(Date.now(),r);let a=[];for(let o=0;o<i.trackingMatrix.length;o++)a[o]=i.trackingMatrix[o];e.width===this.inputHeight&&e.height===this.inputWidth&&(a=this.getRotatedZ90Matrix(a)),this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:s,worldMatrix:a})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await Vx.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:s,debugExtra:i}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:s,debugExtra:i}}async match(e,t){const{modelViewTransform:s,debugExtra:i}=await this._workerMatch(e,[t]);return{modelViewTransform:s,debugExtra:i}}async track(e,t,s){const i=this.inputLoader.loadInput(e),r=this.tracker.track(i,t,s);return i.dispose(),r}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise(async(s,i)=>{this.workerMatchDone=r=>{s({targetIndex:r.targetIndex,modelViewTransform:r.modelViewTransform,debugExtra:r.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})})}_workerTrackUpdate(e,t){return new Promise(async(s,i)=>{this.workerTrackDone=o=>{s(o.modelViewTransform)};const{worldCoords:r,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:r,screenCoords:a})})}_glModelViewMatrix(e,t){const s=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*s+e[0][3],-(e[1][1]*s+e[1][3]),-(e[2][1]*s+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:s,near:i,far:r}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/s,-(2*e[1][2]/s-1),0],[0,0,-(r+i)/(r-i),-2*r*i/(r-i)],[0,0,-1,0]],o=[];for(let l=0;l<4;l++)for(let c=0;c<4;c++)o.push(a[c][l]);return o}}const fM=new ae,Zde=new wa,mM=new ae,gr=new un,Kde=new un;class Yde{constructor(e={}){const t=this;let s,i,r,a;const o={camera:{fov:0,style:""},objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l;const c=document.createElement("div");c.style.transformOrigin="0 0",c.style.pointerEvents="none",l.appendChild(c);const u=document.createElement("div");u.style.transformStyle="preserve-3d",c.appendChild(u),this.getSize=function(){return{width:s,height:i}},this.render=function(g,f){const y=f.projectionMatrix.elements[5]*a;o.camera.fov!==y&&(c.style.perspective=f.isPerspectiveCamera?y+"px":"",o.camera.fov=y),f.view&&f.view.enabled?(c.style.transform=`translate( ${-f.view.offsetX*(s/f.view.width)}px, ${-f.view.offsetY*(i/f.view.height)}px )`,c.style.transform+=`scale( ${f.view.fullWidth/f.view.width}, ${f.view.fullHeight/f.view.height} )`):c.style.transform="",g.matrixWorldAutoUpdate===!0&&g.updateMatrixWorld(),f.parent===null&&f.matrixWorldAutoUpdate===!0&&f.updateMatrixWorld();let b,x;f.isOrthographicCamera&&(b=-(f.right+f.left)/2,x=(f.top+f.bottom)/2);const v=f.view&&f.view.enabled?f.view.height/f.view.fullHeight:1,_=(f.isOrthographicCamera?`scale( ${v} )scale(`+y+")translate("+h(b)+"px,"+h(x)+"px)"+d(f.matrixWorldInverse):`scale( ${v} )translateZ(`+y+"px)"+d(f.matrixWorldInverse))+"translate("+r+"px,"+a+"px)";o.camera.style!==_&&(u.style.transform=_,o.camera.style=_),m(g,g,f)},this.setSize=function(g,f){s=g,i=f,r=s/2,a=i/2,l.style.width=g+"px",l.style.height=f+"px",c.style.width=g+"px",c.style.height=f+"px",u.style.width=g+"px",u.style.height=f+"px"};function h(g){return Math.abs(g)<1e-10?0:g}function d(g){const f=g.elements;return"matrix3d("+h(f[0])+","+h(-f[1])+","+h(f[2])+","+h(f[3])+","+h(f[4])+","+h(-f[5])+","+h(f[6])+","+h(f[7])+","+h(f[8])+","+h(-f[9])+","+h(f[10])+","+h(f[11])+","+h(f[12])+","+h(-f[13])+","+h(f[14])+","+h(f[15])+")"}function p(g){const f=g.elements;return"translate(-50%,-50%)"+("matrix3d("+h(f[0])+","+h(f[1])+","+h(f[2])+","+h(f[3])+","+h(-f[4])+","+h(-f[5])+","+h(-f[6])+","+h(-f[7])+","+h(f[8])+","+h(f[9])+","+h(f[10])+","+h(f[11])+","+h(f[12])+","+h(f[13])+","+h(f[14])+","+h(f[15])+")")}function m(g,f,y,b){if(g.isCSS3DObject){const x=g.visible===!0&&g.layers.test(y.layers)===!0;if(g.element.style.display=x===!0?"":"none",x===!0){g.onBeforeRender(t,f,y);let v;g.isCSS3DSprite?(gr.copy(y.matrixWorldInverse),gr.transpose(),g.rotation2D!==0&&gr.multiply(Kde.makeRotationZ(g.rotation2D)),g.matrixWorld.decompose(fM,Zde,mM),gr.setPosition(fM),gr.scale(mM),gr.elements[3]=0,gr.elements[7]=0,gr.elements[11]=0,gr.elements[15]=1,v=p(gr)):v=p(g.matrixWorld);const w=g.element,_=o.objects.get(g);if(_===void 0||_.style!==v){w.style.transform=v;const T={style:v};o.objects.set(g,T)}w.parentNode!==u&&u.appendChild(w),g.onAfterRender(t,f,y)}}for(let x=0,v=g.children.length;x<v;x++)m(g.children[x],f,y)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jde(n){E(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),E(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((i,r)=>k(i,`tensors${r}`,"addN")),t=e[0];e.forEach(i=>{if(i.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(i=>{if(!vt(i.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return W.runKernel(Zd,s)}const GL=$({addN_:jde});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qde(n,e,t,s,i,r){const a=k(n,"forgetBias","basicLSTMCell"),o=k(e,"lstmKernel","basicLSTMCell"),l=k(t,"lstmBias","basicLSTMCell"),c=k(s,"data","basicLSTMCell"),u=k(i,"c","basicLSTMCell"),h=k(r,"h","basicLSTMCell"),d=mn([c,h],1),p=pt(d,o),m=he(p,l),g=m.shape[0],f=m.shape[1]/4,y=[g,f],b=St(m,[0,0],y),x=St(m,[0,f],y),v=St(m,[0,f*2],y),w=St(m,[0,f*3],y),_=he(Z(nr(b),yl(x)),Z(u,nr(he(a,v)))),T=Z(yl(_),nr(w));return[_,T]}const VL=$({basicLSTMCell_:Qde});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jde(n,e){const t=k(n,"s0","broadcastArgs","int32"),s=k(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const i={s0:t,s1:s};return W.runKernel($g,i)}const WL=$({broadcastArgs_:Jde});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qde(n){const e={x:k(n,"x","diag")};return W.runKernel(qg,e)}const $L=$({diag_:qde});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function epe(n,...e){const t=e.map((i,r)=>k(i,`tensors${r}`,"einsum")),s={equation:n};return W.runKernel(e0,t,s)}const UL=$({einsum_:epe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return W.runKernel(l0,{},s)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wm=2147483648;function tpe(n,e,t="left"){const s=k(n,"sortedSequence","searchSorted"),i=k(e,"values","searchSorted"),r=s.shape[s.shape.length-1],a=i.shape[i.shape.length-1],o=K(s,[-1,r]),l=K(i,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(oe(l.shape)>=wm)throw new Error(`values tensor size must less than ${wm}`);if(o.shape[1]>=wm)throw new Error(`trailing dim_size must less than ${wm} for int32 output type, was ${o.shape[1]}`);const c={sortedSequence:o,values:l},u={side:t};return W.runKernel(I0,c,u)}const rb=$({searchSorted_:tpe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,e){return rb(n,e,"left")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function npe(n,e,t,s,i=!1){const r={x:k(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:i},o=W.runKernel(d0,r,a);return{result:o[0],indexes:o[1]}}const HL=$({maxPoolWithArgmax_:npe});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=k(n,"x","meshgrid",n instanceof Ct?n.dtype:"float32");if(e===void 0)return[s];let i=k(e,"y","meshgrid",e instanceof Ct?e.dtype:"float32");const r=oe(s.shape),a=oe(i.shape);return t==="xy"?(s=K(s,[1,-1]),i=K(i,[-1,1]),[pt(Hs([a,1],s.dtype),s),pt(i,Hs([1,r],i.dtype))]):(s=K(s,[-1,1]),i=K(i,[1,-1]),[pt(s,Hs([1,a],s.dtype)),pt(Hs([r,1],i.dtype),i)])}function spe(n,e,t,s){const i=k(e,"data","multiRNNCell"),r=xd(t,"c","multiRNNCell"),a=xd(s,"h","multiRNNCell");let o=i;const l=[];for(let h=0;h<n.length;h++){const d=n[h](o,r[h],a[h]);l.push(d[0]),l.push(d[1]),o=d[1]}const c=[],u=[];for(let h=0;h<l.length;h+=2)c.push(l[h]),u.push(l[h+1]);return[c,u]}const KL=$({multiRNNCell_:spe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ipe(n,e,t,s=!1){const i=k(n,"logits","multinomial"),r=i.size,a=i.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const o={logits:a===1?K(i,[1,-1]):i},l={numSamples:e,seed:t,normalized:s},c=W.runKernel(p0,o,l);return a===1?K(c,[c.size]):c}const YL=$({multinomial_:ipe});function rpe(n,e){const t=k(n,"v1","outerProduct"),s=k(e,"v2","outerProduct");E(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const i=K(t,[-1,1]),r=K(s,[1,-1]);return pt(i,r)}const jL=$({outerProduct_:rpe});function ape(n,e,t=0){return E(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ma(n,[e],t)}const QL=$({pad1d_:ape});function ope(n,e,t=0){return E(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ma(n,e,t)}const JL=$({pad2d_:ope});function lpe(n,e,t=0){return E(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ma(n,e,t)}const qL=$({pad3d_:lpe});function cpe(n,e,t=0){return E(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ma(n,e,t)}const e3=$({pad4d_:cpe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function upe(n,e,t,s){const i=n.map((u,h)=>k(u,`tensors${h}`,"raggedGather","int32")),r=k(e,"paramsDenseValues","raggedGather"),a=k(t,"indices","raggedGather","int32"),o={paramsNestedSplits:i,paramsDenseValues:r,indices:a},l={outputRaggedRank:s},c=W.runKernel(y0,o,l);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const t3=$({raggedGather_:upe});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hpe(n,e,t){const s=k(n,"starts","raggedRange"),i=k(e,"limits","raggedRange",s.dtype),r=k(t,"deltas","raggedRange",s.dtype),a={starts:s,limits:i,deltas:r},o=W.runKernel(b0,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const n3=$({raggedRange_:hpe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dpe(n,e,t,s,i){const r=k(n,"shape","raggedTensorToTensor","int32"),a=k(e,"values","raggedTensorToTensor"),o=k(t,"defaultValue","raggedTensorToTensor",a.dtype),l=s.map((h,d)=>k(h,`tensors${d}`,"raggedTensorToTensor","int32")),c={shape:r,values:a,defaultValue:o,rowPartitionTensors:l},u={rowPartitionTypes:i};return W.runKernel(x0,c,u)}const s3=$({raggedTensorToTensor_:dpe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ppe(n,e,t){ii(n);const s=oe(n);let i=null;if(t==null||t==="float32")i=new Float32Array(s);else if(t==="int32")i=new Int32Array(s);else if(t==="bool")i=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let r=0;r<s;r++)i[r]=e();return W.makeTensor(i,n,t)}const i3=$({rand_:ppe});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fpe=.001,r3=.1;function mpe(n,e,t){return t==null&&(t=xT()),K1(n,e,(s,i)=>vT(s,i,t))}function xT(){return W.backend.floatPrecision()===32?fpe:r3}function K1(n,e,t){let s=!0;if((On(n)||On(e))&&(s=!1),On(n)&&On(e)&&(s=!0),s){const a=n.constructor.name,o=e.constructor.name;if(a!==o)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${o}`)}if(Array.isArray(n)&&Array.isArray(e)){const a=Or(n),o=Or(e);if(!vt(a,o))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${o}]`)}const i=On(n)?n:Fr(n),r=On(e)?e:Fr(e);if(i.length!==r.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${r.length}.
Actual:   ${i}.
Expected: ${r}.`);for(let a=0;a<r.length;++a){const o=i[a],l=r[a];if(!t(o,l))throw new Error(`Arrays differ: actual[${a}] = ${o}, expected[${a}] = ${l}.
Actual:   ${i}.
Expected: ${r}.`)}typeof expect<"u"&&expect().nothing()}function gpe(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function ype(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Tr(n)||Tr(n[0])||Tr(e)||Tr(e[0])?K1(n,t,(s,i)=>s==i):K1(n,e,(s,i)=>vT(s,i,0))}function bpe(n,e,t){if(t==null&&(t=xT()),!vT(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function vT(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function xpe(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function vpe(n,e){const t=new Float32Array(n),s=new Float32Array(e);if(t.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${t.length}`);for(let i=0;i<s.length;i++)if(t[i]!==s[i])throw new Error(`Expected ArrayBuffer value at ${i} to be ${s[i]} but got ${t[i]} instead`)}function a3(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?a3(t):n[e]=Nr(t)}return n}function wpe(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",s=>t(e)),e.load()})}async function Spe(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const _pe=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:r3,createVideoElement:wpe,encodeStrings:a3,expectArrayBuffersEqual:vpe,expectArraysClose:mpe,expectArraysEqual:ype,expectNumbersClose:bpe,expectPromiseToFail:gpe,expectValuesInRange:xpe,play:Spe,testEpsilon:xT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tpe(n,e,t=1,s="float32",i){if(ii(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const r=new XX(e,t,s,i),a=ct(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=r.nextValue();return a.toTensor()}const o3=$({randomGamma_:Tpe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ipe(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return ty(n,0,1,e,t)}const l3=$({randomStandardNormal_:Ipe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cpe(n){const e=k(n,"x","reverse");return E(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),bi(e,0)}const c3=$({reverse1d_:Cpe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpe(n,e){const t=k(n,"x","reverse");return E(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),bi(t,e)}const u3=$({reverse2d_:Mpe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Epe(n,e){const t=k(n,"x","reverse");return E(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),bi(t,e)}const h3=$({reverse3d_:Epe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kpe(n,e){const t=k(n,"x","reverse");return E(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),bi(t,e)}const d3=$({reverse4d_:kpe});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Npe(n,e){const t=k(n,"x","setdiff1d"),s=k(e,"y","setdiff1d");E(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),E(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),E(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const i=await t.data(),r=await s.data(),a=new Set(r);let o=0;for(let u=0;u<i.length;u++)a.has(i[u])||o++;const l=new Rn([o],t.dtype),c=new Rn([o],"int32");for(let u=0,h=0;u<i.length;u++)a.has(i[u])||(l.values[h]=i[u],c.values[h]=u,h++);return[l.toTensor(),c.toTensor()]}const p3=Npe;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(n,e,t){if(Rl(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Or(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return yo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(n,e,t){if(Rl(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Or(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return yo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g3(n,e,t){if(Rl(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Or(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,yo(n,e,s,t)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n,e){return rb(n,e,"right")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Rpe(n){const e=k(n,"condition","whereAsync","bool"),t=await e.data(),s=fy(e.shape,t);return n!==e&&e.dispose(),s}const wT=Rpe;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ape(n,e,t){const s=k(n,"tensor","boolMask"),i=k(e,"mask","boolMask","bool"),r=t??0,a=i.rank,o=s.shape;E(a>0,()=>"mask cannot be scalar"),Jn(o.slice(r,r+a),i.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=r;g<r+a;g++)l*=o[g];const c=o.slice(0,r).concat([l],o.slice(r+a)),u=K(s,c),h=K(i,[-1]),d=await wT(h),p=wo(d,[1]),m=ph(u,p,r);return n!==s&&s.dispose(),e!==i&&i.dispose(),p.dispose(),u.dispose(),h.dispose(),d.dispose(),m}const b3=Ape;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lpe(n,e,t,s,i=!0){const r=k(n,"v","movingAverage"),a=k(e,"x","movingAverage"),o=k(t,"decay","movingAverage");XE(r,a),E(vt(r.shape,a.shape),()=>"Shape mismatch in v and x");const l=Ze(1),c=De(l,o);let u=Z(De(a,r),c);if(i){E(s!=null,()=>"When using zeroDebias: true, step is required.");const h=k(s,"step","movingAverage");u=We(u,De(l,ga(o,h)))}return he(r,u)}const x3=$({movingAverage_:Lpe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ppe(n,e,t){ii(t);const s=k(n,"indices","scatterND","int32"),i=k(e,"updates","scatterND");Bw(i,s,t);const r={indices:s,updates:i},a={shape:t};return W.runKernel(T0,r,a)}const v3=$({scatterND_:Ppe});function Dpe(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const i=n.rank>0?n.shape[0]:1,r=n.rank>1?n.shape[1]:1;if(t.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${r}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===i))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${i}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fpe(n,e,t,s=0){ii(t);const i=k(n,"sparseIndices","sparseToDense","int32"),r=k(e,"sparseValues","sparseToDense","string_or_numeric"),a=k(s,"defaultValue","sparseToDense",r.dtype);Dpe(i,r,t,a);const o={sparseIndices:i,sparseValues:r,defaultValue:a},l={outputShape:t};return W.runKernel(N0,o,l)}const w3=$({sparseToDense_:Fpe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ope(n,e){const t=k(e,"indices","gatherND","int32"),s={params:k(n,"x","gatherND","string_or_numeric"),indices:t};return W.runKernel(r0,s)}const S3=$({gatherND_:Ope});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zpe(n,e,t=1){const s=k(n,"predictions","inTopK"),i=k(e,"targets","inTopK");E(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),E(s.rank-1===i.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${i.rank}`),Jn(s.shape.slice(0,s.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];E(t>0&&t<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${t}`);const a=await s.data(),o=await i.data(),[l,c]=[a.length/r,r],u=Pn("bool",l);for(let h=0;h<l;h++){const d=h*c,p=a.subarray(d,d+c),m=[];for(let g=0;g<p.length;g++)m.push({value:p[g],index:g});m.sort((g,f)=>f.value-g.value),u[h]=0;for(let g=0;g<t;g++)if(m[g].index===o[h]){u[h]=1;break}}return n!==s&&s.dispose(),e!==i&&i.dispose(),Jt(u,i.shape,"bool")}const _3=zpe;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gpe({x:n,filter:e,strides:t,pad:s,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(xy(W.state.gradientDepth,l)===!1){let w=ch(n,e,t,s,i,r,a);return o!=null&&(w=he(w,o)),by(w,l,c,u)}const h=k(n,"x","depthwiseConv2d","float32"),d=k(e,"filter","depthwiseConv2d","float32");let p=h,m=!1;h.rank===3&&(m=!0,p=K(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),E(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),E(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),r==null&&(r=[1,1]),E(qn(t,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),vs("fused depthwiseConv2d",s,a);const g=$n(p.shape,d.shape,t,r,s,a,!0);let f;o!=null&&(f=k(o,"bias","fused conv2d"),[f]=rn(f,h),st(g.outShape,f.shape));let y;c!=null&&(y=k(c,"prelu weights","fused depthwiseConv2d"));const b=(w,_)=>{E(oo(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[T,C,S,M]=_,A=gy(w,S,l),P=bk(C.shape,A,T,t,s,r,a),D=yk(C,A,T.shape,t,s,r,a);if(M!=null){const N=yy(f,A);return[P,D,N]}return[P,D]},x={x:p,filter:d,bias:f,preluActivationWeights:y},v={strides:t,pad:s,dataFormat:i,dilations:r,dimRoundingMode:a,activation:l,leakyreluAlpha:u};return o==null?zr((w,_,T)=>{let C=W.runKernel(gd,x,v);return T([_,w,C]),m&&(C=K(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:b}})(p,d):zr((w,_,T,C)=>{let S=W.runKernel(gd,x,v);return C([_,w,S,T]),m&&(S=K(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:b}})(p,d,f)}const Vpe=$({fusedDepthwiseConv2d_:Gpe});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3=Object.freeze(Object.defineProperty({__proto__:null,conv2d:gk,depthwiseConv2d:Vpe,matMul:C1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wpe="model",$pe=".json",Upe=".weights.bin";function gM(n){return new Promise(e=>setTimeout(e)).then(n)}class Cl{constructor(e){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Cl.URL_SCHEME)&&(e=e.slice(Cl.URL_SCHEME.length)),(e==null||e.length===0)&&(e=Wpe),this.modelJsonFileName=e+$pe,this.weightDataFileName=e+Upe}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=YE(e,s),r=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await gM(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await gM(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Kp(e)}}}}Cl.URL_SCHEME="downloads://";class Bpe{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=i=>{const r=JSON.parse(i.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const o=Uv(r,l=>this.loadWeights(l));e(o)},s.onerror=i=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const a of e)t.push(...a.weights),s.push(...a.paths);const i=this.checkManifestAndWeightFiles(e),r=s.map(a=>this.loadWeightsFile(a,i[a]));return Promise.all(r).then(a=>[t,$0(a)])}loadWeightsFile(e,t){return new Promise((s,i)=>{const r=new FileReader;r.onload=a=>{const o=a.target.result;s(o)},r.onerror=a=>i(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(r=>UI(r.name)),i={};for(const r of e)r.paths.forEach(a=>{const o=UI(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),s.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);i[a]=this.weightsFiles[s.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return i}}const Xpe=n=>q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Cl.URL_SCHEME)?Hpe(n.slice(Cl.URL_SCHEME.length)):null;tn.registerSaveRouter(Xpe);function Hpe(n="model"){return new Cl(n)}function Zpe(n){return new Bpe(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wx{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class I3{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Kpe{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Ype(n,e,t,s){const i=arguments;return new Kpe(bg(...i))}function bg(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Wx(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wx({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wx({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function jpe(n){return new I3(n)}function Qpe(n){return new I3(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ST=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:Zpe,browserHTTPRequest:Ak,concatenateArrayBuffers:$0,copyModel:X$,decodeWeights:Vv,encodeWeights:w1,fromMemory:Ype,fromMemorySync:bg,getLoadHandlers:QE,getModelArtifactsForJSON:Uv,getModelArtifactsForJSONSync:$v,getModelArtifactsInfoForJSON:Kp,getSaveHandlers:jE,getWeightSpecs:Bv,http:sS,isHTTPScheme:M1,listModels:U$,loadWeights:kk,moveModel:H$,registerLoadRouter:R$,registerSaveRouter:N$,removeModel:B$,weightsLoaderFactory:Nk,withSaveHandler:jpe,withSaveHandlerSync:Qpe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jpe(n,e,t){const s=k(n,"labels","confusionMatrix"),i=k(e,"predictions","confusionMatrix");E(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),E(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),E(i.rank===1,()=>`Expected the rank of predictions to be 1, but got ${i.rank}`),E(s.shape[0]===i.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${i.shape[0]}. Labels and predictions should have the same number of elements.`),E(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const r=Wc(we(s,"int32"),t),a=Wc(we(i,"int32"),t),o=bt(r),l=pt(o,a);return we(l,"int32")}const qpe=$({confusionMatrix_:Jpe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const efe=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:qpe},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const C3="4.2.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tfe=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:vy,nonMaxSuppressionV4Impl:wy,nonMaxSuppressionV5Impl:Sy,whereImpl:fy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nfe(n){return new WS(n)}function sfe(n){return new $S(n)}function ife(){return new US}function rfe(n){return new BS(n)}const afe=Object.freeze(Object.defineProperty({__proto__:null,maxNorm:nfe,minMaxNorm:rfe,nonNeg:ife,unitNorm:sfe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ofe(){return new AS}function lfe(){return new Ry}function cfe(n){return new LS(n)}function ufe(n){return new PS(n)}function hfe(n){return new DS(n)}function dfe(n){return new FS(n)}function pfe(n){return new OS(n)}function ffe(n){return new Ps(n)}function mfe(n){return new Ay(n)}function gfe(n){return new Ly(n)}function yfe(n){return new Py(n)}function bfe(n){return new Dy(n)}function xfe(n){return new Fy(n)}function vfe(n){return new Oy(n)}function wfe(n){return new zS(n)}const Sfe=Object.freeze(Object.defineProperty({__proto__:null,constant:cfe,glorotNormal:gfe,glorotUniform:mfe,heNormal:yfe,heUniform:bfe,identity:pfe,leCunNormal:xfe,leCunUniform:vfe,ones:lfe,orthogonal:wfe,randomNormal:hfe,randomUniform:ufe,truncatedNormal:dfe,varianceScaling:ffe,zeros:ofe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _fe(n){return new ca(n)}function Tfe(n){return new $y(n)}function M3(n){return LN(n)}function Ife(n,e){XS.registerCallbackConstructor(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cfe(n){return new xh(n)}function Mfe(n){return new t_(n)}function Efe(n){return new JS(n)}function kfe(n){return new qS(n)}function Nfe(n){return new e_(n)}function Rfe(n){return new s_(n)}function Afe(n){return new n_(n)}function Lfe(n){return new _f(n)}function Pfe(n){return new Sh(n)}function Dfe(n){return new r_(n)}function Ffe(n){return new _h(n)}function Ofe(n){return new a_(n)}function zfe(n){return new o_(n)}function Gfe(n){return new l_(n)}function Vfe(n){return new c_(n)}function Wfe(n){return new u_(n)}function $fe(n){return new b_(n)}function Ufe(n){return new g_(n)}function Bfe(n){return new Ky(n)}function Xfe(n){return new m_(n)}function Hfe(n){return new y_(n)}function Zfe(n){return new x_(n)}function Kfe(n){return new v_(n)}function Yfe(n){return new w_(n)}function jfe(n){return new __(n)}function Qfe(n){return new T_(n)}function Jfe(n){return new C_(n)}function qfe(n){return new k_(n)}function eme(n){return new M_(n)}function tme(n){return new E_(n)}function nme(n){return new I_(n)}function sme(n){return new N_(n)}function ime(n){return new P_(n)}function rme(n){return new D_(n)}function ame(n){return new F_(n)}function _T(n){return new z_(n)}function ome(n){return _T(n)}function lme(n){return _T(n)}function TT(n){return new V_(n)}function cme(n){return TT(n)}function ume(n){return TT(n)}function IT(n){return new $_(n)}function hme(n){return IT(n)}function dme(n){return IT(n)}function pme(n){return new U_(n)}function fme(n){return new X_(n)}function E3(n){return new B_(n)}function k3(n){return new H_(n)}function N3(n){return new O_(n)}function R3(n){return new G_(n)}function mme(n){return new W_(n)}function gme(n){return new d_(n)}function yme(n){return new Xy(n)}function bme(n){return new p_(n)}function xme(n){return new If(n)}function vme(n){return new h_(n)}function wme(n){return new By(n)}function Sme(n){return new f_(n)}function _me(n){return new Zy(n)}function Tme(n){return new pr(n)}function Ime(n){return new Hy(n)}function Cme(n){return new K_(n)}function Mme(n){return new Z_(n)}const Eme=E3,kme=k3,Nme=N3,Rme=R3;function Ame(n){return new R_(n)}function Lme(n){return new A_(n)}function Pme(n){return new L_(n)}function Dme(n){return new S_(n)}function Fme(n){return new Y_(n)}function Ome(n){return new j_(n)}function zme(n){return new J_(n)}function Gme(n){return new Q_(n)}const Vme=Object.freeze(Object.defineProperty({__proto__:null,Layer:yt,RNN:pr,RNNCell:Tf,activation:$fe,add:Qfe,alphaDropout:Pme,average:Jfe,averagePooling1d:_T,averagePooling2d:TT,averagePooling3d:IT,avgPool1d:ome,avgPool2d:cme,avgPool3d:hme,avgPooling1d:lme,avgPooling2d:ume,avgPooling3d:dme,batchNormalization:ime,bidirectional:Cme,categoryEncoding:Gme,centerCrop:Ome,concatenate:qfe,conv1d:Lfe,conv2d:Pfe,conv2dTranspose:Dfe,conv3d:Ffe,conv3dTranspose:Ofe,convLstm2d:Sme,convLstm2dCell:_me,cropping2D:Gfe,dense:Ufe,depthwiseConv2d:Wfe,dot:sme,dropout:Bfe,elu:Mfe,embedding:jfe,flatten:Hfe,gaussianDropout:Lme,gaussianNoise:Ame,globalAveragePooling1d:pme,globalAveragePooling2d:fme,globalMaxPool1d:Eme,globalMaxPool2d:kme,globalMaxPooling1d:E3,globalMaxPooling2d:k3,gru:gme,gruCell:yme,input:M3,inputLayer:Cfe,layerNormalization:rme,leakyReLU:kfe,lstm:bme,lstmCell:xme,masking:Dme,maxPool1d:Nme,maxPool2d:Rme,maxPooling1d:N3,maxPooling2d:R3,maxPooling3d:mme,maximum:eme,minimum:tme,multiply:nme,permute:Yfe,prelu:Nfe,reLU:Efe,repeatVector:Zfe,rescaling:Fme,reshape:Kfe,resizing:zme,rnn:Tme,separableConv2d:zfe,simpleRNN:vme,simpleRNNCell:wme,softmax:Rfe,spatialDropout1d:Xfe,stackedRNNCells:Ime,thresholdedReLU:Afe,timeDistributed:Mme,upSampling2d:Vfe,zeroPadding2d:ame},Symbol.toStringTag,{value:"Module"}));function Wme(n,e){return ZS(n,e)}function $me(n,e){return $N(n,e)}function Ume(n,e){return UN(n,e)}function Bme(n,e){return KS(n,e)}function Xme(n,e){return YS(n,e)}function Hme(n,e){return WN(n,e)}function Zme(n,e){return M9(n,e)}function Kme(n,e){return HS(n,e)}function Yme(n,e){return Gy(n,e)}function jme(n,e){return vh(n,e)}function Qme(n,e){return vh(n,e)}function Jme(n,e){return vh(n,e)}function qme(n,e){return $l(n,e)}function ege(n,e){return $l(n,e)}function tge(n,e){return $l(n,e)}const nge=Object.freeze(Object.defineProperty({__proto__:null,MAPE:Qme,MSE:ege,binaryAccuracy:Wme,binaryCrossentropy:$me,categoricalAccuracy:Bme,categoricalCrossentropy:Xme,cosineProximity:Kme,mape:Jme,meanAbsoluteError:Yme,meanAbsolutePercentageError:jme,meanSquaredError:qme,mse:tge,precision:Hme,recall:Zme,sparseCategoricalAccuracy:Ume},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sge=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON:nY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ige(n){return new Sf(n)}function rge(n){return aY(n)}function age(n){return oY(n)}const oge=Object.freeze(Object.defineProperty({__proto__:null,l1:rge,l1l2:ige,l2:age},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class A3 extends Hc{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof ca))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Sm(n,e){return n<e}function yM(n,e){return n>e}class L3 extends A3{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new lt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Sm:this.mode==="max"?this.monitorFunc=yM:this.monitor.indexOf("acc")!==-1?this.monitorFunc=yM:this.monitorFunc=Sm,this.monitorFunc===Sm&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Sm?1/0:-1/0}async onEpochEnd(e,t){await Fa(t);const s=this.getMonitorValue(t);s!=null&&(this.monitorFunc(s-this.minDelta,this.best)?(this.best=s,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});const t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function lge(n){return new L3(n)}const cge={earlyStopping:lge};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CT={};function uge(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};CT[n]=t}function P3(n){return CT[n]}function hge(n){delete CT[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,e,t,s,i){const r=e.inputParams[n];if(r&&r.inputIndexStart!==void 0){const o=r.inputIndexStart,l=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?o+1:r.inputIndexEnd;if(r.type==="tensor")return fs(e.inputNames[r.inputIndexStart],t,s,i);if(r.type==="tensors")return e.inputNames.slice(o,l).map(h=>fs(h,t,s,i));const c=fs(e.inputNames.slice(o)[0],t,s,i),u=c.dataSync();return r.type==="number"?u[0]:fi(c.shape,u)}const a=e.attrParams[n];return a&&a.value}function fs(n,e,t,s){const[i,r]=Ws(n);if(s!=null){const o=s.getHashTableHandleByName(i);if(o!=null)return o}const a=t.currentContextIds.find(o=>!!e[xg(i,o)]);return a!==void 0?e[xg(i,a)][r]:void 0}function dge(n,e,t){return e[xg(n,t.currentContextId)]}function ta(n,e){const[t,s,i]=Ws(n);return[xg(t,e&&e.currentContextId),s,i]}function xg(n,e){return e?`${n}-${e}`:n}function Ws(n){const e=n.split(":");if(e.length===1)return[n,0,void 0];const t=e[0],s=e.length===3?e[1]:void 0,i=Number(e[e.length-1]);return[t,i,s]}function Nm(n,e,t){let s=I("pad",n,e,t);if(s==="explicit"){s=I("explicitPaddings",n,e,t);const i=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)i[r][0]=s[r*2],i[r][1]=s[r*2+1];return i}return s}function na(n){return n.kept?n:Rr(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pge=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fge=Object.freeze(Object.defineProperty({__proto__:null,json:pge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mge=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gge=Object.freeze(Object.defineProperty({__proto__:null,json:mge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yge=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],bge=Object.freeze(Object.defineProperty({__proto__:null,json:yge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xge=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],vge=Object.freeze(Object.defineProperty({__proto__:null,json:xge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wge=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Sge=Object.freeze(Object.defineProperty({__proto__:null,json:wge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ge=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Tge=Object.freeze(Object.defineProperty({__proto__:null,json:_ge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ige=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Cge=Object.freeze(Object.defineProperty({__proto__:null,json:Ige},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mge=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Ege=Object.freeze(Object.defineProperty({__proto__:null,json:Mge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kge=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Nge=Object.freeze(Object.defineProperty({__proto__:null,json:kge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rge=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Age=Object.freeze(Object.defineProperty({__proto__:null,json:Rge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lge=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Pge=Object.freeze(Object.defineProperty({__proto__:null,json:Lge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dge=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Fge=Object.freeze(Object.defineProperty({__proto__:null,json:Dge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oge=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],zge=Object.freeze(Object.defineProperty({__proto__:null,json:Oge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gge=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Vge=Object.freeze(Object.defineProperty({__proto__:null,json:Gge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wge=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],$ge=Object.freeze(Object.defineProperty({__proto__:null,json:Wge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uge=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Bge=Object.freeze(Object.defineProperty({__proto__:null,json:Uge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xge=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Hge=Object.freeze(Object.defineProperty({__proto__:null,json:Xge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zge=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Kge=Object.freeze(Object.defineProperty({__proto__:null,json:Zge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yge=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],jge=Object.freeze(Object.defineProperty({__proto__:null,json:Yge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bM{constructor(){const e=[fge,gge,bge,vge,Sge,Tge,Cge,Ege,Nge,Age,Pge,Fge,zge,Vge,$ge,Bge,Hge,Kge,jge],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,i)=>(s[i.tfOpName]=i,s),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){const s=e.node,i=[],r=[],a=[],o=s.reduce((g,f)=>(g[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?i.push(g[f.name]):f.op==="Const"?r.push(g[f.name]):(f.input==null||f.input.length===0)&&a.push(g[f.name]),g),{});let l=[];const c=[];let u={},h={};t!=null&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach(g=>{const f=o[g];f.inputNames.forEach((y,b)=>{const[x,,v]=ta(y),w=o[x];if(w.outputs!=null){const _=w.outputs.indexOf(v);if(_!==-1){const T=`${x}:${_}`;f.inputNames[b]=T}}f.inputs.push(w),w.children.push(f)})}),Object.keys(h).length===0?d.forEach(g=>{const f=o[g];f.children.length===0&&c.push(f)}):Object.keys(h).forEach(g=>{const[f]=ta(g),y=o[f];y!=null&&(y.signatureKey=h[g],c.push(y))}),Object.keys(u).length>0?Object.keys(u).forEach(g=>{const[f]=ta(g),y=o[f];y&&(y.signatureKey=u[g],l.push(y))}):l=i;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((g,f)=>(g[f.signature.name]=this.mapFunction(f),g),{}));const m={nodes:o,inputs:l,outputs:c,weights:r,placeholders:i,signature:t,functions:p};return a.length>0&&(m.initNodes=a),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=P3(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(i=>i.startsWith("^")?i.slice(1):i),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((i,r)=>(i[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},i),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((i,r)=>{const a=r.type;let o;switch(r.type){case"string":o=Y1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=Y1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=nv(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=nv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=Q1(e.attr,r.tfName,r.defaultValue||0),o===void 0&&r.tfDeprecatedName&&(o=Q1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=tv(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=tv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=j1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=j1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=iv(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=iv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=ev(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=ev(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=sv(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=sv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=J1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=J1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=q1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=q1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=xM(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=xM(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return i[r.name]={value:o,type:a},i},{})),s}mapFunction(e){const t=e.nodeDef,s=[],i=[];let r={};t!=null&&(r=t.reduce((u,h)=>(u[h.name]=this.mapNode(h),h.op==="Const"&&i.push(u[h.name]),u),{}));const a=[],o=[];e.signature.inputArg.forEach(u=>{const[h]=ta(u.name),d={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:MT(u.type),type:"dtype"}},children:[]};d.signatureKey=u.name,a.push(d),r[h]=d}),Object.keys(r).forEach(u=>{const h=r[u];h.inputNames.forEach((d,p)=>{const[m,,g]=ta(d),f=r[m];if(f.outputs!=null){const y=f.outputs.indexOf(g);if(y!==-1){const b=`${m}:${y}`;h.inputNames[p]=b}}h.inputs.push(f),f.children.push(h)})});const l=e.ret;e.signature.outputArg.forEach(u=>{const[h,d]=ta(l[u.name]),p=r[h];p!=null&&(p.defaultOutput=d,o.push(p))});const c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:i,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function Qge(n){const e=q().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function D3(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):Qge(n);return e?t:t.toLowerCase()}function Y1(n,e,t,s=!1){const i=n[e];return i!=null?D3(i.s,s):t}function j1(n,e,t){const s=n[e];return s?s.b:t}function Q1(n,e,t){const s=n[e]||{},i=s.i!=null?s.i:s.f!=null?s.f:t;return typeof i=="number"?i:parseInt(i,10)}function MT(n){switch(typeof n=="string"&&(n=Ci[n]),n){case Ci.DT_FLOAT:case Ci.DT_HALF:return"float32";case Ci.DT_INT32:case Ci.DT_INT64:case Ci.DT_INT8:case Ci.DT_UINT8:return"int32";case Ci.DT_BOOL:return"bool";case Ci.DT_DOUBLE:return"float32";case Ci.DT_STRING:return"string";default:return null}}function xM(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function J1(n,e,t){const s=n[e];return s&&s.type?MT(s.type):t}function q1(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(i=>MT(i)):t}function F3(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function ev(n,e,t){const s=n[e];return s&&s.shape?F3(s.shape):t}function tv(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(i=>typeof i=="number"?i:parseInt(i,10)):t}function nv(n,e,t,s=!1){const i=n[e];return i&&i.list&&i.list.s?i.list.s.map(r=>D3(r,s)):t}function sv(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(i=>F3(i)):t}function iv(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jge{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(i=>this.getInput(i)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((i,r)=>(i[r]=this.getAttr(r),i),{}))}getInput(e){return fs(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return fs(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Q1(this.node.rawAttrs,e,t);if(s.s!=null)return Y1(this.node.rawAttrs,e,t);if(s.b!=null)return j1(this.node.rawAttrs,e,t);if(s.shape!=null)return ev(this.node.rawAttrs,e,t);if(s.type!=null)return J1(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return tv(this.node.rawAttrs,e,t);if(s.list.s!=null)return nv(this.node.rawAttrs,e,t);if(s.list.shape!=null)return sv(this.node.rawAttrs,e,t);if(s.list.b!=null)return iv(this.node.rawAttrs,e,t);if(s.list.type!=null)return q1(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ns=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:Gv,abs:vn,acos:Zv,acosh:Kv,add:he,addN:GL,all:B0,any:wd,argMax:ml,argMin:Yv,asin:jv,asinh:Qv,atan:Jv,atan2:qv,atanh:ew,avgPool:jp,avgPool3d:nw,basicLSTMCell:VL,batchNorm:lh,batchNorm2d:sw,batchNorm3d:iw,batchNorm4d:rw,batchToSpaceND:Qp,bincount:aw,booleanMaskAsync:b3,broadcastArgs:WL,broadcastTo:sl,buffer:ct,cast:we,ceil:ow,clipByValue:Ls,clone:Rr,complex:fa,concat:mn,concat1d:lw,concat2d:cw,concat3d:uw,concat4d:hw,conv1d:X0,conv2d:ma,conv2dTranspose:H0,conv3d:pw,conv3dTranspose:fw,cos:Jp,cosh:Z0,cosineWindow:my,cumprod:Td,cumsum:K0,denseBincount:jm,depthToSpace:mw,depthwiseConv2d:ch,diag:$L,dilation2d:gw,div:We,divNoNan:yw,dot:bw,dropout:Xw,einsum:UL,elu:uh,enclosingPowerOfTwo:Hw,equal:Js,erf:xw,euclideanNorm:ww,exp:qs,expandDims:ss,expm1:Sw,eye:Y0,fft:hf,fill:Dl,floor:dh,floorDiv:U0,fused:T3,gather:ph,gatherND:S3,greater:ws,greaterEqual:Ca,ifft:Bc,imag:qp,image:Ir,inTopKAsync:_3,irfft:uy,isFinite:_w,isInf:Tw,isNaN:Iw,leakyRelu:ef,less:j0,lessEqual:vo,linalg:Yw,linspace:BL,localResponseNormalization:Cw,log:ei,log1p:tf,logSigmoid:Mw,logSoftmax:J0,logSumExp:q0,logicalAnd:Vi,logicalNot:nf,logicalOr:ey,logicalXor:Ew,losses:Ik,lowerBound:XL,matMul:pt,max:mi,maxPool:sf,maxPool3d:kw,maxPoolWithArgmax:HL,maximum:Wr,mean:nn,meshgrid:ZL,min:Vc,minimum:fh,mirrorPad:Nw,mod:Rw,moments:rf,movingAverage:x3,mul:Z,multiRNNCell:KL,multinomial:YL,neg:Kt,norm:hh,notEqual:xl,oneHot:Wc,ones:Hs,onesLike:ti,op:$,outerProduct:jL,pad:Ma,pad1d:QL,pad2d:JL,pad3d:qL,pad4d:e3,pool:Aw,pow:ga,prelu:of,print:Xv,prod:Lw,raggedGather:t3,raggedRange:n3,raggedTensorToTensor:s3,rand:i3,randomGamma:o3,randomNormal:ty,randomStandardNormal:l3,randomUniform:gh,range:vl,real:$c,reciprocal:Dw,relu:hr,relu6:ny,reshape:K,reverse:bi,reverse1d:c3,reverse2d:u3,reverse3d:h3,reverse4d:d3,rfft:df,round:sy,rsqrt:iy,scalar:Ze,scatterND:v3,searchSorted:rb,selu:ry,separableConv2d:ay,setdiff1dAsync:p3,sigmoid:nr,sign:Fw,signal:Tk,sin:oy,sinh:ly,slice:St,slice1d:lf,slice2d:cy,slice3d:cf,slice4d:Uc,softmax:uf,softplus:Fl,spaceToBatchND:af,sparse:Ck,sparseToDense:w3,spectral:_k,split:Rs,sqrt:jn,square:Pt,squaredDifference:hy,squeeze:wo,stack:bs,step:zl,stridedSlice:Ow,string:Mk,sub:De,sum:Oe,tan:zw,tanh:yl,tensor:Jt,tensor1d:as,tensor2d:qa,tensor3d:Gw,tensor4d:f3,tensor5d:m3,tensor6d:g3,tile:di,topk:Vw,transpose:bt,truncatedNormal:dy,unique:Ww,unsortedSegmentSum:py,unstack:xi,upperBound:y3,variable:$w,where:os,whereAsync:wT,zeros:Sn,zerosLike:_t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qge=(n,e,t,s=ns)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",n,e,t),I("b",n,e,t))];case"AddN":return[s.addN(I("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(I("a",n,e,t),I("b",n,e,t))];case"Mul":return[s.mul(I("a",n,e,t),I("b",n,e,t))];case"RealDiv":case"Div":return[s.div(I("a",n,e,t),I("b",n,e,t))];case"DivNoNan":return[s.divNoNan(I("a",n,e,t),I("b",n,e,t))];case"FloorDiv":return[s.floorDiv(I("a",n,e,t),I("b",n,e,t))];case"Sub":return[s.sub(I("a",n,e,t),I("b",n,e,t))];case"Minimum":return[s.minimum(I("a",n,e,t),I("b",n,e,t))];case"Maximum":return[s.maximum(I("a",n,e,t),I("b",n,e,t))];case"Pow":return[s.pow(I("a",n,e,t),I("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e0e=(n,e,t,s=ns)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",n,e,t))];case"Acos":return[s.acos(I("x",n,e,t))];case"Acosh":return[s.acosh(I("x",n,e,t))];case"Asin":return[s.asin(I("x",n,e,t))];case"Asinh":return[s.asinh(I("x",n,e,t))];case"Atan":return[s.atan(I("x",n,e,t))];case"Atan2":return[s.atan2(I("x",n,e,t),I("y",n,e,t))];case"Atanh":return[s.atanh(I("x",n,e,t))];case"Ceil":return[s.ceil(I("x",n,e,t))];case"Complex":return[s.complex(I("real",n,e,t),I("imag",n,e,t))];case"Cos":return[s.cos(I("x",n,e,t))];case"Cosh":return[s.cosh(I("x",n,e,t))];case"Elu":return[s.elu(I("x",n,e,t))];case"Erf":return[s.erf(I("x",n,e,t))];case"Exp":return[s.exp(I("x",n,e,t))];case"Expm1":return[s.expm1(I("x",n,e,t))];case"Floor":return[s.floor(I("x",n,e,t))];case"Log":return[s.log(I("x",n,e,t))];case"Log1p":return[s.log1p(I("x",n,e,t))];case"Imag":return[s.imag(I("x",n,e,t))];case"Neg":return[s.neg(I("x",n,e,t))];case"Reciprocal":return[s.reciprocal(I("x",n,e,t))];case"Real":return[s.real(I("x",n,e,t))];case"Relu":return[s.relu(I("x",n,e,t))];case"Round":return[s.round(I("x",n,e,t))];case"Selu":return[s.selu(I("x",n,e,t))];case"Sigmoid":return[s.sigmoid(I("x",n,e,t))];case"Sin":return[s.sin(I("x",n,e,t))];case"Sign":return[s.sign(I("x",n,e,t))];case"Sinh":return[s.sinh(I("x",n,e,t))];case"Softplus":return[s.softplus(I("x",n,e,t))];case"Sqrt":return[s.sqrt(I("x",n,e,t))];case"Square":return[s.square(I("x",n,e,t))];case"Tanh":return[s.tanh(I("x",n,e,t))];case"Tan":return[s.tan(I("x",n,e,t))];case"ClipByValue":return[s.clipByValue(I("x",n,e,t),I("clipValueMin",n,e,t),I("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(I("x",n,e,t))];case"Rsqrt":return[s.rsqrt(fs(n.inputNames[0],e,t))];case"Prod":return[s.prod(I("x",n,e,t),I("axes",n,e,t))];case"LeakyRelu":return[s.leakyRelu(I("x",n,e,t),I("alpha",n,e,t))];case"Prelu":return[s.prelu(I("x",n,e,t),I("alpha",n,e,t))];case"IsNan":return[s.isNaN(fs(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ki(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){E(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const i=n[s],r=e[s];E(i<0||r<0||i===r,()=>t+` Shapes ${n} and ${e} must match`)}}}function vM(n){return!(typeof n=="number"||n.some(e=>e<0))}function Hh(n,e,t){let s=rv(n,t);const i=!vM(s);if(i&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(i&&e.forEach(r=>{s=rv(r.shape,s)}),!vM(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function rv(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const i=n[s],r=e[s];if(i>=0&&r>=0&&i!==r)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=i>=0?i:r}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t0e{constructor(e,t,s,i,r,a,o){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=i,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ze(0),cn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ki(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,cn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,i)=>this.write(s,t[i]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let i=0;i<this.size();i++)e.push(i)}if(e.length===0)return Jt([],[0].concat(this.elementShape));const s=this.readMany(e);return ki(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),bs(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Jt([],[0].concat(this.elementShape));const t=[];for(let i=0;i<this.size();i++)t.push(i);const s=this.readMany(t);return ki(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),mn(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,xi(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const i=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:t.size/s,a=[];Q(()=>{t=K(t,[1,s,r]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:i[l-1],0],u=[1,e[l],r];a[l]=K(St(t,c,u),this.elementShape)}return a});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ml{constructor(e,t,s,i=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);ki(t,r.shape,"TensorList shape mismatch: "),cn(r)}),this.idTensor=Ze(0),this.maxNumElements=i,cn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ml([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);ki(e,this.elementShape,"TensorList shape mismatch: ");const i=Hh(this.elementShape,this.tensors,e);return Q(()=>{const r=this.tensors.map(a=>K(a,i));return bs(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Hh(this.elementShape,this.tensors,e),i=this.tensors.pop();return i.kept=!1,ki(i.shape,e,"TensorList shape mismatch: "),K(i,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ki(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");cn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ml([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ki(this.tensors[e].shape,t,"TensorList shape mismatch: ");const i=Hh(this.elementShape,this.tensors,t);return K(this.tensors[e],i)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ki(this.elementShape,t.shape,"TensorList shape mismatch: "),cn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ki(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const i=Hh(this.elementShape,this.tensors,s);return e.length===0?Jt([],[0].concat(i)):Q(()=>{const r=e.map(a=>K(this.tensors[a],i));return bs(r,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ki(this.elementShape,t,"TensorList shape mismatch: ");const s=Hh(this.elementShape,this.tensors,t);return this.size()===0?Jt([],[0].concat(s)):Q(()=>{const i=this.tensors.map(r=>K(r,s));return mn(i,0)})}}function n0e(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const i=n.shape.slice(1);ki(i,e,"TensorList shape mismatch: ");const r=xi(n);return new Ml(r,e,s)}function s0e(n,e,t,s){return new Ml([],n,e,s)}function i0e(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const i=Math.max(...e);if(s!=null&&s!==-1&&i>=s)throw new Error(`Max index must be < array size (${i}  vs. ${s})`);const r=new Ml([],t,n.dtype,s),a=xi(n,0);return e.forEach((o,l)=>{r.setItem(o,a[l])}),r}function r0e(n,e,t){let s=0;const i=e.map(u=>(s+=u,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const r=n.shape.slice(1),a=rv(r,t),o=s===0?0:n.size/s,l=Q(()=>{const u=[];n=K(n,[1,s,o]);for(let h=0;h<e.length;++h){const d=[0,h===0?0:i[h-1],0],p=[1,e[h],o];u[h]=K(St(n,d,p),a)}return n.dispose(),u}),c=new Ml([],t,n.dtype,e.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a0e=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=I("thenBranch",n,e,t),i=I("elseBranch",n,e,t),r=I("cond",n,e,t),a=I("args",n,e,t);return(await r.data())[0]?t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[i].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=I("body",n,e,t),i=I("cond",n,e,t),r=I("args",n,e,t),a=await t.functionMap[i].executeFunctionAsync(r,t.tensorArrayMap,t.tensorListMap),o=r.map(u=>u.id);let l=await a[0].data();a.forEach(u=>{!u.kept&&o.indexOf(u.id)===-1&&u.dispose()});let c=r;for(;l[0];){const u=c;c=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const h=c.map(p=>p.id);u.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[i].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return c}case"LoopCond":{const s=I("pred",n,e,t);return[na(s)]}case"Switch":{const s=I("pred",n,e,t);let i=I("data",n,e,t);return i.kept||(i=na(i)),(await s.data())[0]?[void 0,i]:[i,void 0]}case"Merge":{const s=n.inputNames.find(i=>fs(i,e,t)!==void 0);if(s){const i=fs(s,e,t);return[na(i)]}return}case"Enter":{const s=I("frameName",n,e,t),i=I("tensor",n,e,t);return t.enterFrame(s),[na(i)]}case"Exit":{const s=I("tensor",n,e,t);return t.exitFrame(),[na(s)]}case"NextIteration":{const s=I("tensor",n,e,t);return t.nextIteration(),[na(s)]}case"TensorArrayV3":{const s=I("size",n,e,t),i=I("dtype",n,e,t),r=I("elementShape",n,e,t),a=I("dynamicSize",n,e,t),o=I("clearAfterRead",n,e,t),l=I("identicalElementShapes",n,e,t),c=I("name",n,e,t),u=new t0e(c,i,s,r,l,a,o);return t.addTensorArray(u),[u.idTensor,Ze(1)]}case"TensorArrayWriteV3":{const s=I("tensorArrayId",n,e,t),i=I("index",n,e,t),r=I("tensor",n,e,t),a=t.getTensorArray(s.id);return a.write(i,r),[a.idTensor]}case"TensorArrayReadV3":{const s=I("tensorArrayId",n,e,t),i=I("index",n,e,t);return[t.getTensorArray(s.id).read(i)]}case"TensorArrayGatherV3":{const s=I("tensorArrayId",n,e,t),i=I("indices",n,e,t),r=I("dtype",n,e,t);return[t.getTensorArray(s.id).gather(i,r)]}case"TensorArrayScatterV3":{const s=I("tensorArrayId",n,e,t),i=I("indices",n,e,t),r=I("tensor",n,e,t),a=t.getTensorArray(s.id);return a.scatter(i,r),[a.idTensor]}case"TensorArrayConcatV3":{const s=I("tensorArrayId",n,e,t),i=t.getTensorArray(s.id),r=I("dtype",n,e,t);return[i.concat(r)]}case"TensorArraySplitV3":{const s=I("tensorArrayId",n,e,t),i=I("tensor",n,e,t),r=I("lengths",n,e,t),a=t.getTensorArray(s.id);return a.split(r,i),[a.idTensor]}case"TensorArraySizeV3":{const s=I("tensorArrayId",n,e,t),i=t.getTensorArray(s.id);return[Ze(i.size(),"int32")]}case"TensorArrayCloseV3":{const s=I("tensorArrayId",n,e,t),i=t.getTensorArray(s.id);return i.clearAndClose(),[i.idTensor]}case"TensorListSetItem":{const s=I("tensorListId",n,e,t),i=I("index",n,e,t),r=I("tensor",n,e,t),a=t.getTensorList(s.id);return a.setItem(i,r),[a.idTensor]}case"TensorListGetItem":{const s=I("tensorListId",n,e,t),i=I("index",n,e,t),r=I("elementShape",n,e,t),a=I("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(i,r,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=I("indices",n,e,t),i=I("tensor",n,e,t),r=I("elementShape",n,e,t),a=I("numElements",n,e,t),o=i0e(i,s,r,a);return t.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=I("elementShape",n,e,t),i=I("elementDType",n,e,t);let r;n.op==="TensorListReserve"?r="numElements":r="maxNumElements";const a=I(r,n,e,t),o=n.op==="TensorListReserve"?-1:a,l=s0e(s,i,a,o);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=I("tensorListId",n,e,t),i=I("indices",n,e,t),r=I("elementShape",n,e,t),a=I("elementDType",n,e,t);return[t.getTensorList(s.id).gather(i,a,r)]}case"TensorListStack":{const s=I("tensorListId",n,e,t),i=I("elementShape",n,e,t),r=I("elementDType",n,e,t),a=I("numElements",n,e,t);return[t.getTensorList(s.id).stack(i,r,a)]}case"TensorListFromTensor":{const s=I("tensor",n,e,t),i=I("elementShape",n,e,t),r=I("elementDType",n,e,t),a=n0e(s,i,r);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=I("tensorListId",n,e,t),i=t.getTensorList(s.id),r=I("dtype",n,e,t),a=I("elementShape",n,e,t);return[i.concat(r,a)]}case"TensorListPushBack":{const s=I("tensorListId",n,e,t),i=I("tensor",n,e,t),r=t.getTensorList(s.id);return r.pushBack(i),[r.idTensor]}case"TensorListPopBack":{const s=I("tensorListId",n,e,t),i=I("elementShape",n,e,t),r=I("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(i,r)]}case"TensorListSplit":{const s=I("tensor",n,e,t),i=I("elementShape",n,e,t),r=I("lengths",n,e,t),a=r0e(s,r,i);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=I("tensorListId",n,e,t),i=t.getTensorList(s.id);return[Ze(i.size(),"int32")]}case"TensorListResize":{const s=I("tensorListId",n,e,t),i=I("size",n,e,t),r=t.getTensorList(s.id).resize(i);return t.addTensorList(r),[r.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n,e,t){const[s,i]=I("fusedOps",n,e,t),r=s==="biasadd",a=!r,o=i==="prelu",l=s==="fusedbatchnorm",c=I("numArgs",n,e,t);if(r){if(o&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&r&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=I("strides",n,e,t),h=Nm(n,e,t),d=I("dataFormat",n,e,t).toUpperCase(),p=I("dilations",n,e,t);let[m,g]=I("args",n,e,t);a&&(g=m,m=void 0);const f=I("leakyreluAlpha",n,e,t);return{stride:u,pad:h,dataFormat:d,dilations:p,biasArg:m,preluArg:g,activationFunc:i,leakyreluAlpha:f}}const o0e=(n,e,t,s=ns)=>{switch(n.op){case"Conv1D":{const i=I("stride",n,e,t),r=I("pad",n,e,t),a=I("dataFormat",n,e,t).toUpperCase(),o=I("dilation",n,e,t);return[s.conv1d(I("x",n,e,t),I("filter",n,e,t),i,r,a,o)]}case"Conv2D":{const i=I("strides",n,e,t),r=Nm(n,e,t),a=I("dataFormat",n,e,t).toUpperCase(),o=I("dilations",n,e,t);return[s.conv2d(I("x",n,e,t),I("filter",n,e,t),[i[1],i[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:i,pad:r,dataFormat:a,dilations:o,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=wM(n,e,t);return[s.fused.conv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[i[1],i[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:i,pad:r,dataFormat:a,dilations:o,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=wM(n,e,t);return[s.fused.depthwiseConv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[i[1],i[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const i=I("outputShape",n,e,t),r=I("strides",n,e,t),a=Nm(n,e,t);return[s.conv2dTranspose(I("x",n,e,t),I("filter",n,e,t),i,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const i=I("strides",n,e,t),r=Nm(n,e,t),a=I("dilations",n,e,t),o=I("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(I("input",n,e,t),I("filter",n,e,t),[i[1],i[2]],r,o,[a[1],a[2]])]}case"Conv3D":{const i=I("strides",n,e,t),r=I("pad",n,e,t),a=I("dataFormat",n,e,t).toUpperCase(),o=I("dilations",n,e,t);return[s.conv3d(I("x",n,e,t),I("filter",n,e,t),[i[1],i[2],i[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{const i=I("strides",n,e,t),r=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[s.avgPool(I("x",n,e,t),[a[1],a[2]],[i[1],i[2]],r)]}case"MaxPool":{const i=I("strides",n,e,t),r=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[s.maxPool(I("x",n,e,t),[a[1],a[2]],[i[1],i[2]],r)]}case"MaxPoolWithArgmax":{const i=I("strides",n,e,t),r=I("pad",n,e,t),a=I("kernelSize",n,e,t),o=I("includeBatchInIndex",n,e,t),{result:l,indexes:c}=s.maxPoolWithArgmax(I("x",n,e,t),[a[1],a[2]],[i[1],i[2]],r,o);return[l,c]}case"AvgPool3D":{const i=I("strides",n,e,t),r=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[s.avgPool3d(I("x",n,e,t),[a[1],a[2],a[3]],[i[1],i[2],i[3]],r)]}case"MaxPool3D":{const i=I("strides",n,e,t),r=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[s.maxPool3d(I("x",n,e,t),[a[1],a[2],a[3]],[i[1],i[2],i[3]],r)]}case"Dilation2D":{const i=I("strides",n,e,t),r=I("pad",n,e,t),a=I("dilations",n,e,t),o=i[1],l=i[2],c=a[1],u=a[2];return[s.dilation2d(I("x",n,e,t),I("filter",n,e,t),[o,l],r,[c,u],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l0e=(n,e,t,s=ns)=>{switch(n.op){case"Fill":{const i=I("shape",n,e,t),r=I("dtype",n,e,t),a=I("value",n,e,t);return[s.fill(i,a,r)]}case"LinSpace":{const i=I("start",n,e,t),r=I("stop",n,e,t),a=I("num",n,e,t);return[s.linspace(i,r,a)]}case"Multinomial":{const i=I("logits",n,e,t),r=I("numSamples",n,e,t),a=I("seed",n,e,t);return[s.multinomial(i,r,a)]}case"OneHot":{const i=I("indices",n,e,t),r=I("depth",n,e,t),a=I("onValue",n,e,t),o=I("offValue",n,e,t),l=I("dtype",n,e,t);return[s.oneHot(i,r,a,o,l)]}case"Ones":return[s.ones(I("shape",n,e,t),I("dtype",n,e,t))];case"OnesLike":return[s.onesLike(I("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",n,e,t),I("dtype",n,e,t),I("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("dtype",n,e,t))];case"Range":{const i=I("start",n,e,t),r=I("stop",n,e,t),a=I("step",n,e,t);return[s.range(i,r,a,I("dtype",n,e,t))]}case"TruncatedNormal":{const i=I("shape",n,e,t),r=I("mean",n,e,t),a=I("stdDev",n,e,t),o=I("seed",n,e,t);return[s.truncatedNormal(i,r,a,I("dtype",n,e,t),o)]}case"Zeros":return[s.zeros(I("shape",n,e,t),I("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $x(n,e,t){const s=I("boxes",n,e,t),i=I("scores",n,e,t),r=I("maxOutputSize",n,e,t),a=I("iouThreshold",n,e,t),o=I("scoreThreshold",n,e,t),l=I("softNmsSigma",n,e,t);return{boxes:s,scores:i,maxOutputSize:r,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}}const c0e=async(n,e,t,s,i=ns)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=$x(n,e,t),h=await i.image.nonMaxSuppressionWithScoreAsync(r,a,o,l,c,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:c}=$x(n,e,t),u=I("padToMaxOutputSize",n,e,t),h=await i.image.nonMaxSuppressionPaddedAsync(r,a,o,l,c,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:c}=$x(n,e,t);return[await i.image.nonMaxSuppressionAsync(r,a,o,l,c)]}case"Where":{const r=i.cast(I("condition",n,e,t),"bool"),a=[await i.whereAsync(r)];return r.dispose(),a}case"ListDiff":return i.setdiff1dAsync(I("x",n,e,t),I("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0e=(n,e,t,s=ns)=>{switch(n.op){case"LowerBound":{const i=I("sortedSequence",n,e,t),r=I("values",n,e,t);return[s.lowerBound(i,r)]}case"TopKV2":{const i=I("x",n,e,t),r=I("k",n,e,t),a=I("sorted",n,e,t),o=s.topk(i,r,a);return[o.values,o.indices]}case"UpperBound":{const i=I("sortedSequence",n,e,t),r=I("values",n,e,t);return[s.upperBound(i,r)]}case"Unique":{const i=I("x",n,e,t),r=s.unique(i);return[r.values,r.indices]}case"UniqueV2":{const i=I("x",n,e,t),r=I("axis",n,e,t),a=s.unique(i,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h0e=(n,e,t,s=ns)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const i=I("default",n,e,t);return[fs(n.name,e,t)||i];case"Placeholder":return[fs(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=I("x",n,e,t);return[na(u)]}case"IdentityN":return I("x",n,e,t).map(u=>na(u));case"Snapshot":const r=I("x",n,e,t);return[na(r)];case"Shape":return[s.tensor1d(I("x",n,e,t).shape,"int32")];case"ShapeN":return I("x",n,e,t).map(u=>s.tensor1d(u.shape));case"Size":return[s.scalar(I("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(I("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=I("x",n,e,t),o=I("data",n,e,t),l=I("message",n,e,t),c=I("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d0e{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ze(0),this.tensorMap=new Map,cn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ze(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(i=>i.dispose()),this.tensorMap.clear(),Q(()=>{const i=xi(t),r=s.length,a=i.length;E(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){const l=s[o],c=i[o];cn(c),this.tensorMap.set(l,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return Q(()=>{const i=[];for(let r=0;r<s.length;r++){const a=s[r],o=this.findWithDefault(a,t);i.push(o)}return bs(i)})}findWithDefault(e,t){return this.tensorMap.get(e)??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p0e=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const i=s.getHashTableHandleByName(n.name);if(i!=null)return[i];{const r=I("keyDType",n,e,t),a=I("valueDType",n,e,t),o=new d0e(r,a);return s.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const i=I("tableHandle",n,e,t,s),r=I("keys",n,e,t),a=I("values",n,e,t);return[await s.getHashTableById(i.id).import(r,a)]}case"LookupTableFind":case"LookupTableFindV2":{const i=I("tableHandle",n,e,t,s),r=I("keys",n,e,t),a=I("defaultValue",n,e,t);return[await s.getHashTableById(i.id).find(r,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const i=I("tableHandle",n,e,t,s);return[s.getHashTableById(i.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f0e=(n,e,t,s=ns)=>{switch(n.op){case"ResizeBilinear":{const i=I("images",n,e,t),r=I("size",n,e,t),a=I("alignCorners",n,e,t),o=I("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(i,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{const i=I("images",n,e,t),r=I("size",n,e,t),a=I("alignCorners",n,e,t),o=I("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(i,[r[0],r[1]],a,o)]}case"CropAndResize":{const i=I("image",n,e,t),r=I("boxes",n,e,t),a=I("boxInd",n,e,t),o=I("cropSize",n,e,t),l=I("method",n,e,t),c=I("extrapolationValue",n,e,t);return[s.image.cropAndResize(i,r,a,o,l,c)]}case"ImageProjectiveTransformV3":{const i=I("images",n,e,t),r=I("transforms",n,e,t),a=I("outputShape",n,e,t),o=I("fillValue",n,e,t),l=I("interpolation",n,e,t),c=I("fillMode",n,e,t);return[s.image.transform(i,r,l.toLowerCase(),c.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m0e=(n,e,t,s=ns)=>{switch(n.op){case"Equal":return[s.equal(I("a",n,e,t),I("b",n,e,t))];case"NotEqual":return[s.notEqual(I("a",n,e,t),I("b",n,e,t))];case"Greater":return[s.greater(I("a",n,e,t),I("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(I("a",n,e,t),I("b",n,e,t))];case"Less":return[s.less(I("a",n,e,t),I("b",n,e,t))];case"LessEqual":return[s.lessEqual(I("a",n,e,t),I("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(I("a",n,e,t),I("b",n,e,t))];case"LogicalNot":return[s.logicalNot(I("a",n,e,t))];case"LogicalOr":return[s.logicalOr(I("a",n,e,t),I("b",n,e,t))];case"Select":case"SelectV2":return[s.where(I("condition",n,e,t),I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g0e=(n,e,t,s=ns)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",n,e,t),I("b",n,e,t),I("transposeA",n,e,t),I("transposeB",n,e,t))];case"Einsum":return[s.einsum(I("equation",n,e,t),...I("tensors",n,e,t))];case"Transpose":return[s.transpose(I("x",n,e,t),I("perm",n,e,t))];case"_FusedMatMul":const[i,r]=I("fusedOps",n,e,t),a=i==="biasadd",o=r==="prelu",l=I("numArgs",n,e,t),c=I("leakyreluAlpha",n,e,t);if(a){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=I("args",n,e,t);return[s.fused.matMul({a:I("a",n,e,t),b:I("b",n,e,t),transposeA:I("transposeA",n,e,t),transposeB:I("transposeB",n,e,t),bias:u,activation:r,preluActivationWeights:h,leakyreluAlpha:c})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y0e=(n,e,t,s=ns)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",n,e,t),I("axis",n,e,t),I("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(I("x",n,e,t),I("radius",n,e,t),I("bias",n,e,t),I("alpha",n,e,t),I("beta",n,e,t))];case"Softmax":return[s.softmax(I("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(I("x",n,e,t))];case"SparseToDense":return[s.sparseToDense(I("sparseIndices",n,e,t),I("outputShape",n,e,t),I("sparseValues",n,e,t),I("defaultValue",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b0e=(n,e,t,s=ns)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:i,outputDenseValues:r}=s.raggedGather(I("paramsNestedSplits",n,e,t),I("paramsDenseValues",n,e,t),I("indices",n,e,t),I("outputRaggedRank",n,e,t));return i.concat(r)}case"RaggedRange":{const{rtNestedSplits:i,rtDenseValues:r}=s.raggedRange(I("starts",n,e,t),I("limits",n,e,t),I("splits",n,e,t));return[i,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(I("shape",n,e,t),I("values",n,e,t),I("defaultValue",n,e,t),I("rowPartitionTensors",n,e,t),I("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x0e=(n,e,t,s=ns)=>{switch(n.op){case"Max":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.max(I("x",n,e,t),o,l)]}case"Mean":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.mean(I("x",n,e,t),o,l)]}case"Min":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.min(I("x",n,e,t),o,l)]}case"Sum":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.sum(I("x",n,e,t),o,l)]}case"All":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.all(I("x",n,e,t),o,l)]}case"Any":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.any(I("x",n,e,t),o,l)]}case"ArgMax":{const o=I("axis",n,e,t);return[s.argMax(I("x",n,e,t),o)]}case"ArgMin":{const o=I("axis",n,e,t);return[s.argMin(I("x",n,e,t),o)]}case"Prod":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.prod(I("x",n,e,t),o,l)]}case"Cumprod":{const o=I("axis",n,e,t),l=I("exclusive",n,e,t),c=I("reverse",n,e,t);return[s.cumprod(I("x",n,e,t),o,l,c)]}case"Cumsum":{const o=I("axis",n,e,t),l=I("exclusive",n,e,t),c=I("reverse",n,e,t);return[s.cumsum(I("x",n,e,t),o,l,c)]}case"Bincount":const i=I("x",n,e,t),r=I("weights",n,e,t),a=I("size",n,e,t);return[s.bincount(i,r,a)];case"DenseBincount":{const o=I("x",n,e,t),l=I("weights",n,e,t),c=I("size",n,e,t),u=I("binaryOutput",n,e,t);return[s.denseBincount(o,l,c,u)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v0e=(n,e,t,s=ns)=>{switch(n.op){case"ConcatV2":case"Concat":{const i=I("n",n,e,t),r=I("axis",n,e,t);let a=I("tensors",n,e,t);return a=a.slice(0,i),[s.concat(a,r)]}case"Gather":{const i=I("x",n,e,t),r=I("indices",n,e,t);return[s.gather(i,s.cast(r,"int32"),0)]}case"GatherV2":{const i=I("axis",n,e,t),r=I("batchDims",n,e,t),a=I("x",n,e,t),o=I("indices",n,e,t);return[s.gather(a,s.cast(o,"int32"),i,r)]}case"Reverse":{const i=I("dims",n,e,t),r=[];for(let o=0;o<i.length;o++)i[o]&&r.push(o);const a=I("x",n,e,t);return[s.reverse(a,r)]}case"ReverseV2":{const i=I("axis",n,e,t),r=I("x",n,e,t);return[s.reverse(r,i)]}case"Slice":{const i=I("begin",n,e,t),r=I("size",n,e,t);return[s.slice(I("x",n,e,t),i,r)]}case"StridedSlice":{const i=I("begin",n,e,t),r=I("end",n,e,t),a=I("strides",n,e,t),o=I("beginMask",n,e,t),l=I("endMask",n,e,t),c=I("ellipsisMask",n,e,t),u=I("newAxisMask",n,e,t),h=I("shrinkAxisMask",n,e,t),d=I("x",n,e,t);return[s.stridedSlice(d,i,r,a,o,l,c,u,h)]}case"Pack":return Q(()=>{const i=I("axis",n,e,t),r=I("tensors",n,e,t),a=r[0].shape,o=s.squeeze(r[0]).shape,l=r.map(c=>{const u=vt(c.shape,a);if(!u&&!vt(s.squeeze(c).shape,o))throw new Error("the input tensors shape does not match");return u?c:s.reshape(c,a)});return[s.stack(l,i)]});case"Unpack":{const i=I("axis",n,e,t),r=I("tensor",n,e,t);return s.unstack(r,i)}case"Tile":{const i=I("reps",n,e,t);return[s.tile(I("x",n,e,t),i)]}case"Split":case"SplitV":{const i=I("axis",n,e,t),r=I("numOrSizeSplits",n,e,t),a=I("x",n,e,t);return s.split(a,r,i)}case"ScatterNd":{const i=I("indices",n,e,t),r=I("values",n,e,t),a=I("shape",n,e,t);return[s.scatterND(i,r,a)]}case"GatherNd":{const i=I("x",n,e,t),r=I("indices",n,e,t);return[s.gatherND(i,r)]}case"SparseToDense":{const i=I("sparseIndices",n,e,t),r=I("outputShape",n,e,t),a=I("sparseValues",n,e,t),o=I("defaultValue",n,e,t);return[s.sparseToDense(i,a,r,a.dtype===o.dtype?o:s.cast(o,a.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w0e=(n,e,t,s=ns)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:i,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(I("indices",n,e,t),I("values",n,e,t),I("denseShape",n,e,t),I("defaultValue",n,e,t));return[i,r,a,o]}case"SparseReshape":{const{outputIndices:i,outputShape:r}=s.sparse.sparseReshape(I("inputIndices",n,e,t),I("inputShape",n,e,t),I("newShape",n,e,t));return[i,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S0e=(n,e,t,s=ns)=>{switch(n.op){case"FFT":return[s.fft(I("x",n,e,t))];case"IFFT":return[s.ifft(I("x",n,e,t))];case"RFFT":return[s.rfft(I("x",n,e,t))];case"IRFFT":return[s.irfft(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _0e=(n,e,t,s=ns)=>{switch(n.op){case"StringNGrams":{const{nGrams:i,nGramsSplits:r}=s.string.stringNGrams(I("data",n,e,t),I("dataSplits",n,e,t),I("separator",n,e,t),I("nGramWidths",n,e,t),I("leftPad",n,e,t),I("rightPad",n,e,t),I("padWidth",n,e,t),I("preserveShortSequences",n,e,t));return[i,r]}case"StringSplit":{const{indices:i,values:r,shape:a}=s.string.stringSplit(I("input",n,e,t),I("delimiter",n,e,t),I("skipEmpty",n,e,t));return[i,r,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",n,e,t),I("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T0e=(n,e,t,s=ns)=>{switch(n.op){case"Cast":return[s.cast(I("x",n,e,t),I("dtype",n,e,t))];case"ExpandDims":{const i=I("axis",n,e,t);return[s.expandDims(I("x",n,e,t),i)]}case"Squeeze":{const i=I("axis",n,e,t);return[s.squeeze(I("x",n,e,t),i)]}case"Reshape":return[s.reshape(I("x",n,e,t),I("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(I("x",n,e,t),I("padding",n,e,t),I("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(I("x",n,e,t),I("padding",n,e,t),I("constantValue",n,e,t))];case"SpaceToBatchND":{const i=I("blockShape",n,e,t),r=I("paddings",n,e,t);return[s.spaceToBatchND(I("x",n,e,t),i,r)]}case"BatchToSpaceND":{const i=I("blockShape",n,e,t),r=I("crops",n,e,t);return[s.batchToSpaceND(I("x",n,e,t),i,r)]}case"DepthToSpace":{const i=I("blockSize",n,e,t),r=I("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(I("x",n,e,t),i,r)]}case"BroadcastTo":return[s.broadcastTo(I("x",n,e,t),I("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",n,e,t),I("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(n,e,t,s,i=Q){const r=((a,o,l)=>{switch(a.category){case"arithmetic":return i(()=>qge(a,o,l));case"basic_math":return i(()=>e0e(a,o,l));case"control":return a0e(a,o,l);case"convolution":return i(()=>o0e(a,o,l));case"creation":return i(()=>l0e(a,o,l));case"dynamic":return c0e(a,o,l);case"evaluation":return i(()=>u0e(a,o,l));case"image":return i(()=>f0e(a,o,l));case"graph":return i(()=>h0e(a,o,l));case"logical":return i(()=>m0e(a,o,l));case"matrices":return i(()=>g0e(a,o,l));case"normalization":return i(()=>y0e(a,o,l));case"ragged":return i(()=>b0e(a,o,l));case"reduction":return i(()=>x0e(a,o,l));case"slice_join":return i(()=>v0e(a,o,l));case"sparse":return i(()=>w0e(a,o,l));case"spectral":return i(()=>S0e(a,o,l));case"string":return i(()=>_0e(a,o,l));case"transformation":return i(()=>T0e(a,o,l));case"hash_table":return p0e(a,o,l,s);case"custom":const c=P3(a.op);if(c&&c.customExecutor)return c.customExecutor(new Jge(a,o,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return ha(r)?r.then(a=>[].concat(a)):[].concat(r)}class _M{constructor(e={},t={},s={},i={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n,e,t,s){const i=new Set,r=[];let a=null,o=null;const l=new Set,c=Object.keys(n).map(d=>Ws(d)[0]);let u=[];s!=null&&(u=s.map(d=>Ws(d.name)[0]));const h=[...e];for(;h.length>0;){const d=h.pop();if((O3(d)||k0e(d)||N0e(d))&&a==null&&(a=d,o=a.children.map(p=>p.name).filter(p=>i.has(p))),i.add(d.name),t[d.name]==null&&c.indexOf(d.name)===-1&&u.indexOf(d.name)===-1){if(d.inputs.length===0){r.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:i,missingInputs:r,dynamicNode:a,syncInputs:o}}function I0e(n,e,t){const{usedNodes:s,inputs:i}=t,r=[],a=Object.keys(i).map(u=>Ws(u)[0]).map(u=>n.nodes[u]),o=n.initNodes;a.forEach(u=>{s.has(u.name)&&r.push(u)}),n.weights.forEach(u=>{s.has(u.name)&&r.push(u)}),o!=null&&o.forEach(u=>{s.has(u.name)&&r.push(u)});const l=new Set,c=[];for(;r.length>0;){const u=r.pop();l.add(u.name),e[u.name]||c.push(u),u.children.forEach(h=>{!l.has(h.name)&&s.has(h.name)&&h.inputs.every(d=>l.has(d.name))&&r.push(h)})}return c}const C0e=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],M0e=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],E0e=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function O3(n){return C0e.indexOf(n.op)>=0}function k0e(n){return M0e.indexOf(n.op)>=0}function N0e(n){return E0e.indexOf(n.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vg{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new vg(e.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(i=>i.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const s=e.map(r=>r.name).sort(),i=t.map(r=>r.name).sort();return s.join(this.SEPERATOR)+"--"+i.join(this.SEPERATOR)}compile(e,t){const s=TM(e,t,this.weightMap,this._initNodes),{missingInputs:i,dynamicNode:r,syncInputs:a}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(i.length>0){const o=t.map(c=>c.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${l}]. Missing the following inputs: [${i}]`)}return I0e(this.graph,this.weightMap,s)}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return cn(t),t}cloneTensorList(e){return e?e.map(t=>this.cloneAndKeepTensor(t)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const i=s.map(h=>this.graph.nodes[Ws(h)[0]]),r=t.map(h=>Ws(h)[0]);let a=r.map(h=>this.graph.nodes[h]);a.length===0&&(a=this._outputs);const o=this.getCompilationKey(i,a);let l=this.compiledMap.get(o);l==null&&(l=this.compile(e,a),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=q().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const c={},u={};return Q(()=>{const h=new _M(this.weightMap,c,u,this.functionExecutorMap),d=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[f,y]=Ws(g),b=[];b[y]=e[g],d[f]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[f]=this.cloneTensorList(b))});const p=this.getFrozenTensorIds(d),m={};for(let g=0;g<l.length;g++){const f=l[g];if(!d[f.name]){const y=SM(f,d,h,this._resourceManager);if(ha(y))throw new Error(`The execution of the op '${f.op}' returned a promise. Please use model.executeAsync() instead.`);d[f.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[f.name]=this.cloneTensorList(y)),this.checkTensorForDisposal(f.name,f,d,h,p,r,m)}}return this.parent==null&&h.dispose(p),t.map(g=>fs(g,d,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(i=>i.id)));return new Set(t)}checkTensorForDisposal(e,t,s,i,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(s[e].forEach(l=>{l!=null&&(o[l.id]=(o[l.id]||0)+t.children.length)}),t.inputs.forEach(l=>{if(l.category!=="control"){const c=dge(l.name,s,i);c!=null&&c.forEach(u=>{if(u&&!u.kept&&!r.has(u.id)){const h=o[u.id];h===1?(u.dispose(),delete o[u.id]):h!=null&&o[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,i={},r={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=q().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new _M(this.weightMap,i,r,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,s),l=t.map(d=>fs(d,o,a)),c=l.map(d=>d.id),u=Object.keys(e).map(d=>e[d].id),h=new Set([...c,...u,...this.weightIds]);return Object.values(o).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&a.dispose(h),l}async executeFunctionAsync(e,t,s){const i=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(i,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,i){const r=Object.keys(e),a=r.map(x=>this.graph.nodes[Ws(x)[0]]),o=s.map(x=>Ws(x)[0]);let l=o.map(x=>this.graph.nodes[x]);l.length===0&&(l=this._outputs);const{usedNodes:c,missingInputs:u,dynamicNode:h,syncInputs:d}=TM(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(x=>{const[v,w]=Ws(x),_=[];_[w]=e[x],m[v]=_});const g={},f=this.getFrozenTensorIds(m),y={};for(;p.length>0;){const x=this.processStack(a,p,t,m,y,f,o,g,c);await Promise.all(x)}h==null&&!i&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter(x=>!O3(x)&&!fs(x.name,m,t)).map(x=>x.name);if(b.length>0){let x="";throw h!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${x}`)}return m}processStack(e,t,s,i,r,a,o,l,c){const u=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&I("isConstant",h.node,i,s)&&([d]=ta(h.node.name,s)),i[h.node.name]==null){const p=SM(h.node,i,s,this._resourceManager);d||([d]=ta(h.node.name,s));const m=s.currentContext;ha(p)?u.push(p.then(g=>(i[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),s.currentContext=m,this.checkTensorForDisposal(d,h.node,i,s,a,o,l),this.processChildNodes(h.node,t,s,i,r,c),g))):(i[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,i,s,a,o,l),this.processChildNodes(h.node,t,s,i,r,c))}else this.processChildNodes(h.node,t,s,i,r,c)}return u}processChildNodes(e,t,s,i,r,a){e.children.forEach(o=>{const[l]=ta(o.name,s);r[l]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(c=>!!fs(c,i,s))&&(r[l]=!0,t.push({contexts:s.currentContext,node:o})):o.inputNames.every(c=>!!fs(c,i,s))&&(r[l]=!0,t.push({contexts:s.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[i]=Ws(t),r=this.graph.nodes[i];if(r.attrParams.shape&&r.attrParams.shape.value){const a=r.attrParams.shape.value,o=a.length===s.shape.length&&s.shape.every((l,c)=>a[c]===-1||a[c]===l);E(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&E(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const i={};for(const r in e){const a=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[r];a!=null?i[a.name]=e[r]:i[r]=e[r]}return i}checkInputs(e){const t=Object.keys(e).filter(s=>{const[i]=Ws(s);return this.graph.nodes[i]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,i;const r=(i=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||i===void 0?void 0:i[t];return r!=null?r.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Ws(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class R0e{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A0e="?tfjs-format=file",L0e="model.json";class ET{constructor(e,t={},s=ST){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new R0e}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ha(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(s=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=s,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const i=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new vg(bM.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(i),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const r=bM.Instance.transformGraph(e.modelInitializer);this.initializer=new vg(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Ct?[e]:e,s={};return t.forEach((i,r)=>s[this.structuredOutputKeys[r]]=i),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Ct)&&!Array.isArray(e)){const r=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(r!=null)for(const a in r){const o=r[a];o.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let i=0;return this.inputNodes.reduce((r,a)=>{var o,l,c;const u=(c=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[a])===null||c===void 0?void 0:c.resourceId;return u!=null?r[a]=this.resourceIdToCapturedInput[u]:r[a]=e[i++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let i=0;i<s.length;i++){const r=s[i],a=t[r];this.resourceIdToCapturedInput[a.resourceId]=e[i]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&nt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function P0e(n,e={},t=ST){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=F0e(n));const s=new ET(n,e,t);return await s.load(),s}function D0e(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[s,i]=n;if(!s)throw new Error("modelJSON must be the first element of the array");if(!i||!(i instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in s))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in s))throw new Error("Model JSON is missing 'weightsManifest'");const r=Bv(s.weightsManifest),a=$v(s,r,i);e=bg(a)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=bg(n);else throw new Error("Unknown model format");const t=new ET(e);return t.load(),t}function F0e(n){return n.endsWith("/")||(n=n+"/"),`${n}${L0e}${A0e}`}/** @license See the LICENSE file. */const z3="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class G3 extends Th{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const _m='"',Zh=Symbol("out"),IM=Symbol("field"),Tm=Symbol("quote"),Ux=Symbol("quoteafterquote"),CM=Symbol("quoteinquote");class V3 extends Th{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new G3(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(E(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&E(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((i,r)=>(i[r]=i[r]+1||1,i),{}),s=Object.keys(t).filter(i=>t[i]>1);if(E(s.length===0,()=>"Duplicate column names found: "+s.toString()),this.columnConfigs){for(const i of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(i)===-1)throw new Error('The key "'+i+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");const t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){const t=this.parseRow(e),s={},i={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){const l=t[r];let c=null;if(l==="")if(o&&o.default!==void 0)c=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);c=void 0}else{const u=Number(l);if(isNaN(u))o&&o.dtype==="bool"?c=this.getBoolean(l):c=l;else if(!o||!o.dtype)c=u;else switch(o.dtype){case"float32":c=u;break;case"int32":c=Math.floor(u);break;case"bool":c=this.getBoolean(l);break;default:c=u}}o&&o.isLabel?i[a]=c:s[a]=c}}return Object.keys(i).length===0?s:{xs:s,ys:i}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){const s=[];let i=0;const r=e.length;let a=Zh;for(let o=0;o<r;o++)switch(a){case Zh:switch(e.charAt(o)){case _m:i=o+1,a=Tm;break;case this.delimiter:if(i=o+1,this.delimiter===" "&&this.delimWhitespace)break;s.push(""),a=Zh;break;default:a=IM,i=o;break}break;case IM:switch(e.charAt(o)){case this.delimiter:s.push(e.substring(i,o)),a=Zh,i=o+1;break}break;case Tm:switch(e.charAt(o)){case _m:a=Ux;break}break;case Ux:switch(e.charAt(o)){case this.delimiter:s.push(e.substring(i,o-1)),a=Zh,i=o+1;break;case _m:a=Tm;break;default:a=CM;break}break;case CM:switch(e.charAt(o)){case _m:a=Tm;break}break}if(a===Ux?s.push(e.substring(i,r-1)):s.push(e.substring(i)),t&&s.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${s}`);return s}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class kT extends Wn{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!q().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new kT(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(s){throw new Error(`Error thrown while initializing video stream: ${s.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const s=await this.getAudioData();if(this.includeSpectrogram){const i=this.flattenQueue(s.freqDataQueue);e=this.getTensorFromAudioDataArray(i,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const i=this.flattenQueue(s.timeDataQueue);t=this.getTensorFromAudioDataArray(i,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let s=0;return new Promise(i=>{const r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&i({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++s===this.numFrames&&(clearInterval(r),i({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,s=new Float32Array(e.length*t);return e.forEach((i,r)=>s.set(i,r*t)),s}getTensorFromAudioDataArray(e,t){const s=new Float32Array(oe(t));return s.set(e,s.length-e.length),Jt(s,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class NT extends Wn{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=as([0],"int32"),this.webcamConfig.centerCrop){const s=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,i=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-s)/2,a=(1-i)/2,o=r+s,l=i+a;this.cropBox=qa([a,r,l,o],[1,4])}else this.cropBox=qa([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!q().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const s=new NT(e,t);return await s.start(),s}async start(){this.webcamConfig.facingMode&&E(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=iS(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return Q(()=>{const t=ss(we(e,"float32"),0);let s;s=Ir.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const i=s.shape;return K(s,i.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class W3{}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class $3 extends Wn{split(e){return new O0e(this,e)}}class O0e extends $3{constructor(e,t){super(),this.upstream=e,this.impl=new z0e(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class z0e extends eT{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const s of t.slice(0,-1))this.outputQueue.push(s);return this.carryover=t[t.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class G0e extends Wn{decodeUTF8(){return new V0e(this)}}class V0e extends $3{constructor(e){super(),this.upstream=e,this.impl=new W0e(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class W0e extends eT{constructor(e){if(super(),this.upstream=e,q().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t;if(e.done)return!1;t=e.value;let s;return q().get("IS_BROWSER")?s=this.decoder.decode(t,{stream:!0}):s=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(s),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class U3 extends G0e{constructor(e,t={}){super(),this.file=e,this.options=t,E(e instanceof Uint8Array||(q().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{const s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,s)));else{const i=new FileReader;i.onload=a=>{let o=i.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(o)},i.onabort=a=>t(new Error("Aborted")),i.onerror=a=>t(new Error(a.type));const r=this.file.slice(this.offset,s);i.readAsArrayBuffer(r)}this.offset=s}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function $0e(n,e={},t){let s,i;typeof n=="string"?s=n:(s=n.url,i=U0e(n));const r=await(t||UE)(s,i);if(r.ok){const a=new Uint8Array(await r.arrayBuffer());return new U3(a,e)}else throw new Error(r.statusText)}const U0e=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function B3(n){return typeof n=="string"&&n.slice(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class X3 extends W3{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(B3(this.input)&&q().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.slice(7))}return new U3(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class H3 extends W3{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return B3(this.url)?new X3(this.url,this.fileOptions).iterator():$0e(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function B0e(n,e={}){return new V3(new H3(n),e)}function X0e(n){const e=q_(n);return Vs(async()=>e)}function H0e(n){return Vs(async()=>{const e=await n();return q_(()=>e.next())})}async function Z0e(n,e){return NT.create(n,e)}async function K0e(n){return kT.create(n)}/** @license See the LICENSE file. */const Z3="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y0e=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:V3,Dataset:Th,FileDataSource:X3,TextLineDataset:G3,URLDataSource:H3,array:BY,csv:B0e,func:X0e,generator:H0e,microphone:K0e,version_data:Z3,webcam:Z0e,zip:XY},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const j0e="4.2.0";/** @license See the LICENSE file. */const Q0e="4.2.0";/** @license See the LICENSE file. */const J0e="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q0e={"tfjs-core":C3,"tfjs-backend-cpu":j0e,"tfjs-backend-webgl":Q0e,"tfjs-data":Z3,"tfjs-layers":Wy,"tfjs-converter":z3,tfjs:J0e},eye=Object.freeze(Object.defineProperty({__proto__:null,Abs:Hd,Acos:pu,Acosh:fu,AdadeltaOptimizer:jw,AdagradOptimizer:Qw,AdamOptimizer:Jw,AdamaxOptimizer:qw,Add:Ll,AddN:Zd,All:Og,Any:zg,ArgMax:Kd,ArgMin:Yd,Asin:mu,Asinh:gu,Atan:yu,Atan2:xu,Atanh:bu,AvgPool:jd,AvgPool3D:Qd,AvgPool3DGrad:Vg,AvgPoolGrad:Gg,BatchMatMul:Jd,BatchToSpaceND:qd,Bincount:Wg,BroadcastArgs:$g,BroadcastTo:RE,Callback:A3,CallbackList:DN,Cast:vu,Ceil:wu,ClipByValue:Su,Complex:Ug,ComplexAbs:ep,Concat:tp,Conv2D:np,Conv2DBackpropFilter:Bg,Conv2DBackpropInput:sp,Conv3D:ip,Conv3DBackpropFilterV2:Xg,Conv3DBackpropInputV2:Hg,Cos:_u,Cosh:Tu,CropAndResize:Kg,Cumprod:Zg,Cumsum:rp,CustomCallback:ON,DataStorage:Ev,DenseBincount:Yg,DepthToSpace:jg,DepthwiseConv2dNative:ap,DepthwiseConv2dNativeBackpropFilter:Qg,DepthwiseConv2dNativeBackpropInput:Jg,Diag:qg,Dilation2D:op,Dilation2DBackpropFilter:Bm,Dilation2DBackpropInput:Um,get ENV(){return Lv},EarlyStopping:L3,Einsum:e0,Elu:Cu,EluGrad:t0,Environment:kE,Equal:lp,Erf:Mu,Exp:Eu,ExpandDims:cp,Expm1:ku,FFT:n0,Fill:s0,FlipLeftRight:i0,Floor:Nu,FloorDiv:Ru,FromPixels:Xm,FusedBatchNorm:up,FusedConv2D:md,FusedDepthwiseConv2D:gd,GatherNd:r0,GatherV2:hp,GraphModel:ET,Greater:dp,GreaterEqual:Au,History:FN,IFFT:a0,Identity:Lu,Imag:o0,InputSpec:_n,IsFinite:Pu,IsInf:Du,IsNan:Fu,KernelBackend:Pg,LRN:xp,LRNGrad:c0,LayerVariable:RN,LayersModel:ca,LeakyRelu:pp,Less:fp,LessEqual:mp,LinSpace:l0,Log:Ou,Log1p:zu,LogSoftmax:AE,LogicalAnd:gp,LogicalNot:yp,LogicalOr:bp,LogicalXor:UW,LowerBound:BW,Max:vp,MaxPool:wp,MaxPool3D:Sp,MaxPool3DGrad:h0,MaxPoolGrad:u0,MaxPoolWithArgmax:d0,Maximum:Gu,Mean:_p,Min:Tp,Minimum:Vu,MirrorPad:Ip,Mod:Wu,MomentumOptimizer:eS,Multinomial:p0,Multiply:$u,Neg:Cp,NonMaxSuppressionV3:f0,NonMaxSuppressionV4:m0,NonMaxSuppressionV5:g0,NotEqual:Mp,OP_SCOPE_SUFFIX:Gv,OneHot:kp,OnesLike:Ep,Optimizer:ka,OptimizerConstructors:Uk,Pack:Np,PadV2:Rp,Pool:XW,Pow:Uu,Prelu:Ap,Prod:Lp,RMSPropOptimizer:tS,RNN:pr,RaggedGather:y0,RaggedRange:b0,RaggedTensorToTensor:x0,Range:v0,get Rank(){return f1},Real:w0,RealDiv:Iu,Reciprocal:Bu,get Reduction(){return ds},Relu:Xu,Relu6:Hu,Reshape:Pp,ResizeBilinear:Fp,ResizeBilinearGrad:_0,ResizeNearestNeighbor:Dp,ResizeNearestNeighborGrad:S0,Reverse:Op,RotateWithOffset:G0,Round:Zu,Rsqrt:Ku,SGDOptimizer:_y,ScatterNd:T0,SearchSorted:I0,Select:zp,Selu:Yu,Sequential:$y,Sigmoid:qu,Sign:Ju,Sin:ju,Sinh:Qu,Slice:Gp,Softmax:Up,Softplus:eh,SpaceToBatchND:Wp,SparseFillEmptyRows:C0,SparseReshape:M0,SparseSegmentMean:E0,SparseSegmentSum:k0,SparseToDense:N0,SplitV:$p,Sqrt:th,Square:R0,SquaredDifference:nh,Step:oh,StridedSlice:A0,StringNGrams:L0,StringSplit:P0,StringToHashBucketFast:D0,Sub:sh,Sum:Vp,SymbolicTensor:er,Tan:ih,Tanh:rh,Tensor:Ct,TensorBuffer:Rn,Tile:ah,TopK:F0,Transform:O0,Transpose:nl,Unique:z0,Unpack:Bp,UnsortedSegmentSum:Xp,UpperBound:HW,Variable:bd,ZerosLike:Hp,_FusedMatMul:fd,abs:vn,acos:Zv,acosh:Kv,add:he,addN:GL,all:B0,any:wd,argMax:ml,argMin:Yv,asin:jv,asinh:Qv,atan:Jv,atan2:qv,atanh:ew,avgPool:jp,avgPool3d:nw,backend:la,backend_util:fN,basicLSTMCell:VL,batchNorm:lh,batchNorm2d:sw,batchNorm3d:iw,batchNorm4d:rw,batchToSpaceND:Qp,bincount:aw,booleanMaskAsync:b3,broadcastArgs:WL,broadcastTo:sl,broadcast_util:gB,browser:xK,buffer:ct,callbacks:cge,cast:we,ceil:ow,clipByValue:Ls,clone:Rr,complex:fa,concat:mn,concat1d:lw,concat2d:cw,concat3d:uw,concat4d:hw,constraints:afe,conv1d:X0,conv2d:ma,conv2dTranspose:H0,conv3d:pw,conv3dTranspose:fw,copyRegisteredKernels:jW,cos:Jp,cosh:Z0,cosineWindow:my,cumprod:Td,cumsum:K0,customGrad:zr,data:Y0e,denseBincount:jm,deprecationWarn:nU,depthToSpace:mw,depthwiseConv2d:ch,deregisterOp:hge,device_util:w$,diag:$L,dilation2d:gw,disableDeprecationWarnings:tU,dispose:nt,disposeVariables:sU,div:We,divNoNan:yw,dot:bw,dropout:Xw,einsum:UL,elu:uh,enableDebugMode:eU,enableProdMode:q$,enclosingPowerOfTwo:Hw,engine:Dt,env:q,equal:Js,erf:xw,euclideanNorm:ww,exp:qs,expandDims:ss,expm1:Sw,eye:Y0,fft:hf,fill:Dl,findBackend:uU,findBackendFactory:hU,floor:dh,floorDiv:U0,fused:T3,gather:ph,gatherND:S3,gather_util:vK,getBackend:lU,getGradient:h1,getKernel:Hm,getKernelsForBackend:Zm,grad:QB,grads:JB,greater:ws,greaterEqual:Ca,ifft:Bc,imag:qp,image:Ir,inTopKAsync:_3,initializers:Sfe,input:M3,io:ST,irfft:uy,isFinite:_w,isInf:Tw,isNaN:Iw,keep:cn,kernel_impls:tfe,layers:Vme,leakyRelu:ef,less:j0,lessEqual:vo,linalg:Yw,linspace:BL,loadGraphModel:P0e,loadGraphModelSync:D0e,loadLayersModel:sY,localResponseNormalization:Cw,log:ei,log1p:tf,logSigmoid:Mw,logSoftmax:J0,logSumExp:q0,logicalAnd:Vi,logicalNot:nf,logicalOr:ey,logicalXor:Ew,losses:Ik,lowerBound:XL,matMul:pt,math:efe,max:mi,maxPool:sf,maxPool3d:kw,maxPoolWithArgmax:HL,maximum:Wr,mean:nn,memory:vd,meshgrid:ZL,metrics:nge,min:Vc,minimum:fh,mirrorPad:Nw,mod:Rw,model:_fe,models:sge,moments:rf,movingAverage:x3,mul:Z,multiRNNCell:KL,multinomial:YL,neg:Kt,nextFrame:pf,norm:hh,notEqual:xl,oneHot:Wc,ones:Hs,onesLike:ti,op:$,outerProduct:jL,pad:Ma,pad1d:QL,pad2d:JL,pad3d:qL,pad4d:e3,pool:Aw,pow:ga,prelu:of,print:Xv,prod:Lw,profile:iU,raggedGather:t3,raggedRange:n3,raggedTensorToTensor:s3,rand:i3,randomGamma:o3,randomNormal:ty,randomStandardNormal:l3,randomUniform:gh,range:vl,ready:oU,real:$c,reciprocal:Dw,registerBackend:Hv,registerCallbackConstructor:Ife,registerGradient:LE,registerKernel:Fs,registerOp:uge,regularizers:oge,relu:hr,relu6:ny,removeBackend:cU,reshape:K,reverse:bi,reverse1d:c3,reverse2d:u3,reverse3d:h3,reverse4d:d3,rfft:df,round:sy,rsqrt:iy,scalar:Ze,scatterND:v3,scatter_util:kH,searchSorted:rb,selu:ry,separableConv2d:ay,sequential:Tfe,serialization:oK,setBackend:aU,setPlatform:dU,setdiff1dAsync:p3,sigmoid:nr,sign:Fw,signal:Tk,sin:oy,sinh:ly,slice:St,slice1d:lf,slice2d:cy,slice3d:cf,slice4d:Uc,slice_util:$k,softmax:uf,softplus:Fl,spaceToBatchND:af,sparse:Ck,sparseToDense:w3,spectral:_k,split:Rs,sqrt:jn,square:Pt,squaredDifference:hy,squeeze:wo,stack:bs,step:zl,stridedSlice:Ow,string:Mk,sub:De,sum:Oe,sumOutType:V0,tan:zw,tanh:yl,tensor:Jt,tensor1d:as,tensor2d:qa,tensor3d:Gw,tensor4d:f3,tensor5d:m3,tensor6d:g3,tensor_util:g$,test_util:_pe,tidy:Q,tile:di,time:rU,topk:Vw,train:Wo,transpose:bt,truncatedNormal:dy,unique:Ww,unregisterGradient:YW,unregisterKernel:KW,unsortedSegmentSum:py,unstack:xi,upcastType:As,upperBound:y3,util:i$,valueAndGrad:qB,valueAndGrads:eX,variable:$w,variableGrads:lk,version:q0e,version_converter:z3,version_core:C3,version_layers:Wy,where:os,whereAsync:wT,zeros:Sn,zerosLike:_t},Symbol.toStringTag,{value:"Module"})),K3=new un;K3.compose(new ae,new wa,new ae(.001,.001,.001));const tye=new un().set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);class Y3{constructor({container:e,imageTargetSrc:t,maxTrack:s,uiLoading:i="yes",uiScanning:r="yes",uiError:a="yes",filterMinCF:o=null,filterBeta:l=null,warmupTolerance:c=null,missTolerance:u=null,userDeviceId:h=null,environmentDeviceId:d=null}){this.container=e,this.imageTargetSrc=t,this.maxTrack=s,this.filterMinCF=o,this.filterBeta=l,this.warmupTolerance=c,this.missTolerance=u,this.ui=new EW({uiLoading:i,uiScanning:r,uiError:a}),this.userDeviceId=h,this.environmentDeviceId=d,this.shouldFaceUser=!1,this.scene=new CI,this.cssScene=new CI,this.renderer=new vE({antialias:!0,alpha:!0}),this.cssRenderer=new Yde({antialias:!0}),this.renderer.outputEncoding=Qa,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new Ri,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach(function(e){e.stop()}),this.video.remove()}switchCamera(){this.shouldFaceUser=!this.shouldFaceUser,this.stop(),this.start()}addAnchor(e){const t=new Ko;t.visible=!1,t.matrixAutoUpdate=!1;const s={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!1,visible:!1};return this.anchors.push(s),this.scene.add(t),s}addCSSAnchor(e){const t=new Ko;t.visible=!1,t.matrixAutoUpdate=!1;const s={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!0,visible:!1};return this.anchors.push(s),this.cssScene.add(t),s}_startVideo(){return new Promise((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){this.ui.showCompatibility(),t();return}const s={audio:!1,video:{}};this.shouldFaceUser?this.userDeviceId?s.video.deviceId={exact:this.userDeviceId}:s.video.facingMode="user":this.environmentDeviceId?s.video.deviceId={exact:this.environmentDeviceId}:s.video.facingMode="environment",navigator.mediaDevices.getUserMedia(s).then(i=>{this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()}),this.video.srcObject=i}).catch(i=>{console.log("getUserMedia error",i),t()})})}_startAR(){return new Promise(async(e,t)=>{const s=this.video;this.container,this.controller=new Hde({inputWidth:s.videoWidth,inputHeight:s.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:r=>{if(r.type==="updateMatrix"){const{targetIndex:a,worldMatrix:o}=r;for(let l=0;l<this.anchors.length;l++)if(this.anchors[l].targetIndex===a){if(this.anchors[l].css?this.anchors[l].group.children.forEach(c=>{c.element.style.visibility=o===null?"hidden":"visible"}):this.anchors[l].group.visible=o!==null,o!==null){let c=new un;c.elements=[...o],c.multiply(this.postMatrixs[a]),this.anchors[l].css&&c.multiply(K3),this.anchors[l].group.matrix=c}else this.anchors[l].group.matrix=tye;this.anchors[l].visible&&o===null&&(this.anchors[l].visible=!1,this.anchors[l].onTargetLost&&this.anchors[l].onTargetLost()),!this.anchors[l].visible&&o!==null&&(this.anchors[l].visible=!0,this.anchors[l].onTargetFound&&this.anchors[l].onTargetFound()),this.anchors[l].onTargetUpdate&&this.anchors[l].onTargetUpdate()}this.anchors.reduce((l,c)=>l||c.visible,!1)?this.ui.hideScanning():this.ui.showScanning()}}}),this.resize();const{dimensions:i}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let r=0;r<i.length;r++){const a=new ae,o=new wa,l=new ae,[c,u]=i[r];a.x=c/2,a.y=c/2+(u-c)/2,l.x=c,l.y=c,l.z=c;const h=new un;h.compose(a,o,l),this.postMatrixs.push(h)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()})}resize(){const{renderer:e,cssRenderer:t,camera:s,container:i,video:r}=this;if(!r)return;this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight);let a,o;const l=r.videoWidth/r.videoHeight,c=i.clientWidth/i.clientHeight;l>c?(o=i.clientHeight,a=o*l):(a=i.clientWidth,o=a/l);const u=this.controller.getProjectionMatrix(),h=this.controller.inputWidth/this.controller.inputHeight;let d;h>c?d=this.video.width/this.controller.inputWidth:d=this.video.height/this.controller.inputHeight;let p,m;h>c?(p=i.clientHeight,p*=d):(m=i.clientWidth,p=m/this.controller.inputWidth*this.controller.inputHeight,p*=d);let g=i.clientHeight/p;const f=2*Math.atan(1/u[5]*g)*180/Math.PI,y=u[14]/(u[10]-1),b=u[14]/(u[10]+1);u[5]/u[0],s.fov=f,s.near=y,s.far=b,s.aspect=i.clientWidth/i.clientHeight,s.updateProjectionMatrix(),r.style.top=-(o-i.clientHeight)/2+"px",r.style.left=-(a-i.clientWidth)/2+"px",r.style.width=a+"px",r.style.height=o+"px";const x=e.domElement,v=t.domElement;x.style.position="absolute",x.style.left=0,x.style.top=0,x.style.width=i.clientWidth+"px",x.style.height=i.clientHeight+"px",v.style.position="absolute",v.style.left=0,v.style.top=0,v.style.width=i.clientWidth+"px",v.style.height=i.clientHeight+"px",e.setSize(i.clientWidth,i.clientHeight),t.setSize(i.clientWidth,i.clientHeight)}}window.MINDAR||(window.MINDAR={});window.MINDAR.IMAGE||(window.MINDAR.IMAGE={});window.MINDAR.IMAGE.MindARThree=Y3;window.MINDAR.IMAGE.tf=eye;function qr(n){if(n===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function j3(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.__proto__=e}/*!
 * GSAP 3.12.2
 * https://greensock.com
 *
 * @license Copyright 2008-2023, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var gi={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},eu={duration:.5,overwrite:!1,delay:0},RT,gs,dn,Oi=1e8,$t=1/Oi,av=Math.PI*2,nye=av/4,sye=0,Q3=Math.sqrt,iye=Math.cos,rye=Math.sin,Qn=function(e){return typeof e=="string"},fn=function(e){return typeof e=="function"},xa=function(e){return typeof e=="number"},AT=function(e){return typeof e>"u"},Vr=function(e){return typeof e=="object"},Ys=function(e){return e!==!1},LT=function(){return typeof window<"u"},Im=function(e){return fn(e)||Qn(e)},J3=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},ys=Array.isArray,ov=/(?:-?\.?\d|\.)+/gi,q3=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,wc=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Bx=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,eP=/[+-]=-?[.\d]+/,tP=/[^,'"\[\]\s]+/gi,aye=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,on,Ei,lv,PT,vi={},wg={},nP,sP=function(e){return(wg=El(e,vi))&&si},DT=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},Sg=function(e,t){return!t&&console.warn(e)},iP=function(e,t){return e&&(vi[e]=t)&&wg&&(wg[e]=t)||vi},Ad=function(){return 0},oye={suppressEvents:!0,isStart:!0,kill:!1},Rm={suppressEvents:!0,kill:!1},lye={suppressEvents:!0},FT={},no=[],cv={},rP,ci={},Xx={},MM=30,Am=[],OT="",zT=function(e){var t=e[0],s,i;if(Vr(t)||fn(t)||(e=[e]),!(s=(t._gsap||{}).harness)){for(i=Am.length;i--&&!Am[i].targetTest(t););s=Am[i]}for(i=e.length;i--;)e[i]&&(e[i]._gsap||(e[i]._gsap=new kP(e[i],s)))||e.splice(i,1);return e},al=function(e){return e._gsap||zT(zi(e))[0]._gsap},aP=function(e,t,s){return(s=e[t])&&fn(s)?e[t]():AT(s)&&e.getAttribute&&e.getAttribute(t)||s},js=function(e,t){return(e=e.split(",")).forEach(t)||e},wn=function(e){return Math.round(e*1e5)/1e5||0},is=function(e){return Math.round(e*1e7)/1e7||0},kc=function(e,t){var s=t.charAt(0),i=parseFloat(t.substr(2));return e=parseFloat(e),s==="+"?e+i:s==="-"?e-i:s==="*"?e*i:e/i},cye=function(e,t){for(var s=t.length,i=0;e.indexOf(t[i])<0&&++i<s;);return i<s},_g=function(){var e=no.length,t=no.slice(0),s,i;for(cv={},no.length=0,s=0;s<e;s++)i=t[s],i&&i._lazy&&(i.render(i._lazy[0],i._lazy[1],!0)._lazy=0)},oP=function(e,t,s,i){no.length&&!gs&&_g(),e.render(t,s,i||gs&&t<0&&(e._initted||e._startAt)),no.length&&!gs&&_g()},lP=function(e){var t=parseFloat(e);return(t||t===0)&&(e+"").match(tP).length<2?t:Qn(e)?e.trim():e},cP=function(e){return e},Wi=function(e,t){for(var s in t)s in e||(e[s]=t[s]);return e},uye=function(e){return function(t,s){for(var i in s)i in t||i==="duration"&&e||i==="ease"||(t[i]=s[i])}},El=function(e,t){for(var s in t)e[s]=t[s];return e},EM=function n(e,t){for(var s in t)s!=="__proto__"&&s!=="constructor"&&s!=="prototype"&&(e[s]=Vr(t[s])?n(e[s]||(e[s]={}),t[s]):t[s]);return e},Tg=function(e,t){var s={},i;for(i in e)i in t||(s[i]=e[i]);return s},ad=function(e){var t=e.parent||on,s=e.keyframes?uye(ys(e.keyframes)):Wi;if(Ys(e.inherit))for(;t;)s(e,t.vars.defaults),t=t.parent||t._dp;return e},hye=function(e,t){for(var s=e.length,i=s===t.length;i&&s--&&e[s]===t[s];);return s<0},uP=function(e,t,s,i,r){s===void 0&&(s="_first"),i===void 0&&(i="_last");var a=e[i],o;if(r)for(o=t[r];a&&a[r]>o;)a=a._prev;return a?(t._next=a._next,a._next=t):(t._next=e[s],e[s]=t),t._next?t._next._prev=t:e[i]=t,t._prev=a,t.parent=t._dp=e,t},ab=function(e,t,s,i){s===void 0&&(s="_first"),i===void 0&&(i="_last");var r=t._prev,a=t._next;r?r._next=a:e[s]===t&&(e[s]=a),a?a._prev=r:e[i]===t&&(e[i]=r),t._next=t._prev=t.parent=null},fo=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove&&e.parent.remove(e),e._act=0},ol=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var s=e;s;)s._dirty=1,s=s.parent;return e},dye=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},uv=function(e,t,s,i){return e._startAt&&(gs?e._startAt.revert(Rm):e.vars.immediateRender&&!e.vars.autoRevert||e._startAt.render(t,!0,i))},pye=function n(e){return!e||e._ts&&n(e.parent)},kM=function(e){return e._repeat?tu(e._tTime,e=e.duration()+e._rDelay)*e:0},tu=function(e,t){var s=Math.floor(e/=t);return e&&s===e?s-1:s},Ig=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},ob=function(e){return e._end=is(e._start+(e._tDur/Math.abs(e._ts||e._rts||$t)||0))},lb=function(e,t){var s=e._dp;return s&&s.smoothChildTiming&&e._ts&&(e._start=is(s._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),ob(e),s._dirty||ol(s,e)),e},hP=function(e,t){var s;if((t._time||!t._dur&&t._initted||t._start<e._time&&(t._dur||!t.add))&&(s=Ig(e.rawTime(),t),(!t._dur||Pf(0,t.totalDuration(),s)-t._tTime>$t)&&t.render(s,!0)),ol(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(s=e;s._dp;)s.rawTime()>=0&&s.totalTime(s._tTime),s=s._dp;e._zTime=-$t}},_r=function(e,t,s,i){return t.parent&&fo(t),t._start=is((xa(s)?s:s||e!==on?Mi(e,s,t):e._time)+t._delay),t._end=is(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),uP(e,t,"_first","_last",e._sort?"_start":0),hv(t)||(e._recent=t),i||hP(e,t),e._ts<0&&lb(e,e._tTime),e},dP=function(e,t){return(vi.ScrollTrigger||DT("scrollTrigger",t))&&vi.ScrollTrigger.create(t,e)},pP=function(e,t,s,i,r){if(VT(e,t,r),!e._initted)return 1;if(!s&&e._pt&&!gs&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&rP!==hi.frame)return no.push(e),e._lazy=[r,i],1},fye=function n(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||n(t))},hv=function(e){var t=e.data;return t==="isFromStart"||t==="isStart"},mye=function(e,t,s,i){var r=e.ratio,a=t<0||!t&&(!e._start&&fye(e)&&!(!e._initted&&hv(e))||(e._ts<0||e._dp._ts<0)&&!hv(e))?0:1,o=e._rDelay,l=0,c,u,h;if(o&&e._repeat&&(l=Pf(0,e._tDur,t),u=tu(l,o),e._yoyo&&u&1&&(a=1-a),u!==tu(e._tTime,o)&&(r=1-a,e.vars.repeatRefresh&&e._initted&&e.invalidate())),a!==r||gs||i||e._zTime===$t||!t&&e._zTime){if(!e._initted&&pP(e,t,i,s,l))return;for(h=e._zTime,e._zTime=t||(s?$t:0),s||(s=t&&!h),e.ratio=a,e._from&&(a=1-a),e._time=0,e._tTime=l,c=e._pt;c;)c.r(a,c.d),c=c._next;t<0&&uv(e,t,s,!0),e._onUpdate&&!s&&Gi(e,"onUpdate"),l&&e._repeat&&!s&&e.parent&&Gi(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===a&&(a&&fo(e,1),!s&&!gs&&(Gi(e,a?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},gye=function(e,t,s){var i;if(s>t)for(i=e._first;i&&i._start<=s;){if(i.data==="isPause"&&i._start>t)return i;i=i._next}else for(i=e._last;i&&i._start>=s;){if(i.data==="isPause"&&i._start<t)return i;i=i._prev}},nu=function(e,t,s,i){var r=e._repeat,a=is(t)||0,o=e._tTime/e._tDur;return o&&!i&&(e._time*=a/e._dur),e._dur=a,e._tDur=r?r<0?1e10:is(a*(r+1)+e._rDelay*r):a,o>0&&!i&&lb(e,e._tTime=e._tDur*o),e.parent&&ob(e),s||ol(e.parent,e),e},NM=function(e){return e instanceof Bs?ol(e):nu(e,e._dur)},yye={_start:0,endTime:Ad,totalDuration:Ad},Mi=function n(e,t,s){var i=e.labels,r=e._recent||yye,a=e.duration()>=Oi?r.endTime(!1):e._dur,o,l,c;return Qn(t)&&(isNaN(t)||t in i)?(l=t.charAt(0),c=t.substr(-1)==="%",o=t.indexOf("="),l==="<"||l===">"?(o>=0&&(t=t.replace(/=/,"")),(l==="<"?r._start:r.endTime(r._repeat>=0))+(parseFloat(t.substr(1))||0)*(c?(o<0?r:s).totalDuration()/100:1)):o<0?(t in i||(i[t]=a),i[t]):(l=parseFloat(t.charAt(o-1)+t.substr(o+1)),c&&s&&(l=l/100*(ys(s)?s[0]:s).totalDuration()),o>1?n(e,t.substr(0,o-1),s)+l:a+l)):t==null?a:+t},od=function(e,t,s){var i=xa(t[1]),r=(i?2:1)+(e<2?0:1),a=t[r],o,l;if(i&&(a.duration=t[1]),a.parent=s,e){for(o=a,l=s;l&&!("immediateRender"in o);)o=l.vars.defaults||{},l=Ys(l.vars.inherit)&&l.parent;a.immediateRender=Ys(o.immediateRender),e<2?a.runBackwards=1:a.startAt=t[r-1]}return new kn(t[0],a,t[r+1])},To=function(e,t){return e||e===0?t(e):t},Pf=function(e,t,s){return s<e?e:s>t?t:s},ms=function(e,t){return!Qn(e)||!(t=aye.exec(e))?"":t[1]},bye=function(e,t,s){return To(s,function(i){return Pf(e,t,i)})},dv=[].slice,fP=function(e,t){return e&&Vr(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&Vr(e[0]))&&!e.nodeType&&e!==Ei},xye=function(e,t,s){return s===void 0&&(s=[]),e.forEach(function(i){var r;return Qn(i)&&!t||fP(i,1)?(r=s).push.apply(r,zi(i)):s.push(i)})||s},zi=function(e,t,s){return dn&&!t&&dn.selector?dn.selector(e):Qn(e)&&!s&&(lv||!su())?dv.call((t||PT).querySelectorAll(e),0):ys(e)?xye(e,s):fP(e)?dv.call(e,0):e?[e]:[]},pv=function(e){return e=zi(e)[0]||Sg("Invalid scope")||{},function(t){var s=e.current||e.nativeElement||e;return zi(t,s.querySelectorAll?s:s===e?Sg("Invalid scope")||PT.createElement("div"):e)}},mP=function(e){return e.sort(function(){return .5-Math.random()})},gP=function(e){if(fn(e))return e;var t=Vr(e)?e:{each:e},s=ll(t.ease),i=t.from||0,r=parseFloat(t.base)||0,a={},o=i>0&&i<1,l=isNaN(i)||o,c=t.axis,u=i,h=i;return Qn(i)?u=h={center:.5,edges:.5,end:1}[i]||0:!o&&l&&(u=i[0],h=i[1]),function(d,p,m){var g=(m||t).length,f=a[g],y,b,x,v,w,_,T,C,S;if(!f){if(S=t.grid==="auto"?0:(t.grid||[1,Oi])[1],!S){for(T=-Oi;T<(T=m[S++].getBoundingClientRect().left)&&S<g;);S--}for(f=a[g]=[],y=l?Math.min(S,g)*u-.5:i%S,b=S===Oi?0:l?g*h/S-.5:i/S|0,T=0,C=Oi,_=0;_<g;_++)x=_%S-y,v=b-(_/S|0),f[_]=w=c?Math.abs(c==="y"?v:x):Q3(x*x+v*v),w>T&&(T=w),w<C&&(C=w);i==="random"&&mP(f),f.max=T-C,f.min=C,f.v=g=(parseFloat(t.amount)||parseFloat(t.each)*(S>g?g-1:c?c==="y"?g/S:S:Math.max(S,g/S))||0)*(i==="edges"?-1:1),f.b=g<0?r-g:r,f.u=ms(t.amount||t.each)||0,s=s&&g<0?CP(s):s}return g=(f[d]-f.min)/f.max||0,is(f.b+(s?s(g):g)*f.v)+f.u}},fv=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(s){var i=is(Math.round(parseFloat(s)/e)*e*t);return(i-i%1)/t+(xa(s)?0:ms(s))}},yP=function(e,t){var s=ys(e),i,r;return!s&&Vr(e)&&(i=s=e.radius||Oi,e.values?(e=zi(e.values),(r=!xa(e[0]))&&(i*=i)):e=fv(e.increment)),To(t,s?fn(e)?function(a){return r=e(a),Math.abs(r-a)<=i?r:a}:function(a){for(var o=parseFloat(r?a.x:a),l=parseFloat(r?a.y:0),c=Oi,u=0,h=e.length,d,p;h--;)r?(d=e[h].x-o,p=e[h].y-l,d=d*d+p*p):d=Math.abs(e[h]-o),d<c&&(c=d,u=h);return u=!i||c<=i?e[u]:a,r||u===a||xa(a)?u:u+ms(a)}:fv(e))},bP=function(e,t,s,i){return To(ys(e)?!t:s===!0?!!(s=0):!i,function(){return ys(e)?e[~~(Math.random()*e.length)]:(s=s||1e-5)&&(i=s<1?Math.pow(10,(s+"").length-2):1)&&Math.floor(Math.round((e-s/2+Math.random()*(t-e+s*.99))/s)*s*i)/i})},vye=function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return function(i){return t.reduce(function(r,a){return a(r)},i)}},wye=function(e,t){return function(s){return e(parseFloat(s))+(t||ms(s))}},Sye=function(e,t,s){return vP(e,t,0,1,s)},xP=function(e,t,s){return To(s,function(i){return e[~~t(i)]})},_ye=function n(e,t,s){var i=t-e;return ys(e)?xP(e,n(0,e.length),t):To(s,function(r){return(i+(r-e)%i)%i+e})},Tye=function n(e,t,s){var i=t-e,r=i*2;return ys(e)?xP(e,n(0,e.length-1),t):To(s,function(a){return a=(r+(a-e)%r)%r||0,e+(a>i?r-a:a)})},Ld=function(e){for(var t=0,s="",i,r,a,o;~(i=e.indexOf("random(",t));)a=e.indexOf(")",i),o=e.charAt(i+7)==="[",r=e.substr(i+7,a-i-7).match(o?tP:ov),s+=e.substr(t,i-t)+bP(o?r:+r[0],o?0:+r[1],+r[2]||1e-5),t=a+1;return s+e.substr(t,e.length-t)},vP=function(e,t,s,i,r){var a=t-e,o=i-s;return To(r,function(l){return s+((l-e)/a*o||0)})},Iye=function n(e,t,s,i){var r=isNaN(e+t)?0:function(p){return(1-p)*e+p*t};if(!r){var a=Qn(e),o={},l,c,u,h,d;if(s===!0&&(i=1)&&(s=null),a)e={p:e},t={p:t};else if(ys(e)&&!ys(t)){for(u=[],h=e.length,d=h-2,c=1;c<h;c++)u.push(n(e[c-1],e[c]));h--,r=function(m){m*=h;var g=Math.min(d,~~m);return u[g](m-g)},s=t}else i||(e=El(ys(e)?[]:{},e));if(!u){for(l in t)GT.call(o,e,l,"get",t[l]);r=function(m){return UT(m,o)||(a?e.p:e)}}}return To(s,r)},RM=function(e,t,s){var i=e.labels,r=Oi,a,o,l;for(a in i)o=i[a]-t,o<0==!!s&&o&&r>(o=Math.abs(o))&&(l=a,r=o);return l},Gi=function(e,t,s){var i=e.vars,r=i[t],a=dn,o=e._ctx,l,c,u;if(r)return l=i[t+"Params"],c=i.callbackScope||e,s&&no.length&&_g(),o&&(dn=o),u=l?r.apply(c,l):r.call(c),dn=a,u},nd=function(e){return fo(e),e.scrollTrigger&&e.scrollTrigger.kill(!!gs),e.progress()<1&&Gi(e,"onInterrupt"),e},Sc,wP=[],SP=function(e){if(LT()&&e){e=!e.name&&e.default||e;var t=e.name,s=fn(e),i=t&&!s&&e.init?function(){this._props=[]}:e,r={init:Ad,render:UT,add:GT,kill:Wye,modifier:Vye,rawVars:0},a={targetTest:0,get:0,getSetter:$T,aliases:{},register:0};if(su(),e!==i){if(ci[t])return;Wi(i,Wi(Tg(e,r),a)),El(i.prototype,El(r,Tg(e,a))),ci[i.prop=t]=i,e.targetTest&&(Am.push(i),FT[t]=1),t=(t==="css"?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}iP(t,i),e.register&&e.register(si,i,Qs)}else e&&wP.push(e)},Vt=255,sd={aqua:[0,Vt,Vt],lime:[0,Vt,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,Vt],navy:[0,0,128],white:[Vt,Vt,Vt],olive:[128,128,0],yellow:[Vt,Vt,0],orange:[Vt,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[Vt,0,0],pink:[Vt,192,203],cyan:[0,Vt,Vt],transparent:[Vt,Vt,Vt,0]},Hx=function(e,t,s){return e+=e<0?1:e>1?-1:0,(e*6<1?t+(s-t)*e*6:e<.5?s:e*3<2?t+(s-t)*(2/3-e)*6:t)*Vt+.5|0},_P=function(e,t,s){var i=e?xa(e)?[e>>16,e>>8&Vt,e&Vt]:0:sd.black,r,a,o,l,c,u,h,d,p,m;if(!i){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),sd[e])i=sd[e];else if(e.charAt(0)==="#"){if(e.length<6&&(r=e.charAt(1),a=e.charAt(2),o=e.charAt(3),e="#"+r+r+a+a+o+o+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return i=parseInt(e.substr(1,6),16),[i>>16,i>>8&Vt,i&Vt,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),i=[e>>16,e>>8&Vt,e&Vt]}else if(e.substr(0,3)==="hsl"){if(i=m=e.match(ov),!t)l=+i[0]%360/360,c=+i[1]/100,u=+i[2]/100,a=u<=.5?u*(c+1):u+c-u*c,r=u*2-a,i.length>3&&(i[3]*=1),i[0]=Hx(l+1/3,r,a),i[1]=Hx(l,r,a),i[2]=Hx(l-1/3,r,a);else if(~e.indexOf("="))return i=e.match(q3),s&&i.length<4&&(i[3]=1),i}else i=e.match(ov)||sd.transparent;i=i.map(Number)}return t&&!m&&(r=i[0]/Vt,a=i[1]/Vt,o=i[2]/Vt,h=Math.max(r,a,o),d=Math.min(r,a,o),u=(h+d)/2,h===d?l=c=0:(p=h-d,c=u>.5?p/(2-h-d):p/(h+d),l=h===r?(a-o)/p+(a<o?6:0):h===a?(o-r)/p+2:(r-a)/p+4,l*=60),i[0]=~~(l+.5),i[1]=~~(c*100+.5),i[2]=~~(u*100+.5)),s&&i.length<4&&(i[3]=1),i},TP=function(e){var t=[],s=[],i=-1;return e.split(so).forEach(function(r){var a=r.match(wc)||[];t.push.apply(t,a),s.push(i+=a.length+1)}),t.c=s,t},AM=function(e,t,s){var i="",r=(e+i).match(so),a=t?"hsla(":"rgba(",o=0,l,c,u,h;if(!r)return e;if(r=r.map(function(d){return(d=_P(d,t,1))&&a+(t?d[0]+","+d[1]+"%,"+d[2]+"%,"+d[3]:d.join(","))+")"}),s&&(u=TP(e),l=s.c,l.join(i)!==u.c.join(i)))for(c=e.replace(so,"1").split(wc),h=c.length-1;o<h;o++)i+=c[o]+(~l.indexOf(o)?r.shift()||a+"0,0,0,0)":(u.length?u:r.length?r:s).shift());if(!c)for(c=e.split(so),h=c.length-1;o<h;o++)i+=c[o]+r[o];return i+c[h]},so=function(){var n="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in sd)n+="|"+e+"\\b";return new RegExp(n+")","gi")}(),Cye=/hsl[a]?\(/,IP=function(e){var t=e.join(" "),s;if(so.lastIndex=0,so.test(t))return s=Cye.test(t),e[1]=AM(e[1],s),e[0]=AM(e[0],s,TP(e[1])),!0},Pd,hi=function(){var n=Date.now,e=500,t=33,s=n(),i=s,r=1e3/240,a=r,o=[],l,c,u,h,d,p,m=function g(f){var y=n()-i,b=f===!0,x,v,w,_;if(y>e&&(s+=y-t),i+=y,w=i-s,x=w-a,(x>0||b)&&(_=++h.frame,d=w-h.time*1e3,h.time=w=w/1e3,a+=x+(x>=r?4:r-x),v=1),b||(l=c(g)),v)for(p=0;p<o.length;p++)o[p](w,d,_,f)};return h={time:0,frame:0,tick:function(){m(!0)},deltaRatio:function(f){return d/(1e3/(f||60))},wake:function(){nP&&(!lv&&LT()&&(Ei=lv=window,PT=Ei.document||{},vi.gsap=si,(Ei.gsapVersions||(Ei.gsapVersions=[])).push(si.version),sP(wg||Ei.GreenSockGlobals||!Ei.gsap&&Ei||{}),u=Ei.requestAnimationFrame,wP.forEach(SP)),l&&h.sleep(),c=u||function(f){return setTimeout(f,a-h.time*1e3+1|0)},Pd=1,m(2))},sleep:function(){(u?Ei.cancelAnimationFrame:clearTimeout)(l),Pd=0,c=Ad},lagSmoothing:function(f,y){e=f||1/0,t=Math.min(y||33,e)},fps:function(f){r=1e3/(f||240),a=h.time*1e3+r},add:function(f,y,b){var x=y?function(v,w,_,T){f(v,w,_,T),h.remove(x)}:f;return h.remove(f),o[b?"unshift":"push"](x),su(),x},remove:function(f,y){~(y=o.indexOf(f))&&o.splice(y,1)&&p>=y&&p--},_listeners:o},h}(),su=function(){return!Pd&&hi.wake()},Mt={},Mye=/^[\d.\-M][\d.\-,\s]/,Eye=/["']/g,kye=function(e){for(var t={},s=e.substr(1,e.length-3).split(":"),i=s[0],r=1,a=s.length,o,l,c;r<a;r++)l=s[r],o=r!==a-1?l.lastIndexOf(","):l.length,c=l.substr(0,o),t[i]=isNaN(c)?c.replace(Eye,"").trim():+c,i=l.substr(o+1).trim();return t},Nye=function(e){var t=e.indexOf("(")+1,s=e.indexOf(")"),i=e.indexOf("(",t);return e.substring(t,~i&&i<s?e.indexOf(")",s+1):s)},Rye=function(e){var t=(e+"").split("("),s=Mt[t[0]];return s&&t.length>1&&s.config?s.config.apply(null,~e.indexOf("{")?[kye(t[1])]:Nye(e).split(",").map(lP)):Mt._CE&&Mye.test(e)?Mt._CE("",e):s},CP=function(e){return function(t){return 1-e(1-t)}},MP=function n(e,t){for(var s=e._first,i;s;)s instanceof Bs?n(s,t):s.vars.yoyoEase&&(!s._yoyo||!s._repeat)&&s._yoyo!==t&&(s.timeline?n(s.timeline,t):(i=s._ease,s._ease=s._yEase,s._yEase=i,s._yoyo=t)),s=s._next},ll=function(e,t){return e&&(fn(e)?e:Mt[e]||Rye(e))||t},Zl=function(e,t,s,i){s===void 0&&(s=function(l){return 1-t(1-l)}),i===void 0&&(i=function(l){return l<.5?t(l*2)/2:1-t((1-l)*2)/2});var r={easeIn:t,easeOut:s,easeInOut:i},a;return js(e,function(o){Mt[o]=vi[o]=r,Mt[a=o.toLowerCase()]=s;for(var l in r)Mt[a+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=Mt[o+"."+l]=r[l]}),r},EP=function(e){return function(t){return t<.5?(1-e(1-t*2))/2:.5+e((t-.5)*2)/2}},Zx=function n(e,t,s){var i=t>=1?t:1,r=(s||(e?.3:.45))/(t<1?t:1),a=r/av*(Math.asin(1/i)||0),o=function(u){return u===1?1:i*Math.pow(2,-10*u)*rye((u-a)*r)+1},l=e==="out"?o:e==="in"?function(c){return 1-o(1-c)}:EP(o);return r=av/r,l.config=function(c,u){return n(e,c,u)},l},Kx=function n(e,t){t===void 0&&(t=1.70158);var s=function(a){return a?--a*a*((t+1)*a+t)+1:0},i=e==="out"?s:e==="in"?function(r){return 1-s(1-r)}:EP(s);return i.config=function(r){return n(e,r)},i};js("Linear,Quad,Cubic,Quart,Quint,Strong",function(n,e){var t=e<5?e+1:e;Zl(n+",Power"+(t-1),e?function(s){return Math.pow(s,t)}:function(s){return s},function(s){return 1-Math.pow(1-s,t)},function(s){return s<.5?Math.pow(s*2,t)/2:1-Math.pow((1-s)*2,t)/2})});Mt.Linear.easeNone=Mt.none=Mt.Linear.easeIn;Zl("Elastic",Zx("in"),Zx("out"),Zx());(function(n,e){var t=1/e,s=2*t,i=2.5*t,r=function(o){return o<t?n*o*o:o<s?n*Math.pow(o-1.5/e,2)+.75:o<i?n*(o-=2.25/e)*o+.9375:n*Math.pow(o-2.625/e,2)+.984375};Zl("Bounce",function(a){return 1-r(1-a)},r)})(7.5625,2.75);Zl("Expo",function(n){return n?Math.pow(2,10*(n-1)):0});Zl("Circ",function(n){return-(Q3(1-n*n)-1)});Zl("Sine",function(n){return n===1?1:-iye(n*nye)+1});Zl("Back",Kx("in"),Kx("out"),Kx());Mt.SteppedEase=Mt.steps=vi.SteppedEase={config:function(e,t){e===void 0&&(e=1);var s=1/e,i=e+(t?0:1),r=t?1:0,a=1-$t;return function(o){return((i*Pf(0,a,o)|0)+r)*s}}};eu.ease=Mt["quad.out"];js("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(n){return OT+=n+","+n+"Params,"});var kP=function(e,t){this.id=sye++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:aP,this.set=t?t.getSetter:$T},Dd=function(){function n(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,nu(this,+t.duration,1,1),this.data=t.data,dn&&(this._ctx=dn,dn.data.push(this)),Pd||hi.wake()}var e=n.prototype;return e.delay=function(s){return s||s===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+s-this._delay),this._delay=s,this):this._delay},e.duration=function(s){return arguments.length?this.totalDuration(this._repeat>0?s+(s+this._rDelay)*this._repeat:s):this.totalDuration()&&this._dur},e.totalDuration=function(s){return arguments.length?(this._dirty=0,nu(this,this._repeat<0?s:(s-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(s,i){if(su(),!arguments.length)return this._tTime;var r=this._dp;if(r&&r.smoothChildTiming&&this._ts){for(lb(this,s),!r._dp||r.parent||hP(r,this);r&&r.parent;)r.parent._time!==r._start+(r._ts>=0?r._tTime/r._ts:(r.totalDuration()-r._tTime)/-r._ts)&&r.totalTime(r._tTime,!0),r=r.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&s<this._tDur||this._ts<0&&s>0||!this._tDur&&!s)&&_r(this._dp,this,this._start-this._delay)}return(this._tTime!==s||!this._dur&&!i||this._initted&&Math.abs(this._zTime)===$t||!s&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=s),oP(this,s,i)),this},e.time=function(s,i){return arguments.length?this.totalTime(Math.min(this.totalDuration(),s+kM(this))%(this._dur+this._rDelay)||(s?this._dur:0),i):this._time},e.totalProgress=function(s,i){return arguments.length?this.totalTime(this.totalDuration()*s,i):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},e.progress=function(s,i){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-s:s)+kM(this),i):this.duration()?Math.min(1,this._time/this._dur):this.ratio},e.iteration=function(s,i){var r=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(s-1)*r,i):this._repeat?tu(this._tTime,r)+1:1},e.timeScale=function(s){if(!arguments.length)return this._rts===-$t?0:this._rts;if(this._rts===s)return this;var i=this.parent&&this._ts?Ig(this.parent._time,this):this._tTime;return this._rts=+s||0,this._ts=this._ps||s===-$t?0:this._rts,this.totalTime(Pf(-Math.abs(this._delay),this._tDur,i),!0),ob(this),dye(this)},e.paused=function(s){return arguments.length?(this._ps!==s&&(this._ps=s,s?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(su(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==$t&&(this._tTime-=$t)))),this):this._ps},e.startTime=function(s){if(arguments.length){this._start=s;var i=this.parent||this._dp;return i&&(i._sort||!this.parent)&&_r(i,this,s-this._delay),this}return this._start},e.endTime=function(s){return this._start+(Ys(s)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(s){var i=this.parent||this._dp;return i?s&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Ig(i.rawTime(s),this):this._tTime:this._tTime},e.revert=function(s){s===void 0&&(s=lye);var i=gs;return gs=s,(this._initted||this._startAt)&&(this.timeline&&this.timeline.revert(s),this.totalTime(-.01,s.suppressEvents)),this.data!=="nested"&&s.kill!==!1&&this.kill(),gs=i,this},e.globalTime=function(s){for(var i=this,r=arguments.length?s:i.rawTime();i;)r=i._start+r/(i._ts||1),i=i._dp;return!this.parent&&this._sat?this._sat.vars.immediateRender?-1/0:this._sat.globalTime(s):r},e.repeat=function(s){return arguments.length?(this._repeat=s===1/0?-2:s,NM(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(s){if(arguments.length){var i=this._time;return this._rDelay=s,NM(this),i?this.time(i):this}return this._rDelay},e.yoyo=function(s){return arguments.length?(this._yoyo=s,this):this._yoyo},e.seek=function(s,i){return this.totalTime(Mi(this,s),Ys(i))},e.restart=function(s,i){return this.play().totalTime(s?-this._delay:0,Ys(i))},e.play=function(s,i){return s!=null&&this.seek(s,i),this.reversed(!1).paused(!1)},e.reverse=function(s,i){return s!=null&&this.seek(s||this.totalDuration(),i),this.reversed(!0).paused(!1)},e.pause=function(s,i){return s!=null&&this.seek(s,i),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(s){return arguments.length?(!!s!==this.reversed()&&this.timeScale(-this._rts||(s?-$t:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-$t,this},e.isActive=function(){var s=this.parent||this._dp,i=this._start,r;return!!(!s||this._ts&&this._initted&&s.isActive()&&(r=s.rawTime(!0))>=i&&r<this.endTime(!0)-$t)},e.eventCallback=function(s,i,r){var a=this.vars;return arguments.length>1?(i?(a[s]=i,r&&(a[s+"Params"]=r),s==="onUpdate"&&(this._onUpdate=i)):delete a[s],this):a[s]},e.then=function(s){var i=this;return new Promise(function(r){var a=fn(s)?s:cP,o=function(){var c=i.then;i.then=null,fn(a)&&(a=a(i))&&(a.then||a===i)&&(i.then=c),r(a),i.then=c};i._initted&&i.totalProgress()===1&&i._ts>=0||!i._tTime&&i._ts<0?o():i._prom=o})},e.kill=function(){nd(this)},n}();Wi(Dd.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-$t,_prom:0,_ps:!1,_rts:1});var Bs=function(n){j3(e,n);function e(s,i){var r;return s===void 0&&(s={}),r=n.call(this,s)||this,r.labels={},r.smoothChildTiming=!!s.smoothChildTiming,r.autoRemoveChildren=!!s.autoRemoveChildren,r._sort=Ys(s.sortChildren),on&&_r(s.parent||on,qr(r),i),s.reversed&&r.reverse(),s.paused&&r.paused(!0),s.scrollTrigger&&dP(qr(r),s.scrollTrigger),r}var t=e.prototype;return t.to=function(i,r,a){return od(0,arguments,this),this},t.from=function(i,r,a){return od(1,arguments,this),this},t.fromTo=function(i,r,a,o){return od(2,arguments,this),this},t.set=function(i,r,a){return r.duration=0,r.parent=this,ad(r).repeatDelay||(r.repeat=0),r.immediateRender=!!r.immediateRender,new kn(i,r,Mi(this,a),1),this},t.call=function(i,r,a){return _r(this,kn.delayedCall(0,i,r),a)},t.staggerTo=function(i,r,a,o,l,c,u){return a.duration=r,a.stagger=a.stagger||o,a.onComplete=c,a.onCompleteParams=u,a.parent=this,new kn(i,a,Mi(this,l)),this},t.staggerFrom=function(i,r,a,o,l,c,u){return a.runBackwards=1,ad(a).immediateRender=Ys(a.immediateRender),this.staggerTo(i,r,a,o,l,c,u)},t.staggerFromTo=function(i,r,a,o,l,c,u,h){return o.startAt=a,ad(o).immediateRender=Ys(o.immediateRender),this.staggerTo(i,r,o,l,c,u,h)},t.render=function(i,r,a){var o=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,u=i<=0?0:is(i),h=this._zTime<0!=i<0&&(this._initted||!c),d,p,m,g,f,y,b,x,v,w,_,T;if(this!==on&&u>l&&i>=0&&(u=l),u!==this._tTime||a||h){if(o!==this._time&&c&&(u+=this._time-o,i+=this._time-o),d=u,v=this._start,x=this._ts,y=!x,h&&(c||(o=this._zTime),(i||!r)&&(this._zTime=i)),this._repeat){if(_=this._yoyo,f=c+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(f*100+i,r,a);if(d=is(u%f),u===l?(g=this._repeat,d=c):(g=~~(u/f),g&&g===u/f&&(d=c,g--),d>c&&(d=c)),w=tu(this._tTime,f),!o&&this._tTime&&w!==g&&this._tTime-w*f-this._dur<=0&&(w=g),_&&g&1&&(d=c-d,T=1),g!==w&&!this._lock){var C=_&&w&1,S=C===(_&&g&1);if(g<w&&(C=!C),o=C?0:u%c?c:u,this._lock=1,this.render(o||(T?0:is(g*f)),r,!c)._lock=0,this._tTime=u,!r&&this.parent&&Gi(this,"onRepeat"),this.vars.repeatRefresh&&!T&&(this.invalidate()._lock=1),o&&o!==this._time||y!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,S&&(this._lock=2,o=C?c:-1e-4,this.render(o,!0),this.vars.repeatRefresh&&!T&&this.invalidate()),this._lock=0,!this._ts&&!y)return this;MP(this,T)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(b=gye(this,is(o),is(d)),b&&(u-=d-(d=b._start))),this._tTime=u,this._time=d,this._act=!x,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=i,o=0),!o&&d&&!r&&!g&&(Gi(this,"onStart"),this._tTime!==u))return this;if(d>=o&&i>=0)for(p=this._first;p;){if(m=p._next,(p._act||d>=p._start)&&p._ts&&b!==p){if(p.parent!==this)return this.render(i,r,a);if(p.render(p._ts>0?(d-p._start)*p._ts:(p._dirty?p.totalDuration():p._tDur)+(d-p._start)*p._ts,r,a),d!==this._time||!this._ts&&!y){b=0,m&&(u+=this._zTime=-$t);break}}p=m}else{p=this._last;for(var M=i<0?i:d;p;){if(m=p._prev,(p._act||M<=p._end)&&p._ts&&b!==p){if(p.parent!==this)return this.render(i,r,a);if(p.render(p._ts>0?(M-p._start)*p._ts:(p._dirty?p.totalDuration():p._tDur)+(M-p._start)*p._ts,r,a||gs&&(p._initted||p._startAt)),d!==this._time||!this._ts&&!y){b=0,m&&(u+=this._zTime=M?-$t:$t);break}}p=m}}if(b&&!r&&(this.pause(),b.render(d>=o?0:-$t)._zTime=d>=o?1:-1,this._ts))return this._start=v,ob(this),this.render(i,r,a);this._onUpdate&&!r&&Gi(this,"onUpdate",!0),(u===l&&this._tTime>=this.totalDuration()||!u&&o)&&(v===this._start||Math.abs(x)!==Math.abs(this._ts))&&(this._lock||((i||!c)&&(u===l&&this._ts>0||!u&&this._ts<0)&&fo(this,1),!r&&!(i<0&&!o)&&(u||o||!l)&&(Gi(this,u===l&&i>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(u<l&&this.timeScale()>0)&&this._prom())))}return this},t.add=function(i,r){var a=this;if(xa(r)||(r=Mi(this,r,i)),!(i instanceof Dd)){if(ys(i))return i.forEach(function(o){return a.add(o,r)}),this;if(Qn(i))return this.addLabel(i,r);if(fn(i))i=kn.delayedCall(0,i);else return this}return this!==i?_r(this,i,r):this},t.getChildren=function(i,r,a,o){i===void 0&&(i=!0),r===void 0&&(r=!0),a===void 0&&(a=!0),o===void 0&&(o=-Oi);for(var l=[],c=this._first;c;)c._start>=o&&(c instanceof kn?r&&l.push(c):(a&&l.push(c),i&&l.push.apply(l,c.getChildren(!0,r,a)))),c=c._next;return l},t.getById=function(i){for(var r=this.getChildren(1,1,1),a=r.length;a--;)if(r[a].vars.id===i)return r[a]},t.remove=function(i){return Qn(i)?this.removeLabel(i):fn(i)?this.killTweensOf(i):(ab(this,i),i===this._recent&&(this._recent=this._last),ol(this))},t.totalTime=function(i,r){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=is(hi.time-(this._ts>0?i/this._ts:(this.totalDuration()-i)/-this._ts))),n.prototype.totalTime.call(this,i,r),this._forcing=0,this):this._tTime},t.addLabel=function(i,r){return this.labels[i]=Mi(this,r),this},t.removeLabel=function(i){return delete this.labels[i],this},t.addPause=function(i,r,a){var o=kn.delayedCall(0,r||Ad,a);return o.data="isPause",this._hasPause=1,_r(this,o,Mi(this,i))},t.removePause=function(i){var r=this._first;for(i=Mi(this,i);r;)r._start===i&&r.data==="isPause"&&fo(r),r=r._next},t.killTweensOf=function(i,r,a){for(var o=this.getTweensOf(i,a),l=o.length;l--;)Xa!==o[l]&&o[l].kill(i,r);return this},t.getTweensOf=function(i,r){for(var a=[],o=zi(i),l=this._first,c=xa(r),u;l;)l instanceof kn?cye(l._targets,o)&&(c?(!Xa||l._initted&&l._ts)&&l.globalTime(0)<=r&&l.globalTime(l.totalDuration())>r:!r||l.isActive())&&a.push(l):(u=l.getTweensOf(o,r)).length&&a.push.apply(a,u),l=l._next;return a},t.tweenTo=function(i,r){r=r||{};var a=this,o=Mi(a,i),l=r,c=l.startAt,u=l.onStart,h=l.onStartParams,d=l.immediateRender,p,m=kn.to(a,Wi({ease:r.ease||"none",lazy:!1,immediateRender:!1,time:o,overwrite:"auto",duration:r.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale())||$t,onStart:function(){if(a.pause(),!p){var f=r.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale());m._dur!==f&&nu(m,f,0,1).render(m._time,!0,!0),p=1}u&&u.apply(m,h||[])}},r));return d?m.render(0):m},t.tweenFromTo=function(i,r,a){return this.tweenTo(r,Wi({startAt:{time:Mi(this,i)}},a))},t.recent=function(){return this._recent},t.nextLabel=function(i){return i===void 0&&(i=this._time),RM(this,Mi(this,i))},t.previousLabel=function(i){return i===void 0&&(i=this._time),RM(this,Mi(this,i),1)},t.currentLabel=function(i){return arguments.length?this.seek(i,!0):this.previousLabel(this._time+$t)},t.shiftChildren=function(i,r,a){a===void 0&&(a=0);for(var o=this._first,l=this.labels,c;o;)o._start>=a&&(o._start+=i,o._end+=i),o=o._next;if(r)for(c in l)l[c]>=a&&(l[c]+=i);return ol(this)},t.invalidate=function(i){var r=this._first;for(this._lock=0;r;)r.invalidate(i),r=r._next;return n.prototype.invalidate.call(this,i)},t.clear=function(i){i===void 0&&(i=!0);for(var r=this._first,a;r;)a=r._next,this.remove(r),r=a;return this._dp&&(this._time=this._tTime=this._pTime=0),i&&(this.labels={}),ol(this)},t.totalDuration=function(i){var r=0,a=this,o=a._last,l=Oi,c,u,h;if(arguments.length)return a.timeScale((a._repeat<0?a.duration():a.totalDuration())/(a.reversed()?-i:i));if(a._dirty){for(h=a.parent;o;)c=o._prev,o._dirty&&o.totalDuration(),u=o._start,u>l&&a._sort&&o._ts&&!a._lock?(a._lock=1,_r(a,o,u-o._delay,1)._lock=0):l=u,u<0&&o._ts&&(r-=u,(!h&&!a._dp||h&&h.smoothChildTiming)&&(a._start+=u/a._ts,a._time-=u,a._tTime-=u),a.shiftChildren(-u,!1,-1/0),l=0),o._end>r&&o._ts&&(r=o._end),o=c;nu(a,a===on&&a._time>r?a._time:r,1,1),a._dirty=0}return a._tDur},e.updateRoot=function(i){if(on._ts&&(oP(on,Ig(i,on)),rP=hi.frame),hi.frame>=MM){MM+=gi.autoSleep||120;var r=on._first;if((!r||!r._ts)&&gi.autoSleep&&hi._listeners.length<2){for(;r&&!r._ts;)r=r._next;r||hi.sleep()}}},e}(Dd);Wi(Bs.prototype,{_lock:0,_hasPause:0,_forcing:0});var Aye=function(e,t,s,i,r,a,o){var l=new Qs(this._pt,e,t,0,1,DP,null,r),c=0,u=0,h,d,p,m,g,f,y,b;for(l.b=s,l.e=i,s+="",i+="",(y=~i.indexOf("random("))&&(i=Ld(i)),a&&(b=[s,i],a(b,e,t),s=b[0],i=b[1]),d=s.match(Bx)||[];h=Bx.exec(i);)m=h[0],g=i.substring(c,h.index),p?p=(p+1)%5:g.substr(-5)==="rgba("&&(p=1),m!==d[u++]&&(f=parseFloat(d[u-1])||0,l._pt={_next:l._pt,p:g||u===1?g:",",s:f,c:m.charAt(1)==="="?kc(f,m)-f:parseFloat(m)-f,m:p&&p<4?Math.round:0},c=Bx.lastIndex);return l.c=c<i.length?i.substring(c,i.length):"",l.fp=o,(eP.test(i)||y)&&(l.e=0),this._pt=l,l},GT=function(e,t,s,i,r,a,o,l,c,u){fn(i)&&(i=i(r||0,e,a));var h=e[t],d=s!=="get"?s:fn(h)?c?e[t.indexOf("set")||!fn(e["get"+t.substr(3)])?t:"get"+t.substr(3)](c):e[t]():h,p=fn(h)?c?Oye:LP:WT,m;if(Qn(i)&&(~i.indexOf("random(")&&(i=Ld(i)),i.charAt(1)==="="&&(m=kc(d,i)+(ms(d)||0),(m||m===0)&&(i=m))),!u||d!==i||mv)return!isNaN(d*i)&&i!==""?(m=new Qs(this._pt,e,t,+d||0,i-(d||0),typeof h=="boolean"?Gye:PP,0,p),c&&(m.fp=c),o&&m.modifier(o,this,e),this._pt=m):(!h&&!(t in e)&&DT(t,i),Aye.call(this,e,t,d,i,p,l||gi.stringFilter,c))},Lye=function(e,t,s,i,r){if(fn(e)&&(e=ld(e,r,t,s,i)),!Vr(e)||e.style&&e.nodeType||ys(e)||J3(e))return Qn(e)?ld(e,r,t,s,i):e;var a={},o;for(o in e)a[o]=ld(e[o],r,t,s,i);return a},NP=function(e,t,s,i,r,a){var o,l,c,u;if(ci[e]&&(o=new ci[e]).init(r,o.rawVars?t[e]:Lye(t[e],i,r,a,s),s,i,a)!==!1&&(s._pt=l=new Qs(s._pt,r,e,0,1,o.render,o,0,o.priority),s!==Sc))for(c=s._ptLookup[s._targets.indexOf(r)],u=o._props.length;u--;)c[o._props[u]]=l;return o},Xa,mv,VT=function n(e,t,s){var i=e.vars,r=i.ease,a=i.startAt,o=i.immediateRender,l=i.lazy,c=i.onUpdate,u=i.onUpdateParams,h=i.callbackScope,d=i.runBackwards,p=i.yoyoEase,m=i.keyframes,g=i.autoRevert,f=e._dur,y=e._startAt,b=e._targets,x=e.parent,v=x&&x.data==="nested"?x.vars.targets:b,w=e._overwrite==="auto"&&!RT,_=e.timeline,T,C,S,M,A,P,D,N,L,G,V,U,H;if(_&&(!m||!r)&&(r="none"),e._ease=ll(r,eu.ease),e._yEase=p?CP(ll(p===!0?r:p,eu.ease)):0,p&&e._yoyo&&!e._repeat&&(p=e._yEase,e._yEase=e._ease,e._ease=p),e._from=!_&&!!i.runBackwards,!_||m&&!i.stagger){if(N=b[0]?al(b[0]).harness:0,U=N&&i[N.prop],T=Tg(i,FT),y&&(y._zTime<0&&y.progress(1),t<0&&d&&o&&!g?y.render(-1,!0):y.revert(d&&f?Rm:oye),y._lazy=0),a){if(fo(e._startAt=kn.set(b,Wi({data:"isStart",overwrite:!1,parent:x,immediateRender:!0,lazy:!y&&Ys(l),startAt:null,delay:0,onUpdate:c,onUpdateParams:u,callbackScope:h,stagger:0},a))),e._startAt._dp=0,e._startAt._sat=e,t<0&&(gs||!o&&!g)&&e._startAt.revert(Rm),o&&f&&t<=0&&s<=0){t&&(e._zTime=t);return}}else if(d&&f&&!y){if(t&&(o=!1),S=Wi({overwrite:!1,data:"isFromStart",lazy:o&&!y&&Ys(l),immediateRender:o,stagger:0,parent:x},T),U&&(S[N.prop]=U),fo(e._startAt=kn.set(b,S)),e._startAt._dp=0,e._startAt._sat=e,t<0&&(gs?e._startAt.revert(Rm):e._startAt.render(-1,!0)),e._zTime=t,!o)n(e._startAt,$t,$t);else if(!t)return}for(e._pt=e._ptCache=0,l=f&&Ys(l)||l&&!f,C=0;C<b.length;C++){if(A=b[C],D=A._gsap||zT(b)[C]._gsap,e._ptLookup[C]=G={},cv[D.id]&&no.length&&_g(),V=v===b?C:v.indexOf(A),N&&(L=new N).init(A,U||T,e,V,v)!==!1&&(e._pt=M=new Qs(e._pt,A,L.name,0,1,L.render,L,0,L.priority),L._props.forEach(function(j){G[j]=M}),L.priority&&(P=1)),!N||U)for(S in T)ci[S]&&(L=NP(S,T,e,V,A,v))?L.priority&&(P=1):G[S]=M=GT.call(e,A,S,"get",T[S],V,v,0,i.stringFilter);e._op&&e._op[C]&&e.kill(A,e._op[C]),w&&e._pt&&(Xa=e,on.killTweensOf(A,G,e.globalTime(t)),H=!e.parent,Xa=0),e._pt&&l&&(cv[D.id]=1)}P&&FP(e),e._onInit&&e._onInit(e)}e._onUpdate=c,e._initted=(!e._op||e._pt)&&!H,m&&t<=0&&_.render(Oi,!0,!0)},Pye=function(e,t,s,i,r,a,o){var l=(e._pt&&e._ptCache||(e._ptCache={}))[t],c,u,h,d;if(!l)for(l=e._ptCache[t]=[],h=e._ptLookup,d=e._targets.length;d--;){if(c=h[d][t],c&&c.d&&c.d._pt)for(c=c.d._pt;c&&c.p!==t&&c.fp!==t;)c=c._next;if(!c)return mv=1,e.vars[t]="+=0",VT(e,o),mv=0,1;l.push(c)}for(d=l.length;d--;)u=l[d],c=u._pt||u,c.s=(i||i===0)&&!r?i:c.s+(i||0)+a*c.c,c.c=s-c.s,u.e&&(u.e=wn(s)+ms(u.e)),u.b&&(u.b=c.s+ms(u.b))},Dye=function(e,t){var s=e[0]?al(e[0]).harness:0,i=s&&s.aliases,r,a,o,l;if(!i)return t;r=El({},t);for(a in i)if(a in r)for(l=i[a].split(","),o=l.length;o--;)r[l[o]]=r[a];return r},Fye=function(e,t,s,i){var r=t.ease||i||"power1.inOut",a,o;if(ys(t))o=s[e]||(s[e]=[]),t.forEach(function(l,c){return o.push({t:c/(t.length-1)*100,v:l,e:r})});else for(a in t)o=s[a]||(s[a]=[]),a==="ease"||o.push({t:parseFloat(e),v:t[a],e:r})},ld=function(e,t,s,i,r){return fn(e)?e.call(t,s,i,r):Qn(e)&&~e.indexOf("random(")?Ld(e):e},RP=OT+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",AP={};js(RP+",id,stagger,delay,duration,paused,scrollTrigger",function(n){return AP[n]=1});var kn=function(n){j3(e,n);function e(s,i,r,a){var o;typeof i=="number"&&(r.duration=i,i=r,r=null),o=n.call(this,a?i:ad(i))||this;var l=o.vars,c=l.duration,u=l.delay,h=l.immediateRender,d=l.stagger,p=l.overwrite,m=l.keyframes,g=l.defaults,f=l.scrollTrigger,y=l.yoyoEase,b=i.parent||on,x=(ys(s)||J3(s)?xa(s[0]):"length"in i)?[s]:zi(s),v,w,_,T,C,S,M,A;if(o._targets=x.length?zT(x):Sg("GSAP target "+s+" not found. https://greensock.com",!gi.nullTargetWarn)||[],o._ptLookup=[],o._overwrite=p,m||d||Im(c)||Im(u)){if(i=o.vars,v=o.timeline=new Bs({data:"nested",defaults:g||{},targets:b&&b.data==="nested"?b.vars.targets:x}),v.kill(),v.parent=v._dp=qr(o),v._start=0,d||Im(c)||Im(u)){if(T=x.length,M=d&&gP(d),Vr(d))for(C in d)~RP.indexOf(C)&&(A||(A={}),A[C]=d[C]);for(w=0;w<T;w++)_=Tg(i,AP),_.stagger=0,y&&(_.yoyoEase=y),A&&El(_,A),S=x[w],_.duration=+ld(c,qr(o),w,S,x),_.delay=(+ld(u,qr(o),w,S,x)||0)-o._delay,!d&&T===1&&_.delay&&(o._delay=u=_.delay,o._start+=u,_.delay=0),v.to(S,_,M?M(w,S,x):0),v._ease=Mt.none;v.duration()?c=u=0:o.timeline=0}else if(m){ad(Wi(v.vars.defaults,{ease:"none"})),v._ease=ll(m.ease||i.ease||"none");var P=0,D,N,L;if(ys(m))m.forEach(function(G){return v.to(x,G,">")}),v.duration();else{_={};for(C in m)C==="ease"||C==="easeEach"||Fye(C,m[C],_,m.easeEach);for(C in _)for(D=_[C].sort(function(G,V){return G.t-V.t}),P=0,w=0;w<D.length;w++)N=D[w],L={ease:N.e,duration:(N.t-(w?D[w-1].t:0))/100*c},L[C]=N.v,v.to(x,L,P),P+=L.duration;v.duration()<c&&v.to({},{duration:c-v.duration()})}}c||o.duration(c=v.duration())}else o.timeline=0;return p===!0&&!RT&&(Xa=qr(o),on.killTweensOf(x),Xa=0),_r(b,qr(o),r),i.reversed&&o.reverse(),i.paused&&o.paused(!0),(h||!c&&!m&&o._start===is(b._time)&&Ys(h)&&pye(qr(o))&&b.data!=="nested")&&(o._tTime=-$t,o.render(Math.max(0,-u)||0)),f&&dP(qr(o),f),o}var t=e.prototype;return t.render=function(i,r,a){var o=this._time,l=this._tDur,c=this._dur,u=i<0,h=i>l-$t&&!u?l:i<$t?0:i,d,p,m,g,f,y,b,x,v;if(!c)mye(this,i,r,a);else if(h!==this._tTime||!i||a||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==u){if(d=h,x=this.timeline,this._repeat){if(g=c+this._rDelay,this._repeat<-1&&u)return this.totalTime(g*100+i,r,a);if(d=is(h%g),h===l?(m=this._repeat,d=c):(m=~~(h/g),m&&m===h/g&&(d=c,m--),d>c&&(d=c)),y=this._yoyo&&m&1,y&&(v=this._yEase,d=c-d),f=tu(this._tTime,g),d===o&&!a&&this._initted)return this._tTime=h,this;m!==f&&(x&&this._yEase&&MP(x,y),this.vars.repeatRefresh&&!y&&!this._lock&&(this._lock=a=1,this.render(is(g*m),!0).invalidate()._lock=0))}if(!this._initted){if(pP(this,u?i:d,a,r,h))return this._tTime=0,this;if(o!==this._time)return this;if(c!==this._dur)return this.render(i,r,a)}if(this._tTime=h,this._time=d,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=b=(v||this._ease)(d/c),this._from&&(this.ratio=b=1-b),d&&!o&&!r&&!m&&(Gi(this,"onStart"),this._tTime!==h))return this;for(p=this._pt;p;)p.r(b,p.d),p=p._next;x&&x.render(i<0?i:!d&&y?-$t:x._dur*x._ease(d/this._dur),r,a)||this._startAt&&(this._zTime=i),this._onUpdate&&!r&&(u&&uv(this,i,r,a),Gi(this,"onUpdate")),this._repeat&&m!==f&&this.vars.onRepeat&&!r&&this.parent&&Gi(this,"onRepeat"),(h===this._tDur||!h)&&this._tTime===h&&(u&&!this._onUpdate&&uv(this,i,!0,!0),(i||!c)&&(h===this._tDur&&this._ts>0||!h&&this._ts<0)&&fo(this,1),!r&&!(u&&!o)&&(h||o||y)&&(Gi(this,h===l?"onComplete":"onReverseComplete",!0),this._prom&&!(h<l&&this.timeScale()>0)&&this._prom()))}return this},t.targets=function(){return this._targets},t.invalidate=function(i){return(!i||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(i),n.prototype.invalidate.call(this,i)},t.resetTo=function(i,r,a,o){Pd||hi.wake(),this._ts||this.play();var l=Math.min(this._dur,(this._dp._time-this._start)*this._ts),c;return this._initted||VT(this,l),c=this._ease(l/this._dur),Pye(this,i,r,a,o,c,l)?this.resetTo(i,r,a,o):(lb(this,0),this.parent||uP(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},t.kill=function(i,r){if(r===void 0&&(r="all"),!i&&(!r||r==="all"))return this._lazy=this._pt=0,this.parent?nd(this):this;if(this.timeline){var a=this.timeline.totalDuration();return this.timeline.killTweensOf(i,r,Xa&&Xa.vars.overwrite!==!0)._first||nd(this),this.parent&&a!==this.timeline.totalDuration()&&nu(this,this._dur*this.timeline._tDur/a,0,1),this}var o=this._targets,l=i?zi(i):o,c=this._ptLookup,u=this._pt,h,d,p,m,g,f,y;if((!r||r==="all")&&hye(o,l))return r==="all"&&(this._pt=0),nd(this);for(h=this._op=this._op||[],r!=="all"&&(Qn(r)&&(g={},js(r,function(b){return g[b]=1}),r=g),r=Dye(o,r)),y=o.length;y--;)if(~l.indexOf(o[y])){d=c[y],r==="all"?(h[y]=r,m=d,p={}):(p=h[y]=h[y]||{},m=r);for(g in m)f=d&&d[g],f&&((!("kill"in f.d)||f.d.kill(g)===!0)&&ab(this,f,"_pt"),delete d[g]),p!=="all"&&(p[g]=1)}return this._initted&&!this._pt&&u&&nd(this),this},e.to=function(i,r){return new e(i,r,arguments[2])},e.from=function(i,r){return od(1,arguments)},e.delayedCall=function(i,r,a,o){return new e(r,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:i,onComplete:r,onReverseComplete:r,onCompleteParams:a,onReverseCompleteParams:a,callbackScope:o})},e.fromTo=function(i,r,a){return od(2,arguments)},e.set=function(i,r){return r.duration=0,r.repeatDelay||(r.repeat=0),new e(i,r)},e.killTweensOf=function(i,r,a){return on.killTweensOf(i,r,a)},e}(Dd);Wi(kn.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});js("staggerTo,staggerFrom,staggerFromTo",function(n){kn[n]=function(){var e=new Bs,t=dv.call(arguments,0);return t.splice(n==="staggerFromTo"?5:4,0,0),e[n].apply(e,t)}});var WT=function(e,t,s){return e[t]=s},LP=function(e,t,s){return e[t](s)},Oye=function(e,t,s,i){return e[t](i.fp,s)},zye=function(e,t,s){return e.setAttribute(t,s)},$T=function(e,t){return fn(e[t])?LP:AT(e[t])&&e.setAttribute?zye:WT},PP=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e6)/1e6,t)},Gye=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},DP=function(e,t){var s=t._pt,i="";if(!e&&t.b)i=t.b;else if(e===1&&t.e)i=t.e;else{for(;s;)i=s.p+(s.m?s.m(s.s+s.c*e):Math.round((s.s+s.c*e)*1e4)/1e4)+i,s=s._next;i+=t.c}t.set(t.t,t.p,i,t)},UT=function(e,t){for(var s=t._pt;s;)s.r(e,s.d),s=s._next},Vye=function(e,t,s,i){for(var r=this._pt,a;r;)a=r._next,r.p===i&&r.modifier(e,t,s),r=a},Wye=function(e){for(var t=this._pt,s,i;t;)i=t._next,t.p===e&&!t.op||t.op===e?ab(this,t,"_pt"):t.dep||(s=1),t=i;return!s},$ye=function(e,t,s,i){i.mSet(e,t,i.m.call(i.tween,s,i.mt),i)},FP=function(e){for(var t=e._pt,s,i,r,a;t;){for(s=t._next,i=r;i&&i.pr>t.pr;)i=i._next;(t._prev=i?i._prev:a)?t._prev._next=t:r=t,(t._next=i)?i._prev=t:a=t,t=s}e._pt=r},Qs=function(){function n(t,s,i,r,a,o,l,c,u){this.t=s,this.s=r,this.c=a,this.p=i,this.r=o||PP,this.d=l||this,this.set=c||WT,this.pr=u||0,this._next=t,t&&(t._prev=this)}var e=n.prototype;return e.modifier=function(s,i,r){this.mSet=this.mSet||this.set,this.set=$ye,this.m=s,this.mt=r,this.tween=i},n}();js(OT+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(n){return FT[n]=1});vi.TweenMax=vi.TweenLite=kn;vi.TimelineLite=vi.TimelineMax=Bs;on=new Bs({sortChildren:!1,defaults:eu,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});gi.stringFilter=IP;var cl=[],Lm={},Uye=[],LM=0,Bye=0,Yx=function(e){return(Lm[e]||Uye).map(function(t){return t()})},gv=function(){var e=Date.now(),t=[];e-LM>2&&(Yx("matchMediaInit"),cl.forEach(function(s){var i=s.queries,r=s.conditions,a,o,l,c;for(o in i)a=Ei.matchMedia(i[o]).matches,a&&(l=1),a!==r[o]&&(r[o]=a,c=1);c&&(s.revert(),l&&t.push(s))}),Yx("matchMediaRevert"),t.forEach(function(s){return s.onMatch(s)}),LM=e,Yx("matchMedia"))},OP=function(){function n(t,s){this.selector=s&&pv(s),this.data=[],this._r=[],this.isReverted=!1,this.id=Bye++,t&&this.add(t)}var e=n.prototype;return e.add=function(s,i,r){fn(s)&&(r=i,i=s,s=fn);var a=this,o=function(){var c=dn,u=a.selector,h;return c&&c!==a&&c.data.push(a),r&&(a.selector=pv(r)),dn=a,h=i.apply(a,arguments),fn(h)&&a._r.push(h),dn=c,a.selector=u,a.isReverted=!1,h};return a.last=o,s===fn?o(a):s?a[s]=o:o},e.ignore=function(s){var i=dn;dn=null,s(this),dn=i},e.getTweens=function(){var s=[];return this.data.forEach(function(i){return i instanceof n?s.push.apply(s,i.getTweens()):i instanceof kn&&!(i.parent&&i.parent.data==="nested")&&s.push(i)}),s},e.clear=function(){this._r.length=this.data.length=0},e.kill=function(s,i){var r=this;if(s){var a=this.getTweens();this.data.forEach(function(l){l.data==="isFlip"&&(l.revert(),l.getChildren(!0,!0,!1).forEach(function(c){return a.splice(a.indexOf(c),1)}))}),a.map(function(l){return{g:l.globalTime(0),t:l}}).sort(function(l,c){return c.g-l.g||-1/0}).forEach(function(l){return l.t.revert(s)}),this.data.forEach(function(l){return!(l instanceof kn)&&l.revert&&l.revert(s)}),this._r.forEach(function(l){return l(s,r)}),this.isReverted=!0}else this.data.forEach(function(l){return l.kill&&l.kill()});if(this.clear(),i)for(var o=cl.length;o--;)cl[o].id===this.id&&cl.splice(o,1)},e.revert=function(s){this.kill(s||{})},n}(),Xye=function(){function n(t){this.contexts=[],this.scope=t}var e=n.prototype;return e.add=function(s,i,r){Vr(s)||(s={matches:s});var a=new OP(0,r||this.scope),o=a.conditions={},l,c,u;dn&&!a.selector&&(a.selector=dn.selector),this.contexts.push(a),i=a.add("onMatch",i),a.queries=s;for(c in s)c==="all"?u=1:(l=Ei.matchMedia(s[c]),l&&(cl.indexOf(a)<0&&cl.push(a),(o[c]=l.matches)&&(u=1),l.addListener?l.addListener(gv):l.addEventListener("change",gv)));return u&&i(a),this},e.revert=function(s){this.kill(s||{})},e.kill=function(s){this.contexts.forEach(function(i){return i.kill(s,!0)})},n}(),Cg={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];t.forEach(function(i){return SP(i)})},timeline:function(e){return new Bs(e)},getTweensOf:function(e,t){return on.getTweensOf(e,t)},getProperty:function(e,t,s,i){Qn(e)&&(e=zi(e)[0]);var r=al(e||{}).get,a=s?cP:lP;return s==="native"&&(s=""),e&&(t?a((ci[t]&&ci[t].get||r)(e,t,s,i)):function(o,l,c){return a((ci[o]&&ci[o].get||r)(e,o,l,c))})},quickSetter:function(e,t,s){if(e=zi(e),e.length>1){var i=e.map(function(u){return si.quickSetter(u,t,s)}),r=i.length;return function(u){for(var h=r;h--;)i[h](u)}}e=e[0]||{};var a=ci[t],o=al(e),l=o.harness&&(o.harness.aliases||{})[t]||t,c=a?function(u){var h=new a;Sc._pt=0,h.init(e,s?u+s:u,Sc,0,[e]),h.render(1,h),Sc._pt&&UT(1,Sc)}:o.set(e,l);return a?c:function(u){return c(e,l,s?u+s:u,o,1)}},quickTo:function(e,t,s){var i,r=si.to(e,El((i={},i[t]="+=0.1",i.paused=!0,i),s||{})),a=function(l,c,u){return r.resetTo(t,l,c,u)};return a.tween=r,a},isTweening:function(e){return on.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=ll(e.ease,eu.ease)),EM(eu,e||{})},config:function(e){return EM(gi,e||{})},registerEffect:function(e){var t=e.name,s=e.effect,i=e.plugins,r=e.defaults,a=e.extendTimeline;(i||"").split(",").forEach(function(o){return o&&!ci[o]&&!vi[o]&&Sg(t+" effect requires "+o+" plugin.")}),Xx[t]=function(o,l,c){return s(zi(o),Wi(l||{},r),c)},a&&(Bs.prototype[t]=function(o,l,c){return this.add(Xx[t](o,Vr(l)?l:(c=l)&&{},this),c)})},registerEase:function(e,t){Mt[e]=ll(t)},parseEase:function(e,t){return arguments.length?ll(e,t):Mt},getById:function(e){return on.getById(e)},exportRoot:function(e,t){e===void 0&&(e={});var s=new Bs(e),i,r;for(s.smoothChildTiming=Ys(e.smoothChildTiming),on.remove(s),s._dp=0,s._time=s._tTime=on._time,i=on._first;i;)r=i._next,(t||!(!i._dur&&i instanceof kn&&i.vars.onComplete===i._targets[0]))&&_r(s,i,i._start-i._delay),i=r;return _r(on,s,0),s},context:function(e,t){return e?new OP(e,t):dn},matchMedia:function(e){return new Xye(e)},matchMediaRefresh:function(){return cl.forEach(function(e){var t=e.conditions,s,i;for(i in t)t[i]&&(t[i]=!1,s=1);s&&e.revert()})||gv()},addEventListener:function(e,t){var s=Lm[e]||(Lm[e]=[]);~s.indexOf(t)||s.push(t)},removeEventListener:function(e,t){var s=Lm[e],i=s&&s.indexOf(t);i>=0&&s.splice(i,1)},utils:{wrap:_ye,wrapYoyo:Tye,distribute:gP,random:bP,snap:yP,normalize:Sye,getUnit:ms,clamp:bye,splitColor:_P,toArray:zi,selector:pv,mapRange:vP,pipe:vye,unitize:wye,interpolate:Iye,shuffle:mP},install:sP,effects:Xx,ticker:hi,updateRoot:Bs.updateRoot,plugins:ci,globalTimeline:on,core:{PropTween:Qs,globals:iP,Tween:kn,Timeline:Bs,Animation:Dd,getCache:al,_removeLinkedListItem:ab,reverting:function(){return gs},context:function(e){return e&&dn&&(dn.data.push(e),e._ctx=dn),dn},suppressOverwrites:function(e){return RT=e}}};js("to,from,fromTo,delayedCall,set,killTweensOf",function(n){return Cg[n]=kn[n]});hi.add(Bs.updateRoot);Sc=Cg.to({},{duration:0});var Hye=function(e,t){for(var s=e._pt;s&&s.p!==t&&s.op!==t&&s.fp!==t;)s=s._next;return s},Zye=function(e,t){var s=e._targets,i,r,a;for(i in t)for(r=s.length;r--;)a=e._ptLookup[r][i],a&&(a=a.d)&&(a._pt&&(a=Hye(a,i)),a&&a.modifier&&a.modifier(t[i],e,s[r],i))},jx=function(e,t){return{name:e,rawVars:1,init:function(i,r,a){a._onInit=function(o){var l,c;if(Qn(r)&&(l={},js(r,function(u){return l[u]=1}),r=l),t){l={};for(c in r)l[c]=t(r[c]);r=l}Zye(o,r)}}}},si=Cg.registerPlugin({name:"attr",init:function(e,t,s,i,r){var a,o,l;this.tween=s;for(a in t)l=e.getAttribute(a)||"",o=this.add(e,"setAttribute",(l||0)+"",t[a],i,r,0,0,a),o.op=a,o.b=l,this._props.push(a)},render:function(e,t){for(var s=t._pt;s;)gs?s.set(s.t,s.p,s.b,s):s.r(e,s.d),s=s._next}},{name:"endArray",init:function(e,t){for(var s=t.length;s--;)this.add(e,s,e[s]||0,t[s],0,0,0,0,0,1)}},jx("roundProps",fv),jx("modifiers"),jx("snap",yP))||Cg;kn.version=Bs.version=si.version="3.12.2";nP=1;LT()&&su();Mt.Power0;Mt.Power1;Mt.Power2;Mt.Power3;Mt.Power4;Mt.Linear;Mt.Quad;Mt.Cubic;Mt.Quart;Mt.Quint;Mt.Strong;Mt.Elastic;Mt.Back;Mt.SteppedEase;Mt.Bounce;Mt.Sine;Mt.Expo;Mt.Circ;/*!
 * CSSPlugin 3.12.2
 * https://greensock.com
 *
 * Copyright 2008-2023, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var PM,Ha,Nc,BT,Qo,DM,XT,Kye=function(){return typeof window<"u"},va={},$o=180/Math.PI,Rc=Math.PI/180,pc=Math.atan2,FM=1e8,HT=/([A-Z])/g,Yye=/(left|right|width|margin|padding|x)/i,jye=/[\s,\(]\S/,Er={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},yv=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},Qye=function(e,t){return t.set(t.t,t.p,e===1?t.e:Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},Jye=function(e,t){return t.set(t.t,t.p,e?Math.round((t.s+t.c*e)*1e4)/1e4+t.u:t.b,t)},qye=function(e,t){var s=t.s+t.c*e;t.set(t.t,t.p,~~(s+(s<0?-.5:.5))+t.u,t)},zP=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},GP=function(e,t){return t.set(t.t,t.p,e!==1?t.b:t.e,t)},ebe=function(e,t,s){return e.style[t]=s},tbe=function(e,t,s){return e.style.setProperty(t,s)},nbe=function(e,t,s){return e._gsap[t]=s},sbe=function(e,t,s){return e._gsap.scaleX=e._gsap.scaleY=s},ibe=function(e,t,s,i,r){var a=e._gsap;a.scaleX=a.scaleY=s,a.renderTransform(r,a)},rbe=function(e,t,s,i,r){var a=e._gsap;a[t]=s,a.renderTransform(r,a)},ln="transform",rr=ln+"Origin",abe=function n(e,t){var s=this,i=this.target,r=i.style;if(e in va&&r){if(this.tfm=this.tfm||{},e!=="transform")e=Er[e]||e,~e.indexOf(",")?e.split(",").forEach(function(a){return s.tfm[a]=sa(i,a)}):this.tfm[e]=i._gsap.x?i._gsap[e]:sa(i,e);else return Er.transform.split(",").forEach(function(a){return n.call(s,a,t)});if(this.props.indexOf(ln)>=0)return;i._gsap.svg&&(this.svgo=i.getAttribute("data-svg-origin"),this.props.push(rr,t,"")),e=ln}(r||t)&&this.props.push(e,t,r[e])},VP=function(e){e.translate&&(e.removeProperty("translate"),e.removeProperty("scale"),e.removeProperty("rotate"))},obe=function(){var e=this.props,t=this.target,s=t.style,i=t._gsap,r,a;for(r=0;r<e.length;r+=3)e[r+1]?t[e[r]]=e[r+2]:e[r+2]?s[e[r]]=e[r+2]:s.removeProperty(e[r].substr(0,2)==="--"?e[r]:e[r].replace(HT,"-$1").toLowerCase());if(this.tfm){for(a in this.tfm)i[a]=this.tfm[a];i.svg&&(i.renderTransform(),t.setAttribute("data-svg-origin",this.svgo||"")),r=XT(),(!r||!r.isStart)&&!s[ln]&&(VP(s),i.uncache=1)}},WP=function(e,t){var s={target:e,props:[],revert:obe,save:abe};return e._gsap||si.core.getCache(e),t&&t.split(",").forEach(function(i){return s.save(i)}),s},$P,bv=function(e,t){var s=Ha.createElementNS?Ha.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):Ha.createElement(e);return s.style?s:Ha.createElement(e)},Pr=function n(e,t,s){var i=getComputedStyle(e);return i[t]||i.getPropertyValue(t.replace(HT,"-$1").toLowerCase())||i.getPropertyValue(t)||!s&&n(e,iu(t)||t,1)||""},OM="O,Moz,ms,Ms,Webkit".split(","),iu=function(e,t,s){var i=t||Qo,r=i.style,a=5;if(e in r&&!s)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);a--&&!(OM[a]+e in r););return a<0?null:(a===3?"ms":a>=0?OM[a]:"")+e},xv=function(){Kye()&&window.document&&(PM=window,Ha=PM.document,Nc=Ha.documentElement,Qo=bv("div")||{style:{}},bv("div"),ln=iu(ln),rr=ln+"Origin",Qo.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",$P=!!iu("perspective"),XT=si.core.reverting,BT=1)},Qx=function n(e){var t=bv("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),s=this.parentNode,i=this.nextSibling,r=this.style.cssText,a;if(Nc.appendChild(t),t.appendChild(this),this.style.display="block",e)try{a=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=n}catch{}else this._gsapBBox&&(a=this._gsapBBox());return s&&(i?s.insertBefore(this,i):s.appendChild(this)),Nc.removeChild(t),this.style.cssText=r,a},zM=function(e,t){for(var s=t.length;s--;)if(e.hasAttribute(t[s]))return e.getAttribute(t[s])},UP=function(e){var t;try{t=e.getBBox()}catch{t=Qx.call(e,!0)}return t&&(t.width||t.height)||e.getBBox===Qx||(t=Qx.call(e,!0)),t&&!t.width&&!t.x&&!t.y?{x:+zM(e,["x","cx","x1"])||0,y:+zM(e,["y","cy","y1"])||0,width:0,height:0}:t},BP=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&UP(e))},Fd=function(e,t){if(t){var s=e.style;t in va&&t!==rr&&(t=ln),s.removeProperty?((t.substr(0,2)==="ms"||t.substr(0,6)==="webkit")&&(t="-"+t),s.removeProperty(t.replace(HT,"-$1").toLowerCase())):s.removeAttribute(t)}},Za=function(e,t,s,i,r,a){var o=new Qs(e._pt,t,s,0,1,a?GP:zP);return e._pt=o,o.b=i,o.e=r,e._props.push(s),o},GM={deg:1,rad:1,turn:1},lbe={grid:1,flex:1},mo=function n(e,t,s,i){var r=parseFloat(s)||0,a=(s+"").trim().substr((r+"").length)||"px",o=Qo.style,l=Yye.test(t),c=e.tagName.toLowerCase()==="svg",u=(c?"client":"offset")+(l?"Width":"Height"),h=100,d=i==="px",p=i==="%",m,g,f,y;return i===a||!r||GM[i]||GM[a]?r:(a!=="px"&&!d&&(r=n(e,t,s,"px")),y=e.getCTM&&BP(e),(p||a==="%")&&(va[t]||~t.indexOf("adius"))?(m=y?e.getBBox()[l?"width":"height"]:e[u],wn(p?r/m*h:r/100*m)):(o[l?"width":"height"]=h+(d?a:i),g=~t.indexOf("adius")||i==="em"&&e.appendChild&&!c?e:e.parentNode,y&&(g=(e.ownerSVGElement||{}).parentNode),(!g||g===Ha||!g.appendChild)&&(g=Ha.body),f=g._gsap,f&&p&&f.width&&l&&f.time===hi.time&&!f.uncache?wn(r/f.width*h):((p||a==="%")&&!lbe[Pr(g,"display")]&&(o.position=Pr(e,"position")),g===e&&(o.position="static"),g.appendChild(Qo),m=Qo[u],g.removeChild(Qo),o.position="absolute",l&&p&&(f=al(g),f.time=hi.time,f.width=g[u]),wn(d?m*r/h:m&&r?h/m*r:0))))},sa=function(e,t,s,i){var r;return BT||xv(),t in Er&&t!=="transform"&&(t=Er[t],~t.indexOf(",")&&(t=t.split(",")[0])),va[t]&&t!=="transform"?(r=zd(e,i),r=t!=="transformOrigin"?r[t]:r.svg?r.origin:Eg(Pr(e,rr))+" "+r.zOrigin+"px"):(r=e.style[t],(!r||r==="auto"||i||~(r+"").indexOf("calc("))&&(r=Mg[t]&&Mg[t](e,t,s)||Pr(e,t)||aP(e,t)||(t==="opacity"?1:0))),s&&!~(r+"").trim().indexOf(" ")?mo(e,t,r,s)+s:r},cbe=function(e,t,s,i){if(!s||s==="none"){var r=iu(t,e,1),a=r&&Pr(e,r,1);a&&a!==s?(t=r,s=a):t==="borderColor"&&(s=Pr(e,"borderTopColor"))}var o=new Qs(this._pt,e.style,t,0,1,DP),l=0,c=0,u,h,d,p,m,g,f,y,b,x,v,w;if(o.b=s,o.e=i,s+="",i+="",i==="auto"&&(e.style[t]=i,i=Pr(e,t)||i,e.style[t]=s),u=[s,i],IP(u),s=u[0],i=u[1],d=s.match(wc)||[],w=i.match(wc)||[],w.length){for(;h=wc.exec(i);)f=h[0],b=i.substring(l,h.index),m?m=(m+1)%5:(b.substr(-5)==="rgba("||b.substr(-5)==="hsla(")&&(m=1),f!==(g=d[c++]||"")&&(p=parseFloat(g)||0,v=g.substr((p+"").length),f.charAt(1)==="="&&(f=kc(p,f)+v),y=parseFloat(f),x=f.substr((y+"").length),l=wc.lastIndex-x.length,x||(x=x||gi.units[t]||v,l===i.length&&(i+=x,o.e+=x)),v!==x&&(p=mo(e,t,g,x)||0),o._pt={_next:o._pt,p:b||c===1?b:",",s:p,c:y-p,m:m&&m<4||t==="zIndex"?Math.round:0});o.c=l<i.length?i.substring(l,i.length):""}else o.r=t==="display"&&i==="none"?GP:zP;return eP.test(i)&&(o.e=0),this._pt=o,o},VM={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},ube=function(e){var t=e.split(" "),s=t[0],i=t[1]||"50%";return(s==="top"||s==="bottom"||i==="left"||i==="right")&&(e=s,s=i,i=e),t[0]=VM[s]||s,t[1]=VM[i]||i,t.join(" ")},hbe=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var s=t.t,i=s.style,r=t.u,a=s._gsap,o,l,c;if(r==="all"||r===!0)i.cssText="",l=1;else for(r=r.split(","),c=r.length;--c>-1;)o=r[c],va[o]&&(l=1,o=o==="transformOrigin"?rr:ln),Fd(s,o);l&&(Fd(s,ln),a&&(a.svg&&s.removeAttribute("transform"),zd(s,1),a.uncache=1,VP(i)))}},Mg={clearProps:function(e,t,s,i,r){if(r.data!=="isFromStart"){var a=e._pt=new Qs(e._pt,t,s,0,0,hbe);return a.u=i,a.pr=-10,a.tween=r,e._props.push(s),1}}},Od=[1,0,0,1,0,0],XP={},HP=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},WM=function(e){var t=Pr(e,ln);return HP(t)?Od:t.substr(7).match(q3).map(wn)},ZT=function(e,t){var s=e._gsap||al(e),i=e.style,r=WM(e),a,o,l,c;return s.svg&&e.getAttribute("transform")?(l=e.transform.baseVal.consolidate().matrix,r=[l.a,l.b,l.c,l.d,l.e,l.f],r.join(",")==="1,0,0,1,0,0"?Od:r):(r===Od&&!e.offsetParent&&e!==Nc&&!s.svg&&(l=i.display,i.display="block",a=e.parentNode,(!a||!e.offsetParent)&&(c=1,o=e.nextElementSibling,Nc.appendChild(e)),r=WM(e),l?i.display=l:Fd(e,"display"),c&&(o?a.insertBefore(e,o):a?a.appendChild(e):Nc.removeChild(e))),t&&r.length>6?[r[0],r[1],r[4],r[5],r[12],r[13]]:r)},vv=function(e,t,s,i,r,a){var o=e._gsap,l=r||ZT(e,!0),c=o.xOrigin||0,u=o.yOrigin||0,h=o.xOffset||0,d=o.yOffset||0,p=l[0],m=l[1],g=l[2],f=l[3],y=l[4],b=l[5],x=t.split(" "),v=parseFloat(x[0])||0,w=parseFloat(x[1])||0,_,T,C,S;s?l!==Od&&(T=p*f-m*g)&&(C=v*(f/T)+w*(-g/T)+(g*b-f*y)/T,S=v*(-m/T)+w*(p/T)-(p*b-m*y)/T,v=C,w=S):(_=UP(e),v=_.x+(~x[0].indexOf("%")?v/100*_.width:v),w=_.y+(~(x[1]||x[0]).indexOf("%")?w/100*_.height:w)),i||i!==!1&&o.smooth?(y=v-c,b=w-u,o.xOffset=h+(y*p+b*g)-y,o.yOffset=d+(y*m+b*f)-b):o.xOffset=o.yOffset=0,o.xOrigin=v,o.yOrigin=w,o.smooth=!!i,o.origin=t,o.originIsAbsolute=!!s,e.style[rr]="0px 0px",a&&(Za(a,o,"xOrigin",c,v),Za(a,o,"yOrigin",u,w),Za(a,o,"xOffset",h,o.xOffset),Za(a,o,"yOffset",d,o.yOffset)),e.setAttribute("data-svg-origin",v+" "+w)},zd=function(e,t){var s=e._gsap||new kP(e);if("x"in s&&!t&&!s.uncache)return s;var i=e.style,r=s.scaleX<0,a="px",o="deg",l=getComputedStyle(e),c=Pr(e,rr)||"0",u,h,d,p,m,g,f,y,b,x,v,w,_,T,C,S,M,A,P,D,N,L,G,V,U,H,j,O,X,ee,te,se;return u=h=d=g=f=y=b=x=v=0,p=m=1,s.svg=!!(e.getCTM&&BP(e)),l.translate&&((l.translate!=="none"||l.scale!=="none"||l.rotate!=="none")&&(i[ln]=(l.translate!=="none"?"translate3d("+(l.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(l.rotate!=="none"?"rotate("+l.rotate+") ":"")+(l.scale!=="none"?"scale("+l.scale.split(" ").join(",")+") ":"")+(l[ln]!=="none"?l[ln]:"")),i.scale=i.rotate=i.translate="none"),T=ZT(e,s.svg),s.svg&&(s.uncache?(U=e.getBBox(),c=s.xOrigin-U.x+"px "+(s.yOrigin-U.y)+"px",V=""):V=!t&&e.getAttribute("data-svg-origin"),vv(e,V||c,!!V||s.originIsAbsolute,s.smooth!==!1,T)),w=s.xOrigin||0,_=s.yOrigin||0,T!==Od&&(A=T[0],P=T[1],D=T[2],N=T[3],u=L=T[4],h=G=T[5],T.length===6?(p=Math.sqrt(A*A+P*P),m=Math.sqrt(N*N+D*D),g=A||P?pc(P,A)*$o:0,b=D||N?pc(D,N)*$o+g:0,b&&(m*=Math.abs(Math.cos(b*Rc))),s.svg&&(u-=w-(w*A+_*D),h-=_-(w*P+_*N))):(se=T[6],ee=T[7],j=T[8],O=T[9],X=T[10],te=T[11],u=T[12],h=T[13],d=T[14],C=pc(se,X),f=C*$o,C&&(S=Math.cos(-C),M=Math.sin(-C),V=L*S+j*M,U=G*S+O*M,H=se*S+X*M,j=L*-M+j*S,O=G*-M+O*S,X=se*-M+X*S,te=ee*-M+te*S,L=V,G=U,se=H),C=pc(-D,X),y=C*$o,C&&(S=Math.cos(-C),M=Math.sin(-C),V=A*S-j*M,U=P*S-O*M,H=D*S-X*M,te=N*M+te*S,A=V,P=U,D=H),C=pc(P,A),g=C*$o,C&&(S=Math.cos(C),M=Math.sin(C),V=A*S+P*M,U=L*S+G*M,P=P*S-A*M,G=G*S-L*M,A=V,L=U),f&&Math.abs(f)+Math.abs(g)>359.9&&(f=g=0,y=180-y),p=wn(Math.sqrt(A*A+P*P+D*D)),m=wn(Math.sqrt(G*G+se*se)),C=pc(L,G),b=Math.abs(C)>2e-4?C*$o:0,v=te?1/(te<0?-te:te):0),s.svg&&(V=e.getAttribute("transform"),s.forceCSS=e.setAttribute("transform","")||!HP(Pr(e,ln)),V&&e.setAttribute("transform",V))),Math.abs(b)>90&&Math.abs(b)<270&&(r?(p*=-1,b+=g<=0?180:-180,g+=g<=0?180:-180):(m*=-1,b+=b<=0?180:-180)),t=t||s.uncache,s.x=u-((s.xPercent=u&&(!t&&s.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-u)?-50:0)))?e.offsetWidth*s.xPercent/100:0)+a,s.y=h-((s.yPercent=h&&(!t&&s.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-h)?-50:0)))?e.offsetHeight*s.yPercent/100:0)+a,s.z=d+a,s.scaleX=wn(p),s.scaleY=wn(m),s.rotation=wn(g)+o,s.rotationX=wn(f)+o,s.rotationY=wn(y)+o,s.skewX=b+o,s.skewY=x+o,s.transformPerspective=v+a,(s.zOrigin=parseFloat(c.split(" ")[2])||0)&&(i[rr]=Eg(c)),s.xOffset=s.yOffset=0,s.force3D=gi.force3D,s.renderTransform=s.svg?pbe:$P?ZP:dbe,s.uncache=0,s},Eg=function(e){return(e=e.split(" "))[0]+" "+e[1]},Jx=function(e,t,s){var i=ms(t);return wn(parseFloat(t)+parseFloat(mo(e,"x",s+"px",i)))+i},dbe=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,ZP(e,t)},Fo="0deg",Kh="0px",Oo=") ",ZP=function(e,t){var s=t||this,i=s.xPercent,r=s.yPercent,a=s.x,o=s.y,l=s.z,c=s.rotation,u=s.rotationY,h=s.rotationX,d=s.skewX,p=s.skewY,m=s.scaleX,g=s.scaleY,f=s.transformPerspective,y=s.force3D,b=s.target,x=s.zOrigin,v="",w=y==="auto"&&e&&e!==1||y===!0;if(x&&(h!==Fo||u!==Fo)){var _=parseFloat(u)*Rc,T=Math.sin(_),C=Math.cos(_),S;_=parseFloat(h)*Rc,S=Math.cos(_),a=Jx(b,a,T*S*-x),o=Jx(b,o,-Math.sin(_)*-x),l=Jx(b,l,C*S*-x+x)}f!==Kh&&(v+="perspective("+f+Oo),(i||r)&&(v+="translate("+i+"%, "+r+"%) "),(w||a!==Kh||o!==Kh||l!==Kh)&&(v+=l!==Kh||w?"translate3d("+a+", "+o+", "+l+") ":"translate("+a+", "+o+Oo),c!==Fo&&(v+="rotate("+c+Oo),u!==Fo&&(v+="rotateY("+u+Oo),h!==Fo&&(v+="rotateX("+h+Oo),(d!==Fo||p!==Fo)&&(v+="skew("+d+", "+p+Oo),(m!==1||g!==1)&&(v+="scale("+m+", "+g+Oo),b.style[ln]=v||"translate(0, 0)"},pbe=function(e,t){var s=t||this,i=s.xPercent,r=s.yPercent,a=s.x,o=s.y,l=s.rotation,c=s.skewX,u=s.skewY,h=s.scaleX,d=s.scaleY,p=s.target,m=s.xOrigin,g=s.yOrigin,f=s.xOffset,y=s.yOffset,b=s.forceCSS,x=parseFloat(a),v=parseFloat(o),w,_,T,C,S;l=parseFloat(l),c=parseFloat(c),u=parseFloat(u),u&&(u=parseFloat(u),c+=u,l+=u),l||c?(l*=Rc,c*=Rc,w=Math.cos(l)*h,_=Math.sin(l)*h,T=Math.sin(l-c)*-d,C=Math.cos(l-c)*d,c&&(u*=Rc,S=Math.tan(c-u),S=Math.sqrt(1+S*S),T*=S,C*=S,u&&(S=Math.tan(u),S=Math.sqrt(1+S*S),w*=S,_*=S)),w=wn(w),_=wn(_),T=wn(T),C=wn(C)):(w=h,C=d,_=T=0),(x&&!~(a+"").indexOf("px")||v&&!~(o+"").indexOf("px"))&&(x=mo(p,"x",a,"px"),v=mo(p,"y",o,"px")),(m||g||f||y)&&(x=wn(x+m-(m*w+g*T)+f),v=wn(v+g-(m*_+g*C)+y)),(i||r)&&(S=p.getBBox(),x=wn(x+i/100*S.width),v=wn(v+r/100*S.height)),S="matrix("+w+","+_+","+T+","+C+","+x+","+v+")",p.setAttribute("transform",S),b&&(p.style[ln]=S)},fbe=function(e,t,s,i,r){var a=360,o=Qn(r),l=parseFloat(r)*(o&&~r.indexOf("rad")?$o:1),c=l-i,u=i+c+"deg",h,d;return o&&(h=r.split("_")[1],h==="short"&&(c%=a,c!==c%(a/2)&&(c+=c<0?a:-a)),h==="cw"&&c<0?c=(c+a*FM)%a-~~(c/a)*a:h==="ccw"&&c>0&&(c=(c-a*FM)%a-~~(c/a)*a)),e._pt=d=new Qs(e._pt,t,s,i,c,Qye),d.e=u,d.u="deg",e._props.push(s),d},$M=function(e,t){for(var s in t)e[s]=t[s];return e},mbe=function(e,t,s){var i=$M({},s._gsap),r="perspective,force3D,transformOrigin,svgOrigin",a=s.style,o,l,c,u,h,d,p,m;i.svg?(c=s.getAttribute("transform"),s.setAttribute("transform",""),a[ln]=t,o=zd(s,1),Fd(s,ln),s.setAttribute("transform",c)):(c=getComputedStyle(s)[ln],a[ln]=t,o=zd(s,1),a[ln]=c);for(l in va)c=i[l],u=o[l],c!==u&&r.indexOf(l)<0&&(p=ms(c),m=ms(u),h=p!==m?mo(s,l,c,m):parseFloat(c),d=parseFloat(u),e._pt=new Qs(e._pt,o,l,h,d-h,yv),e._pt.u=m||0,e._props.push(l));$M(o,i)};js("padding,margin,Width,Radius",function(n,e){var t="Top",s="Right",i="Bottom",r="Left",a=(e<3?[t,s,i,r]:[t+r,t+s,i+s,i+r]).map(function(o){return e<2?n+o:"border"+o+n});Mg[e>1?"border"+n:n]=function(o,l,c,u,h){var d,p;if(arguments.length<4)return d=a.map(function(m){return sa(o,m,c)}),p=d.join(" "),p.split(d[0]).length===5?d[0]:p;d=(u+"").split(" "),p={},a.forEach(function(m,g){return p[m]=d[g]=d[g]||d[(g-1)/2|0]}),o.init(l,p,h)}});var KP={name:"css",register:xv,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,s,i,r){var a=this._props,o=e.style,l=s.vars.startAt,c,u,h,d,p,m,g,f,y,b,x,v,w,_,T,C;BT||xv(),this.styles=this.styles||WP(e),C=this.styles.props,this.tween=s;for(g in t)if(g!=="autoRound"&&(u=t[g],!(ci[g]&&NP(g,t,s,i,e,r)))){if(p=typeof u,m=Mg[g],p==="function"&&(u=u.call(s,i,e,r),p=typeof u),p==="string"&&~u.indexOf("random(")&&(u=Ld(u)),m)m(this,e,g,u,s)&&(T=1);else if(g.substr(0,2)==="--")c=(getComputedStyle(e).getPropertyValue(g)+"").trim(),u+="",so.lastIndex=0,so.test(c)||(f=ms(c),y=ms(u)),y?f!==y&&(c=mo(e,g,c,y)+y):f&&(u+=f),this.add(o,"setProperty",c,u,i,r,0,0,g),a.push(g),C.push(g,0,o[g]);else if(p!=="undefined"){if(l&&g in l?(c=typeof l[g]=="function"?l[g].call(s,i,e,r):l[g],Qn(c)&&~c.indexOf("random(")&&(c=Ld(c)),ms(c+"")||(c+=gi.units[g]||ms(sa(e,g))||""),(c+"").charAt(1)==="="&&(c=sa(e,g))):c=sa(e,g),d=parseFloat(c),b=p==="string"&&u.charAt(1)==="="&&u.substr(0,2),b&&(u=u.substr(2)),h=parseFloat(u),g in Er&&(g==="autoAlpha"&&(d===1&&sa(e,"visibility")==="hidden"&&h&&(d=0),C.push("visibility",0,o.visibility),Za(this,o,"visibility",d?"inherit":"hidden",h?"inherit":"hidden",!h)),g!=="scale"&&g!=="transform"&&(g=Er[g],~g.indexOf(",")&&(g=g.split(",")[0]))),x=g in va,x){if(this.styles.save(g),v||(w=e._gsap,w.renderTransform&&!t.parseTransform||zd(e,t.parseTransform),_=t.smoothOrigin!==!1&&w.smooth,v=this._pt=new Qs(this._pt,o,ln,0,1,w.renderTransform,w,0,-1),v.dep=1),g==="scale")this._pt=new Qs(this._pt,w,"scaleY",w.scaleY,(b?kc(w.scaleY,b+h):h)-w.scaleY||0,yv),this._pt.u=0,a.push("scaleY",g),g+="X";else if(g==="transformOrigin"){C.push(rr,0,o[rr]),u=ube(u),w.svg?vv(e,u,0,_,0,this):(y=parseFloat(u.split(" ")[2])||0,y!==w.zOrigin&&Za(this,w,"zOrigin",w.zOrigin,y),Za(this,o,g,Eg(c),Eg(u)));continue}else if(g==="svgOrigin"){vv(e,u,1,_,0,this);continue}else if(g in XP){fbe(this,w,g,d,b?kc(d,b+u):u);continue}else if(g==="smoothOrigin"){Za(this,w,"smooth",w.smooth,u);continue}else if(g==="force3D"){w[g]=u;continue}else if(g==="transform"){mbe(this,u,e);continue}}else g in o||(g=iu(g)||g);if(x||(h||h===0)&&(d||d===0)&&!jye.test(u)&&g in o)f=(c+"").substr((d+"").length),h||(h=0),y=ms(u)||(g in gi.units?gi.units[g]:f),f!==y&&(d=mo(e,g,c,y)),this._pt=new Qs(this._pt,x?w:o,g,d,(b?kc(d,b+h):h)-d,!x&&(y==="px"||g==="zIndex")&&t.autoRound!==!1?qye:yv),this._pt.u=y||0,f!==y&&y!=="%"&&(this._pt.b=c,this._pt.r=Jye);else if(g in o)cbe.call(this,e,g,c,b?b+u:u);else if(g in e)this.add(e,g,c||e[g],b?b+u:u,i,r);else if(g!=="parseTransform"){DT(g,u);continue}x||(g in o?C.push(g,0,o[g]):C.push(g,1,c||e[g])),a.push(g)}}T&&FP(this)},render:function(e,t){if(t.tween._time||!XT())for(var s=t._pt;s;)s.r(e,s.d),s=s._next;else t.styles.revert()},get:sa,aliases:Er,getSetter:function(e,t,s){var i=Er[t];return i&&i.indexOf(",")<0&&(t=i),t in va&&t!==rr&&(e._gsap.x||sa(e,"x"))?s&&DM===s?t==="scale"?sbe:nbe:(DM=s||{})&&(t==="scale"?ibe:rbe):e.style&&!AT(e.style[t])?ebe:~t.indexOf("-")?tbe:$T(e,t)},core:{_removeProperty:Fd,_getMatrix:ZT}};si.utils.checkPrefix=iu;si.core.getStyleSaver=WP;(function(n,e,t,s){var i=js(n+","+e+","+t,function(r){va[r]=1});js(e,function(r){gi.units[r]="deg",XP[r]=1}),Er[i[13]]=n+","+e,js(s,function(r){var a=r.split(":");Er[a[1]]=i[a[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");js("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(n){gi.units[n]="px"});si.registerPlugin(KP);var Jr=si.registerPlugin(KP)||si;Jr.core.Tween;/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.17.0
 * @author George Michael Brower
 * @license MIT
 */class Dr{constructor(e,t,s,i,r="div"){this.parent=e,this.object=t,this.property=s,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement("div"),this.domElement.classList.add("controller"),this.domElement.classList.add(i),this.$name=document.createElement("div"),this.$name.classList.add("name"),Dr.nextNameID=Dr.nextNameID||0,this.$name.id="lil-gui-name-"+ ++Dr.nextNameID,this.$widget=document.createElement(r),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(s)}name(e){return this._name=e,this.$name.innerHTML=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled||(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e)),this}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.object[this.property]=e,this._callOnChange(),this.updateDisplay(),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class gbe extends Dr{constructor(e,t,s){super(e,t,s,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function wv(n){let e,t;return(e=n.match(/(#|0x)?([a-f0-9]{6})/i))?t=e[2]:(e=n.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?t=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=n.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(t=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),!!t&&"#"+t}const ybe={isPrimitive:!0,match:n=>typeof n=="string",fromHexString:wv,toHexString:wv},Gd={isPrimitive:!0,match:n=>typeof n=="number",fromHexString:n=>parseInt(n.substring(1),16),toHexString:n=>"#"+n.toString(16).padStart(6,0)},bbe={isPrimitive:!1,match:Array.isArray,fromHexString(n,e,t=1){const s=Gd.fromHexString(n);e[0]=(s>>16&255)/255*t,e[1]=(s>>8&255)/255*t,e[2]=(255&s)/255*t},toHexString:([n,e,t],s=1)=>Gd.toHexString(n*(s=255/s)<<16^e*s<<8^t*s<<0)},xbe={isPrimitive:!1,match:n=>Object(n)===n,fromHexString(n,e,t=1){const s=Gd.fromHexString(n);e.r=(s>>16&255)/255*t,e.g=(s>>8&255)/255*t,e.b=(255&s)/255*t},toHexString:({r:n,g:e,b:t},s=1)=>Gd.toHexString(n*(s=255/s)<<16^e*s<<8^t*s<<0)},vbe=[ybe,Gd,bbe,xbe];class wbe extends Dr{constructor(e,t,s,i){var r;super(e,t,s,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(r=this.initialValue,vbe.find(a=>a.match(r))),this._rgbScale=i,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const a=wv(this.$text.value);a&&this._setValueFromHexString(a)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class qx extends Dr{constructor(e,t,s){super(e,t,s,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",i=>{i.preventDefault(),this.getValue().call(this.object)}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class Sbe extends Dr{constructor(e,t,s,i,r,a){super(e,t,s,"number"),this._initInput(),this.min(i),this.max(r);const o=a!==void 0;this.step(o?a:this._getImplicitStep(),o),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=100*t+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$disable=this.$input;const e=u=>{const h=parseFloat(this.$input.value);isNaN(h)||(this._snapClampSetValue(h+u),this.$input.value=this.getValue())};let t,s,i,r,a,o=!1;const l=u=>{if(o){const h=u.clientX-t,d=u.clientY-s;Math.abs(d)>5?(u.preventDefault(),this.$input.blur(),o=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(h)>5&&c()}if(!o){const h=u.clientY-i;a-=h*this._step*this._arrowKeyMultiplier(u),r+a>this._max?a=this._max-r:r+a<this._min&&(a=this._min-r),this._snapClampSetValue(r+a)}i=u.clientY},c=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",l),window.removeEventListener("mouseup",c)};this.$input.addEventListener("input",()=>{let u=parseFloat(this.$input.value);isNaN(u)||(this._stepExplicit&&(u=this._snap(u)),this.setValue(this._clamp(u)))}),this.$input.addEventListener("keydown",u=>{u.code==="Enter"&&this.$input.blur(),u.code==="ArrowUp"&&(u.preventDefault(),e(this._step*this._arrowKeyMultiplier(u))),u.code==="ArrowDown"&&(u.preventDefault(),e(this._step*this._arrowKeyMultiplier(u)*-1))}),this.$input.addEventListener("wheel",u=>{this._inputFocused&&(u.preventDefault(),e(this._step*this._normalizeMouseWheel(u)))},{passive:!1}),this.$input.addEventListener("mousedown",u=>{t=u.clientX,s=i=u.clientY,o=!0,r=this.getValue(),a=0,window.addEventListener("mousemove",l),window.addEventListener("mouseup",c)}),this.$input.addEventListener("focus",()=>{this._inputFocused=!0}),this.$input.addEventListener("blur",()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()})}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=d=>{const p=this.$slider.getBoundingClientRect();let m=(g=d,f=p.left,y=p.right,b=this._min,x=this._max,(g-f)/(y-f)*(x-b)+b);var g,f,y,b,x;this._snapClampSetValue(m)},t=d=>{e(d.clientX)},s=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",t),window.removeEventListener("mouseup",s)};let i,r,a=!1;const o=d=>{d.preventDefault(),this._setDraggingStyle(!0),e(d.touches[0].clientX),a=!1},l=d=>{if(a){const p=d.touches[0].clientX-i,m=d.touches[0].clientY-r;Math.abs(p)>Math.abs(m)?o(d):(window.removeEventListener("touchmove",l),window.removeEventListener("touchend",c))}else d.preventDefault(),e(d.touches[0].clientX)},c=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",l),window.removeEventListener("touchend",c)},u=this._callOnFinishChange.bind(this);let h;this.$slider.addEventListener("mousedown",d=>{this._setDraggingStyle(!0),e(d.clientX),window.addEventListener("mousemove",t),window.addEventListener("mouseup",s)}),this.$slider.addEventListener("touchstart",d=>{d.touches.length>1||(this._hasScrollBar?(i=d.touches[0].clientX,r=d.touches[0].clientY,a=!0):o(d),window.addEventListener("touchmove",l,{passive:!1}),window.addEventListener("touchend",c))},{passive:!1}),this.$slider.addEventListener("wheel",d=>{if(Math.abs(d.deltaX)<Math.abs(d.deltaY)&&this._hasScrollBar)return;d.preventDefault();const p=this._normalizeMouseWheel(d)*this._step;this._snapClampSetValue(this.getValue()+p),this.$input.value=this.getValue(),clearTimeout(h),h=setTimeout(u,400)},{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle("lil-gui-"+t,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:s}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,s=-e.wheelDelta/120,s*=this._stepExplicit?1:10),t+-s}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){const t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class _be extends Dr{constructor(e,t,s,i){super(e,t,s,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this._values=Array.isArray(i)?i:Object.values(i),this._names=Array.isArray(i)?i:Object.keys(i),this._names.forEach(r=>{const a=document.createElement("option");a.innerHTML=r,this.$select.appendChild(a)}),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.updateDisplay()}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.innerHTML=t===-1?e:this._names[t],this}}class Tbe extends Dr{constructor(e,t,s){super(e,t,s,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",i=>{i.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let UM=!1;class KT{constructor({parent:e,autoPlace:t=e===void 0,container:s,width:i,title:r="Controls",injectStyles:a=!0,touchStyles:o=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("keydown",l=>{l.code!=="Enter"&&l.code!=="Space"||(l.preventDefault(),this.$title.click())}),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),o&&this.domElement.classList.add("allow-touch-styles"),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),!UM&&a&&(function(l){const c=document.createElement("style");c.innerHTML=l;const u=document.querySelector("head link[rel=stylesheet], head style");u?document.head.insertBefore(c,u):document.head.appendChild(c)}('.lil-gui{--background-color:#1f1f1f;--text-color:#ebebeb;--title-background-color:#111;--title-text-color:#ebebeb;--widget-color:#424242;--hover-color:#4f4f4f;--focus-color:#595959;--number-color:#2cc9ff;--string-color:#a2db3c;--font-size:11px;--input-font-size:11px;--font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Arial,sans-serif;--font-family-mono:Menlo,Monaco,Consolas,"Droid Sans Mono",monospace;--padding:4px;--spacing:4px;--widget-height:20px;--name-width:45%;--slider-knob-width:2px;--slider-input-width:27%;--color-input-width:27%;--slider-input-min-width:45px;--color-input-min-width:45px;--folder-indent:7px;--widget-padding:0 0 0 3px;--widget-border-radius:2px;--checkbox-size:calc(var(--widget-height)*0.75);--scrollbar-width:5px;background-color:var(--background-color);color:var(--text-color);font-family:var(--font-family);font-size:var(--font-size);font-style:normal;font-weight:400;line-height:1;text-align:left;touch-action:manipulation;user-select:none;-webkit-user-select:none}.lil-gui,.lil-gui *{box-sizing:border-box;margin:0;padding:0}.lil-gui.root{display:flex;flex-direction:column;width:var(--width,245px)}.lil-gui.root>.title{background:var(--title-background-color);color:var(--title-text-color)}.lil-gui.root>.children{overflow-x:hidden;overflow-y:auto}.lil-gui.root>.children::-webkit-scrollbar{background:var(--background-color);height:var(--scrollbar-width);width:var(--scrollbar-width)}.lil-gui.root>.children::-webkit-scrollbar-thumb{background:var(--focus-color);border-radius:var(--scrollbar-width)}.lil-gui.force-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}.lil-gui.autoPlace{max-height:100%;position:fixed;right:15px;top:0;z-index:1001}.lil-gui .controller{align-items:center;display:flex;margin:var(--spacing) 0;padding:0 var(--padding)}.lil-gui .controller.disabled{opacity:.5}.lil-gui .controller.disabled,.lil-gui .controller.disabled *{pointer-events:none!important}.lil-gui .controller>.name{flex-shrink:0;line-height:var(--widget-height);min-width:var(--name-width);padding-right:var(--spacing);white-space:pre}.lil-gui .controller .widget{align-items:center;display:flex;min-height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.string input{color:var(--string-color)}.lil-gui .controller.boolean .widget{cursor:pointer}.lil-gui .controller.color .display{border-radius:var(--widget-border-radius);height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.color input[type=color]{cursor:pointer;height:100%;opacity:0;width:100%}.lil-gui .controller.color input[type=text]{flex-shrink:0;font-family:var(--font-family-mono);margin-left:var(--spacing);min-width:var(--color-input-min-width);width:var(--color-input-width)}.lil-gui .controller.option select{max-width:100%;opacity:0;position:absolute;width:100%}.lil-gui .controller.option .display{background:var(--widget-color);border-radius:var(--widget-border-radius);height:var(--widget-height);line-height:var(--widget-height);max-width:100%;overflow:hidden;padding-left:.55em;padding-right:1.75em;pointer-events:none;position:relative;word-break:break-all}.lil-gui .controller.option .display.active{background:var(--focus-color)}.lil-gui .controller.option .display:after{bottom:0;content:"↕";font-family:lil-gui;padding-right:.375em;position:absolute;right:0;top:0}.lil-gui .controller.option .widget,.lil-gui .controller.option select{cursor:pointer}.lil-gui .controller.number input{color:var(--number-color)}.lil-gui .controller.number.hasSlider input{flex-shrink:0;margin-left:var(--spacing);min-width:var(--slider-input-min-width);width:var(--slider-input-width)}.lil-gui .controller.number .slider{background-color:var(--widget-color);border-radius:var(--widget-border-radius);cursor:ew-resize;height:var(--widget-height);overflow:hidden;padding-right:var(--slider-knob-width);touch-action:pan-y;width:100%}.lil-gui .controller.number .slider.active{background-color:var(--focus-color)}.lil-gui .controller.number .slider.active .fill{opacity:.95}.lil-gui .controller.number .fill{border-right:var(--slider-knob-width) solid var(--number-color);box-sizing:content-box;height:100%}.lil-gui-dragging .lil-gui{--hover-color:var(--widget-color)}.lil-gui-dragging *{cursor:ew-resize!important}.lil-gui-dragging.lil-gui-vertical *{cursor:ns-resize!important}.lil-gui .title{--title-height:calc(var(--widget-height) + var(--spacing)*1.25);-webkit-tap-highlight-color:transparent;text-decoration-skip:objects;cursor:pointer;font-weight:600;height:var(--title-height);line-height:calc(var(--title-height) - 4px);outline:none;padding:0 var(--padding)}.lil-gui .title:before{content:"▾";display:inline-block;font-family:lil-gui;padding-right:2px}.lil-gui .title:active{background:var(--title-background-color);opacity:.75}.lil-gui.root>.title:focus{text-decoration:none!important}.lil-gui.closed>.title:before{content:"▸"}.lil-gui.closed>.children{opacity:0;transform:translateY(-7px)}.lil-gui.closed:not(.transition)>.children{display:none}.lil-gui.transition>.children{overflow:hidden;pointer-events:none;transition-duration:.3s;transition-property:height,opacity,transform;transition-timing-function:cubic-bezier(.2,.6,.35,1)}.lil-gui .children:empty:before{content:"Empty";display:block;font-style:italic;height:var(--widget-height);line-height:var(--widget-height);margin:var(--spacing) 0;opacity:.5;padding:0 var(--padding)}.lil-gui.root>.children>.lil-gui>.title{border-width:0;border-bottom:1px solid var(--widget-color);border-left:0 solid var(--widget-color);border-right:0 solid var(--widget-color);border-top:1px solid var(--widget-color);transition:border-color .3s}.lil-gui.root>.children>.lil-gui.closed>.title{border-bottom-color:transparent}.lil-gui+.controller{border-top:1px solid var(--widget-color);margin-top:0;padding-top:var(--spacing)}.lil-gui .lil-gui .lil-gui>.title{border:none}.lil-gui .lil-gui .lil-gui>.children{border:none;border-left:2px solid var(--widget-color);margin-left:var(--folder-indent)}.lil-gui .lil-gui .controller{border:none}.lil-gui input{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:0;border-radius:var(--widget-border-radius);color:var(--text-color);font-family:var(--font-family);font-size:var(--input-font-size);height:var(--widget-height);outline:none;width:100%}.lil-gui input:disabled{opacity:1}.lil-gui input[type=number],.lil-gui input[type=text]{padding:var(--widget-padding)}.lil-gui input[type=number]:focus,.lil-gui input[type=text]:focus{background:var(--focus-color)}.lil-gui input::-webkit-inner-spin-button,.lil-gui input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.lil-gui input[type=number]{-moz-appearance:textfield}.lil-gui input[type=checkbox]{appearance:none;-webkit-appearance:none;border-radius:var(--widget-border-radius);cursor:pointer;height:var(--checkbox-size);text-align:center;width:var(--checkbox-size)}.lil-gui input[type=checkbox]:checked:before{content:"✓";font-family:lil-gui;font-size:var(--checkbox-size);line-height:var(--checkbox-size)}.lil-gui button{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:1px solid var(--widget-color);border-radius:var(--widget-border-radius);color:var(--text-color);cursor:pointer;font-family:var(--font-family);font-size:var(--font-size);height:var(--widget-height);line-height:calc(var(--widget-height) - 4px);outline:none;text-align:center;text-transform:none;width:100%}.lil-gui button:active{background:var(--focus-color)}@font-face{font-family:lil-gui;src:url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff")}@media (pointer:coarse){.lil-gui.allow-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}}@media (hover:hover){.lil-gui .controller.color .display:hover:before{border:1px solid #fff9;border-radius:var(--widget-border-radius);bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0}.lil-gui .controller.option .display.focus{background:var(--focus-color)}.lil-gui .controller.option .widget:hover .display{background:var(--hover-color)}.lil-gui .controller.number .slider:hover{background-color:var(--hover-color)}body:not(.lil-gui-dragging) .lil-gui .title:hover{background:var(--title-background-color);opacity:.85}.lil-gui .title:focus{text-decoration:underline var(--focus-color)}.lil-gui input:hover{background:var(--hover-color)}.lil-gui input:active{background:var(--focus-color)}.lil-gui input[type=checkbox]:focus{box-shadow:inset 0 0 0 1px var(--focus-color)}.lil-gui button:hover{background:var(--hover-color);border-color:var(--hover-color)}.lil-gui button:focus{border-color:var(--focus-color)}}'),UM=!0),s?s.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),i&&this.domElement.style.setProperty("--width",i+"px"),this.domElement.addEventListener("keydown",l=>l.stopPropagation()),this.domElement.addEventListener("keyup",l=>l.stopPropagation())}add(e,t,s,i,r){if(Object(s)===s)return new _be(this,e,t,s);const a=e[t];switch(typeof a){case"number":return new Sbe(this,e,t,s,i,r);case"boolean":return new gbe(this,e,t);case"string":return new Tbe(this,e,t);case"function":return new qx(this,e,t)}console.error(`gui.add failed
	property:`,t,`
	object:`,e,`
	value:`,a)}addColor(e,t,s=1){return new wbe(this,e,t,s)}addFolder(e){return new KT({parent:this,title:e})}load(e,t=!0){return e.controllers&&this.controllers.forEach(s=>{s instanceof qx||s._name in e.controllers&&s.load(e.controllers[s._name])}),t&&e.folders&&this.folders.forEach(s=>{s._title in e.folders&&s.load(e.folders[s._title])}),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach(s=>{if(!(s instanceof qx)){if(s._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${s._name}"`);t.controllers[s._name]=s.save()}}),e&&this.folders.forEach(s=>{if(s._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${s._title}"`);t.folders[s._title]=s.save()}),t}open(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const s=r=>{r.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",s))};this.$children.addEventListener("transitionend",s);const i=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame(()=>{this.$children.style.height=i+"px"})}),this}title(e){return this._title=e,this.$title.innerHTML=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach(t=>t.reset()),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),this._onChange!==void 0&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(e=>e.destroy())}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach(t=>{e=e.concat(t.controllersRecursive())}),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach(t=>{e=e.concat(t.foldersRecursive())}),e}}var Ibe="../diwali-ar-demo/",$r=Ibe;const YT=new Y3({container:document.querySelector("#container"),imageTargetSrc:$r+"greeting-card-tracker.mind",filterMinCF:.001,filterBeta:.001});var BM=new vW,e1=new zt;Lt.enabled=!0;const Io=new fW,{renderer:Vd,scene:YP,camera:jT}=YT,QT=YT.addAnchor(0),jP=new bW;jT.add(jP);const Ac=new xW(jP),Cbe=new mW;Cbe.load($r+"indian-percussion-ethnic-drums-156542.mp3",function(n){Ac.setBuffer(n),Ac.setLoop(!0),Ac.setVolume(.5)});Vd.outputColorSpace=Dn;const Mbe=new Bd(.98,1.4),Ebe=new cr({color:16777215,map:Io.load($r+"backGround.png")}),JT=new Ft(Mbe,Ebe),Xn=new Bd(1,1),cb=new cr({color:255,colorWrite:!1}),ub=new Ft(Xn,cb),hb=new Ft(Xn,cb),db=new Ft(Xn,cb),pb=new Ft(Xn,cb),fb=new cr({color:16777215,transparent:!0,blending:Pm,map:Io.load($r+"bokeh.png")}),mb=new Ft(Xn,fb),gb=new Ft(Xn,fb),yb=new Ft(Xn,fb),bb=new Ft(Xn,fb),kbe=new cr({color:16777215,map:Io.load($r+"circle.png"),transparent:!0,depthTest:!1}),qT=new cr({color:16777215,map:Io.load($r+"circle.png"),transparent:!0,depthTest:!0,opacity:.5}),ru=new Ft(Xn,kbe),$i=new Ft(Xn,qT),au=new Ft(Xn,qT),ou=new Ft(Xn,qT);var QP=Io.load($r+"diya.png");QP.colorSpace=Dn;const Nbe=new cr({map:QP,transparent:!0,depthTest:!1}),Lh=new Ft(Xn,Nbe);Lh.name="diya";Lh.callback=function(){Obe()};var JP=Io.load($r+"flame1.png");const xb=new cr({color:16244840,map:JP,blending:Pm,transparent:!0,opacity:.5,depthWrite:!1,depthTest:!1}),vb=new Ft(Xn,xb),wb=new Ft(Xn,xb),Sb=new Ft(Xn,xb),_b=new Ft(Xn,xb),Rbe=new cr({map:Io.load($r+"message.png"),transparent:!0,depthTest:!1}),lu=new Ft(Xn,Rbe),Abe=new cr({map:Io.load($r+"tap_to_light.png"),transparent:!0,depthTest:!1}),Tb=new Ft(Xn,Abe);ub.renderOrder=0;hb.renderOrder=0;db.renderOrder=0;pb.renderOrder=0;ub.position.set(0,-1.21,.011);ub.scale.set(2,1,1);hb.position.set(0,1.21,.011);hb.scale.set(2,1,1);db.position.set(-.99,0,.011);db.scale.set(1,2,1);pb.position.set(.99,0,.011);pb.scale.set(1,2,1);JT.scale.set(1.024,1.024,1);mb.scale.set(.1,.1,.1);mb.position.set(-.38,.6,.01);gb.scale.set(.3,.3,.3);gb.position.set(.3,.5,.01);yb.scale.set(.25,.25,.25);yb.position.set(-.35,-.38,.01);bb.scale.set(.8,.8,.8);bb.position.set(.4,-.7,.01);$i.scale.set(0,0,0);$i.position.set(-.46,.65,.005);au.scale.set(0,0,0);au.position.set(.564,-.27,.005);ou.scale.set(0,0,0);ou.position.set(-.23,-.7,.005);ru.position.set(0,.1,.02);ru.scale.set(0,0,0);lu.scale.set(.5,.5,.5);lu.position.set(0,.1,.025);Tb.scale.set(.5,.5,.5);Tb.position.set(0,.1,.02);Lh.scale.set(.65,.3,.8);Lh.position.set(0,-.33,.08);vb.scale.set(.14,.14,.14);vb.position.set(.01,-.12,.085);wb.scale.set(.16,.15,.15);wb.position.set(.01,-.12,.085);Sb.scale.set(.18,.19,.16);Sb.position.set(.01,-.12,.085);_b.scale.set(.22,.22,.15);_b.position.set(.01,-.12,.085);const cu=new Ko;cu.add(vb,wb,Sb,_b);cu.position.set(0,-.2,0);cu.scale.set(1,0,1);new Dbe(JP,3,2,83);JT.renderOrder=1;mb.renderOrder=1;gb.renderOrder=1;yb.renderOrder=1;bb.renderOrder=1;ru.renderOrder=1;$i.renderOrder=1;au.renderOrder=1;ou.renderOrder=1;lu.renderOrder=1;Lh.renderOrder=2;vb.renderOrder=3;wb.renderOrder=3;Sb.renderOrder=3;_b.renderOrder=3;QT.group.add(ub,hb,db,pb,JT,mb,gb,yb,bb,Tb,ru,lu,Lh,$i,au,ou,cu);var qP=!1;const Lbe=async()=>{document.querySelector("#control").style.display="none",await YT.start(),lu.scale.set(0,0,0),Vd.setAnimationLoop(()=>{QT.visible?qP&&(Ac.isPlaying||Ac.play(),Jr.to(cu.scale,{duration:2,x:1,y:1,z:1}),Jr.to(Tb.scale,{duration:.5,x:0,y:0,z:0}),Jr.to(cu.position,{duration:2,x:0,y:0,z:0}),Jr.to(ru.scale,{duration:2,x:.85,y:.85,z:.85,delay:.5}),Jr.to(lu.scale,{duration:2,x:.5,y:.5,z:.5,delay:2}),Jr.to($i.scale,{duration:1,x:.35,y:.35,z:.35,delay:1}),Jr.to(au.scale,{duration:1,x:.35,y:.35,z:.35,delay:1}),Jr.to(ou.scale,{duration:1,x:.4,y:.4,z:.4,delay:1})):Ac.pause(),ru.rotation.z-=.005,$i.rotation.z-=.001,au.rotation.z-=.001,ou.rotation.z-=.001,Vd.render(YP,jT)})},Pbe=document.querySelector("#startButton");Pbe.addEventListener("click",()=>{Lbe()});function Dbe(n,e,t,s){let i={};return i.texture=n,i.tilesHorizontal=e,i.tilesVertical=t,i.tileDisplayDuration=s,i.numberOfTiles=e*t,i.texture.wrapS=cd,i.texture.wrapT=cd,i.texture.repeat.set(1/e,1/t),i.currentTile=0,i.nextFrame=function(){i.currentTile++,i.currentTile==i.numberOfTiles&&(i.currentTile=0);let r=i.currentTile%i.tilesHorizontal;i.texture.offset.x=r/i.tilesHorizontal;let a=Math.floor(i.currentTile/i.tilesHorizontal);i.texture.offset.y=i.tilesVertical-a/i.tilesVertical},i.start=function(){i.intervalID=setInterval(i.nextFrame,i.tileDisplayDuration)},i.stop=function(){clearInterval(i.intervalID)},i.start(),i}window.addEventListener("click",Fbe,!1);function Fbe(n){n.preventDefault(),e1.x=n.clientX/Vd.domElement.clientWidth*2-1,e1.y=-(n.clientY/Vd.domElement.clientHeight)*2+1,BM.setFromCamera(e1,jT);var e=BM.intersectObjects(YP.children);QT.visible&&e.length>0&&(console.log(e),e[0].object.name=="diya"&&e[0].object.callback(),console.log(e[0].object.name))}function Obe(){qP=!0}const eD=new KT,e2=eD.addFolder("position");e2.add($i.position,"x",-3,3).onChange(n=>{});e2.add($i.position,"y",-3,3).onChange(n=>{});e2.add($i.position,"z",-3,3).onChange(n=>{});const t2=eD.addFolder("scale");t2.add($i.scale,"x",0,2).onChange(n=>{});t2.add($i.scale,"y",0,2).onChange(n=>{});t2.add($i.scale,"z",0,2).onChange(n=>{});
